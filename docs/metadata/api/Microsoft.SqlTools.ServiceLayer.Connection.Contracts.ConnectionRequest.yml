### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionRequest
  commentId: T:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionRequest
  id: ConnectionRequest
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  children:
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionRequest.Type
  langs:
  - csharp
  - vb
  name: ConnectionRequest
  nameWithType: ConnectionRequest
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionRequest
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionRequest.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ConnectionRequest
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionRequest.cs
    startLine: 12
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nConnect request mapping entry \n"
  example: []
  syntax:
    content: public class ConnectionRequest
    content.vb: Public Class ConnectionRequest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionRequest.Type
  commentId: F:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionRequest.Type
  id: Type
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionRequest
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ConnectionRequest.Type
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionRequest.Type
  type: Field
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionRequest.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Type
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionRequest.cs
    startLine: 15
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  syntax:
    content: public static readonly RequestType<ConnectParams, bool> Type
    content.vb: Public Shared ReadOnly Type As RequestType(Of ConnectParams, Boolean)
    return:
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectParams,System.Boolean}
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectParams,System.Boolean}
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectParams,System.Boolean}
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
  name: RequestType<ConnectParams, Boolean>
  nameWithType: RequestType<ConnectParams, Boolean>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectParams, System.Boolean>
  nameWithType.vb: RequestType(Of ConnectParams, Boolean)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectParams, System.Boolean)
  name.vb: RequestType(Of ConnectParams, Boolean)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectParams
    name: ConnectParams
    nameWithType: ConnectParams
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectParams
    name: ConnectParams
    nameWithType: ConnectParams
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: RequestType<TParams, TResult>
  nameWithType: RequestType<TParams, TResult>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>
  nameWithType.vb: RequestType(Of TParams, TResult)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult)
  name.vb: RequestType(Of TParams, TResult)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
