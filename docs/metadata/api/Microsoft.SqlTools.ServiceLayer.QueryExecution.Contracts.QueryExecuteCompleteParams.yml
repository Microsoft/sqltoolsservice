### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams
  id: QueryExecuteCompleteParams
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  children:
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.BatchSummaries
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.Message
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.OwnerUri
  langs:
  - csharp
  - vb
  name: QueryExecuteCompleteParams
  nameWithType: QueryExecuteCompleteParams
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/QueryExecuteCompleteNotification.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: QueryExecuteCompleteParams
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/QueryExecuteCompleteNotification.cs
    startLine: 12
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nParameters to be sent back with a query execution complete event\n"
  example: []
  syntax:
    content: public class QueryExecuteCompleteParams
    content.vb: Public Class QueryExecuteCompleteParams
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.OwnerUri
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.OwnerUri
  id: OwnerUri
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams
  langs:
  - csharp
  - vb
  name: OwnerUri
  nameWithType: QueryExecuteCompleteParams.OwnerUri
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.OwnerUri
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/QueryExecuteCompleteNotification.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: OwnerUri
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/QueryExecuteCompleteNotification.cs
    startLine: 17
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nURI for the editor that owns the query\n"
  example: []
  syntax:
    content: public string OwnerUri { get; set; }
    content.vb: Public Property OwnerUri As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.OwnerUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.BatchSummaries
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.BatchSummaries
  id: BatchSummaries
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams
  langs:
  - csharp
  - vb
  name: BatchSummaries
  nameWithType: QueryExecuteCompleteParams.BatchSummaries
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.BatchSummaries
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/QueryExecuteCompleteNotification.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: BatchSummaries
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/QueryExecuteCompleteNotification.cs
    startLine: 22
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nSummaries of the result sets that were returned with the query\n"
  example: []
  syntax:
    content: public BatchSummary[] BatchSummaries { get; set; }
    content.vb: Public Property BatchSummaries As BatchSummary()
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary[]
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.BatchSummaries*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.Message
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.Message
  id: Message
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: QueryExecuteCompleteParams.Message
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.Message
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/QueryExecuteCompleteNotification.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Message
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/QueryExecuteCompleteNotification.cs
    startLine: 27
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nError message, if any\n"
  example: []
  syntax:
    content: public string Message { get; set; }
    content.vb: Public Property Message As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.OwnerUri*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.OwnerUri
  isExternal: false
  name: OwnerUri
  nameWithType: QueryExecuteCompleteParams.OwnerUri
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.OwnerUri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.BatchSummaries*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.BatchSummaries
  isExternal: false
  name: BatchSummaries
  nameWithType: QueryExecuteCompleteParams.BatchSummaries
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.BatchSummaries
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary[]
  name: BatchSummary[]
  nameWithType: BatchSummary[]
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary[]
  nameWithType.vb: BatchSummary()
  fullname.vb: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary()
  name.vb: BatchSummary()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
    name: BatchSummary
    nameWithType: BatchSummary
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
    name: BatchSummary
    nameWithType: BatchSummary
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.Message*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.Message
  isExternal: false
  name: Message
  nameWithType: QueryExecuteCompleteParams.Message
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.QueryExecuteCompleteParams.Message
