### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1
  commentId: T:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1
  id: LongList`1
  parent: Microsoft.SqlTools.ServiceLayer.Utility
  children:
  - Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.#ctor
  - Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Add(`0)
  - Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Count
  - Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.ExpandListSize
  - Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.GetEnumerator
  - Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.GetItem(System.Int64)
  - Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Item(System.Int64)
  - Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.RemoveAt(System.Int64)
  - Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: LongList<T>
  nameWithType: LongList<T>
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList<T>
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: LongList
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
    startLine: 21
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nCollection class that permits storage of over <code>int.MaxValue</code> items. This is performed\nby using a 2D list of lists. The internal lists are only initialized as necessary. This\ncollection implements IEnumerable to make it easier to run LINQ queries against it.\n"
  remarks: "\nThis class is based on code from $\\Data Tools\\SSMS_Main\\sql\\ssms\\core\\DataStorage\\ArrayList64.cs\nwith additions to bring it up to .NET 4.5 standards\n"
  example: []
  syntax:
    content: 'public class LongList<T> : IEnumerable<T>, IEnumerable'
    content.vb: >-
      Public Class LongList(Of T)
          Implements IEnumerable(Of T), IEnumerable
    typeParameters:
    - id: T
      description: Type of the values to store
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: LongList(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Utility.LongList(Of T)
  name.vb: LongList(Of T)
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.#ctor
  commentId: M:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.#ctor
  id: '#ctor'
  parent: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1
  langs:
  - csharp
  - vb
  name: LongList()
  nameWithType: LongList<T>.LongList()
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList<T>.LongList()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
    startLine: 34
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nCreates a new long list\n"
  example: []
  syntax:
    content: public LongList()
    content.vb: Public Sub New
  overload: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.#ctor*
  nameWithType.vb: LongList(Of T).LongList()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Utility.LongList(Of T).LongList()
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Count
  commentId: P:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Count
  id: Count
  parent: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: LongList<T>.Count
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList<T>.Count
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Count
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
    startLine: 45
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nThe total number of elements in the array\n"
  example: []
  syntax:
    content: public long Count { get; }
    content.vb: Public ReadOnly Property Count As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Count*
  nameWithType.vb: LongList(Of T).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Utility.LongList(Of T).Count
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Item(System.Int64)
  commentId: P:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Item(System.Int64)
  id: Item(System.Int64)
  parent: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1
  langs:
  - csharp
  - vb
  name: Item[Int64]
  nameWithType: LongList<T>.Item[Int64]
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList<T>.Item[System.Int64]
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: this[]
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
    startLine: 47
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  syntax:
    content: public T this[long index] { get; }
    content.vb: Public ReadOnly Property Item(index As Long) As T
    parameters:
    - id: index
      type: System.Int64
    return:
      type: '{T}'
  overload: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Item*
  nameWithType.vb: LongList(Of T).Item(Int64)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Utility.LongList(Of T).Item(System.Int64)
  name.vb: Item(Int64)
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.ExpandListSize
  commentId: P:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.ExpandListSize
  id: ExpandListSize
  parent: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1
  langs:
  - csharp
  - vb
  name: ExpandListSize
  nameWithType: LongList<T>.ExpandListSize
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList<T>.ExpandListSize
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ExpandListSize
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
    startLine: 55
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  syntax:
    content: public int ExpandListSize { get; }
    content.vb: Public ReadOnly Property ExpandListSize As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.ExpandListSize*
  nameWithType.vb: LongList(Of T).ExpandListSize
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Utility.LongList(Of T).ExpandListSize
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Add(`0)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Add(`0)
  id: Add(`0)
  parent: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: LongList<T>.Add(T)
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList<T>.Add(T)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Add
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
    startLine: 76
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nAdds the specified value to the end of the list\n"
  example: []
  syntax:
    content: public long Add(T val)
    content.vb: Public Function Add(val As T) As Long
    parameters:
    - id: val
      type: '{T}'
      description: Value to add to the list
    return:
      type: System.Int64
      description: Index of the item that was just added
  overload: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Add*
  nameWithType.vb: LongList(Of T).Add(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Utility.LongList(Of T).Add(T)
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.GetItem(System.Int64)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.GetItem(System.Int64)
  id: GetItem(System.Int64)
  parent: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1
  langs:
  - csharp
  - vb
  name: GetItem(Int64)
  nameWithType: LongList<T>.GetItem(Int64)
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList<T>.GetItem(System.Int64)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetItem
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
    startLine: 113
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nReturns the item at the specified index\n"
  example: []
  syntax:
    content: public T GetItem(long index)
    content.vb: Public Function GetItem(index As Long) As T
    parameters:
    - id: index
      type: System.Int64
      description: Index of the item to return
    return:
      type: '{T}'
      description: The item at the index specified
  overload: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.GetItem*
  nameWithType.vb: LongList(Of T).GetItem(Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Utility.LongList(Of T).GetItem(System.Int64)
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.RemoveAt(System.Int64)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.RemoveAt(System.Int64)
  id: RemoveAt(System.Int64)
  parent: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1
  langs:
  - csharp
  - vb
  name: RemoveAt(Int64)
  nameWithType: LongList<T>.RemoveAt(Int64)
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList<T>.RemoveAt(System.Int64)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: RemoveAt
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
    startLine: 144
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nRemoves an item at the specified location and shifts all the items after the provided\nindex up by one.\n"
  example: []
  syntax:
    content: public void RemoveAt(long index)
    content.vb: Public Sub RemoveAt(index As Long)
    parameters:
    - id: index
      type: System.Int64
      description: The index to remove from the list
  overload: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.RemoveAt*
  nameWithType.vb: LongList(Of T).RemoveAt(Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Utility.LongList(Of T).RemoveAt(System.Int64)
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.GetEnumerator
  commentId: M:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: LongList<T>.GetEnumerator()
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetEnumerator
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
    startLine: 183
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nReturns a generic enumerator for enumeration of this LongList\n"
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: Enumerator for LongList
  overload: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: LongList(Of T).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Utility.LongList(Of T).GetEnumerator()
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: LongList<T>.IEnumerable.GetEnumerator()
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/LongList.cs
    startLine: 192
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nReturns an enumerator for enumeration of this LongList\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: ''
  overload: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: LongList(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Utility.LongList(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: Microsoft.SqlTools.ServiceLayer.Utility
  commentId: N:Microsoft.SqlTools.ServiceLayer.Utility
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Utility
  nameWithType: Microsoft.SqlTools.ServiceLayer.Utility
  fullName: Microsoft.SqlTools.ServiceLayer.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.#ctor
  isExternal: false
  name: LongList
  nameWithType: LongList.LongList
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList.LongList
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Count*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Count
  isExternal: false
  name: Count
  nameWithType: LongList<T>.Count
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList<T>.Count
  nameWithType.vb: LongList(Of T).Count
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Utility.LongList(Of T).Count
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Item*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Item
  isExternal: false
  name: Item
  nameWithType: LongList<T>.Item
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList<T>.Item
  nameWithType.vb: LongList(Of T).Item
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Utility.LongList(Of T).Item
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.ExpandListSize*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.ExpandListSize
  isExternal: false
  name: ExpandListSize
  nameWithType: LongList<T>.ExpandListSize
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList<T>.ExpandListSize
  nameWithType.vb: LongList(Of T).ExpandListSize
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Utility.LongList(Of T).ExpandListSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Add*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.Add
  isExternal: false
  name: Add
  nameWithType: LongList.Add
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList.Add
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.GetItem*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.GetItem
  isExternal: false
  name: GetItem
  nameWithType: LongList.GetItem
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList.GetItem
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.RemoveAt*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.RemoveAt
  isExternal: false
  name: RemoveAt
  nameWithType: LongList.RemoveAt
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList.RemoveAt
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.GetEnumerator*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: LongList.GetEnumerator
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.LongList`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: LongList.IEnumerable.GetEnumerator
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LongList.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: LongList.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
