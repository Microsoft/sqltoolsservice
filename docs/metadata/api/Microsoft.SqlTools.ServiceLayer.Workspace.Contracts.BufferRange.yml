### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  commentId: T:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  id: BufferRange
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  children:
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.#ctor(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition,Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.End
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Equals(System.Object)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.GetHashCode
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.HasRange
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.None
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Start
  langs:
  - csharp
  - vb
  name: BufferRange
  nameWithType: BufferRange
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: BufferRange
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
    startLine: 14
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nProvides details about a range between two positions in\na file buffer.\n"
  example: []
  syntax:
    content: public class BufferRange
    content.vb: Public Class BufferRange
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.None
  commentId: F:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.None
  id: None
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  langs:
  - csharp
  - vb
  name: None
  nameWithType: BufferRange.None
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.None
  type: Field
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: None
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
    startLine: 22
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nProvides an instance that represents a range that has not been set.\n"
  example: []
  syntax:
    content: public static readonly BufferRange None
    content.vb: Public Shared ReadOnly None As BufferRange
    return:
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Start
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Start
  id: Start
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: BufferRange.Start
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Start
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Start
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
    startLine: 27
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nGets the start position of the range in the buffer.\n"
  example: []
  syntax:
    content: public BufferPosition Start { get; }
    content.vb: Public ReadOnly Property Start As BufferPosition
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Start*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.End
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.End
  id: End
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  langs:
  - csharp
  - vb
  name: End
  nameWithType: BufferRange.End
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.End
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: End
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
    startLine: 32
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nGets the end position of the range in the buffer.\n"
  example: []
  syntax:
    content: public BufferPosition End { get; }
    content.vb: Public ReadOnly Property End As BufferPosition
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.End*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.HasRange
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.HasRange
  id: HasRange
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  langs:
  - csharp
  - vb
  name: HasRange
  nameWithType: BufferRange.HasRange
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.HasRange
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: HasRange
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
    startLine: 38
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nReturns true if the current range is non-zero, i.e.\ncontains valid start and end positions.\n"
  example: []
  syntax:
    content: public bool HasRange { get; }
    content.vb: Public ReadOnly Property HasRange As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.HasRange*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.#ctor(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition,Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.#ctor(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition,Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition)
  id: '#ctor(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition,Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition)'
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  langs:
  - csharp
  - vb
  name: BufferRange(BufferPosition, BufferPosition)
  nameWithType: BufferRange.BufferRange(BufferPosition, BufferPosition)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.BufferRange(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition, Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
    startLine: 55
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nCreates a new instance of the BufferRange class.\n"
  example: []
  syntax:
    content: public BufferRange(BufferPosition start, BufferPosition end)
    content.vb: Public Sub New(start As BufferPosition, end As BufferPosition)
    parameters:
    - id: start
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition
      description: The start position of the range.
    - id: end
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition
      description: The end position of the range.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  langs:
  - csharp
  - vb
  name: BufferRange(Int32, Int32, Int32, Int32)
  nameWithType: BufferRange.BufferRange(Int32, Int32, Int32, Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.BufferRange(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
    startLine: 74
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nCreates a new instance of the BufferRange class.\n"
  example: []
  syntax:
    content: public BufferRange(int startLine, int startColumn, int endLine, int endColumn)
    content.vb: Public Sub New(startLine As Integer, startColumn As Integer, endLine As Integer, endColumn As Integer)
    parameters:
    - id: startLine
      type: System.Int32
      description: The 1-based starting line number of the range.
    - id: startColumn
      type: System.Int32
      description: The 1-based starting column number of the range.
    - id: endLine
      type: System.Int32
      description: The 1-based ending line number of the range.
    - id: endColumn
      type: System.Int32
      description: The 1-based ending column number of the range.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Equals(System.Object)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BufferRange.Equals(Object)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Equals
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
    startLine: 93
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nCompares two instances of the BufferRange class.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to which this instance will be compared.
    return:
      type: System.Boolean
      description: True if the ranges are equal, false otherwise.
  overridden: System.Object.Equals(System.Object)
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.GetHashCode
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.GetHashCode
  id: GetHashCode
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BufferRange.GetHashCode()
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetHashCode
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/BufferRange.cs
    startLine: 111
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nCalculates a unique hash code that represents this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A hash code representing this instance.
  overridden: System.Object.GetHashCode
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  commentId: T:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  isExternal: false
  name: BufferRange
  nameWithType: BufferRange
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Start*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Start
  isExternal: false
  name: Start
  nameWithType: BufferRange.Start
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Start
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition
  commentId: T:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  isExternal: false
  name: BufferPosition
  nameWithType: BufferPosition
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.End*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.End
  isExternal: false
  name: End
  nameWithType: BufferRange.End
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.End
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.HasRange*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.HasRange
  isExternal: false
  name: HasRange
  nameWithType: BufferRange.HasRange
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.HasRange
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.#ctor
  isExternal: false
  name: BufferRange
  nameWithType: BufferRange.BufferRange
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.BufferRange
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Equals*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Equals
  isExternal: false
  name: Equals
  nameWithType: BufferRange.Equals
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.GetHashCode*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: BufferRange.GetHashCode
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange.GetHashCode
