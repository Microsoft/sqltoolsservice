### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  id: Message
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  children:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Contents
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Error
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Event(System.String,Newtonsoft.Json.Linq.JToken)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Id
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.MessageType
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Method
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Request(System.String,System.String,Newtonsoft.Json.Linq.JToken)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Response(System.String,System.String,Newtonsoft.Json.Linq.JToken)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.ResponseError(System.String,System.String,Newtonsoft.Json.Linq.JToken)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Unknown
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Message
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Message
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
    startLine: 24
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  summary: "\nProvides common details for protocol messages of any format.\n"
  example: []
  syntax:
    content: public class Message
    content.vb: Public Class Message
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.MessageType
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.MessageType
  id: MessageType
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  langs:
  - csharp
  - vb
  name: MessageType
  nameWithType: Message.MessageType
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.MessageType
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: MessageType
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
    startLine: 30
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  summary: "\nGets or sets the message type.\n"
  example: []
  syntax:
    content: public MessageType MessageType { get; set; }
    content.vb: Public Property MessageType As MessageType
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.MessageType
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.MessageType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Id
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Id
  id: Id
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Message.Id
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Id
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
    startLine: 35
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  summary: "\nGets or sets the message's sequence ID.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    content.vb: Public Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Method
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Method
  id: Method
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: Message.Method
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Method
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Method
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
    startLine: 40
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  summary: "\nGets or sets the message's method/command name.\n"
  example: []
  syntax:
    content: public string Method { get; set; }
    content.vb: Public Property Method As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Method*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Contents
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Contents
  id: Contents
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  langs:
  - csharp
  - vb
  name: Contents
  nameWithType: Message.Contents
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Contents
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Contents
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
    startLine: 45
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  summary: "\nGets or sets a JToken containing the contents of the message.\n"
  example: []
  syntax:
    content: public JToken Contents { get; set; }
    content.vb: Public Property Contents As JToken
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JToken
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Contents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Error
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Error
  id: Error
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: Message.Error
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Error
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Error
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
    startLine: 50
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  summary: "\nGets or sets a JToken containing error details.\n"
  example: []
  syntax:
    content: public JToken Error { get; set; }
    content.vb: Public Property Error As JToken
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JToken
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Error*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Unknown
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Unknown
  id: Unknown
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  langs:
  - csharp
  - vb
  name: Unknown()
  nameWithType: Message.Unknown()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Unknown()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Unknown
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
    startLine: 56
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  summary: "\nCreates a message with an Unknown type.\n"
  example: []
  syntax:
    content: public static Message Unknown()
    content.vb: Public Shared Function Unknown As Message
    return:
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
      description: A message with Unknown type.
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Unknown*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Request(System.String,System.String,Newtonsoft.Json.Linq.JToken)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Request(System.String,System.String,Newtonsoft.Json.Linq.JToken)
  id: Request(System.String,System.String,Newtonsoft.Json.Linq.JToken)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  langs:
  - csharp
  - vb
  name: Request(String, String, JToken)
  nameWithType: Message.Request(String, String, JToken)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Request(System.String, System.String, Newtonsoft.Json.Linq.JToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Request
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
    startLine: 71
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  summary: "\nCreates a message with a Request type.\n"
  example: []
  syntax:
    content: public static Message Request(string id, string method, JToken contents)
    content.vb: Public Shared Function Request(id As String, method As String, contents As JToken) As Message
    parameters:
    - id: id
      type: System.String
      description: The sequence ID of the request.
    - id: method
      type: System.String
      description: The method name of the request.
    - id: contents
      type: Newtonsoft.Json.Linq.JToken
      description: The contents of the request.
    return:
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
      description: A message with a Request type.
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Request*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Response(System.String,System.String,Newtonsoft.Json.Linq.JToken)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Response(System.String,System.String,Newtonsoft.Json.Linq.JToken)
  id: Response(System.String,System.String,Newtonsoft.Json.Linq.JToken)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  langs:
  - csharp
  - vb
  name: Response(String, String, JToken)
  nameWithType: Message.Response(String, String, JToken)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Response(System.String, System.String, Newtonsoft.Json.Linq.JToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Response
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
    startLine: 89
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  summary: "\nCreates a message with a Response type.\n"
  example: []
  syntax:
    content: public static Message Response(string id, string method, JToken contents)
    content.vb: Public Shared Function Response(id As String, method As String, contents As JToken) As Message
    parameters:
    - id: id
      type: System.String
      description: The sequence ID of the original request.
    - id: method
      type: System.String
      description: The method name of the original request.
    - id: contents
      type: Newtonsoft.Json.Linq.JToken
      description: The contents of the response.
    return:
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
      description: A message with a Response type.
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Response*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.ResponseError(System.String,System.String,Newtonsoft.Json.Linq.JToken)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.ResponseError(System.String,System.String,Newtonsoft.Json.Linq.JToken)
  id: ResponseError(System.String,System.String,Newtonsoft.Json.Linq.JToken)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  langs:
  - csharp
  - vb
  name: ResponseError(String, String, JToken)
  nameWithType: Message.ResponseError(String, String, JToken)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.ResponseError(System.String, System.String, Newtonsoft.Json.Linq.JToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ResponseError
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
    startLine: 107
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  summary: "\nCreates a message with a Response type and error details.\n"
  example: []
  syntax:
    content: public static Message ResponseError(string id, string method, JToken error)
    content.vb: Public Shared Function ResponseError(id As String, method As String, error As JToken) As Message
    parameters:
    - id: id
      type: System.String
      description: The sequence ID of the original request.
    - id: method
      type: System.String
      description: The method name of the original request.
    - id: error
      type: Newtonsoft.Json.Linq.JToken
      description: The error details of the response.
    return:
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
      description: A message with a Response type and error details.
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.ResponseError*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Event(System.String,Newtonsoft.Json.Linq.JToken)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Event(System.String,Newtonsoft.Json.Linq.JToken)
  id: Event(System.String,Newtonsoft.Json.Linq.JToken)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  langs:
  - csharp
  - vb
  name: Event(String, JToken)
  nameWithType: Message.Event(String, JToken)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Event(System.String, Newtonsoft.Json.Linq.JToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Event
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Contracts/Message.cs
    startLine: 124
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  summary: "\nCreates a message with an Event type.\n"
  example: []
  syntax:
    content: public static Message Event(string method, JToken contents)
    content.vb: Public Shared Function Event(method As String, contents As JToken) As Message
    parameters:
    - id: method
      type: System.String
      description: The method name of the event.
    - id: contents
      type: Newtonsoft.Json.Linq.JToken
      description: The contents of the event.
    return:
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
      description: A message with an Event type.
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Event*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.MessageType*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.MessageType
  isExternal: false
  name: MessageType
  nameWithType: Message.MessageType
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.MessageType
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.MessageType
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.MessageType
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: MessageType
  nameWithType: MessageType
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.MessageType
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Id*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Id
  isExternal: false
  name: Id
  nameWithType: Message.Id
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Method*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Method
  isExternal: false
  name: Method
  nameWithType: Message.Method
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Method
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Contents*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Contents
  isExternal: false
  name: Contents
  nameWithType: Message.Contents
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Contents
- uid: Newtonsoft.Json.Linq.JToken
  commentId: T:Newtonsoft.Json.Linq.JToken
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JToken
  nameWithType: JToken
  fullName: Newtonsoft.Json.Linq.JToken
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: false
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Error*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Error
  isExternal: false
  name: Error
  nameWithType: Message.Error
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Error
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Unknown*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Unknown
  isExternal: false
  name: Unknown
  nameWithType: Message.Unknown
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Unknown
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Request*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Request
  isExternal: false
  name: Request
  nameWithType: Message.Request
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Request
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Response*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Response
  isExternal: false
  name: Response
  nameWithType: Message.Response
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Response
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.ResponseError*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.ResponseError
  isExternal: false
  name: ResponseError
  nameWithType: Message.ResponseError
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.ResponseError
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Event*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Event
  isExternal: false
  name: Event
  nameWithType: Message.Event
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message.Event
