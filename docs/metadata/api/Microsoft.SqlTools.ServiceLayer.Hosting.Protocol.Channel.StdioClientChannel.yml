### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel
  id: StdioClientChannel
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  children:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.#ctor(System.String,System.String[])
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Initialize(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.ProcessId
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Shutdown
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.WaitForConnection
  langs:
  - csharp
  - vb
  name: StdioClientChannel
  nameWithType: StdioClientChannel
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Channel/StdioClientChannel.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: StdioClientChannel
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Channel/StdioClientChannel.cs
    startLine: 18
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  summary: "\nProvides a client implementation for the standard I/O channel.\nLaunches the server process and then attaches to its console\nstreams.\n"
  example: []
  syntax:
    content: 'public class StdioClientChannel : ChannelBase'
    content.vb: >-
      Public Class StdioClientChannel
          Inherits ChannelBase
  inheritance:
  - System.Object
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  inheritedMembers:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.IsConnected
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.MessageReader
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.MessageWriter
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Start(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Stop
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.ProcessId
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.ProcessId
  id: ProcessId
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel
  langs:
  - csharp
  - vb
  name: ProcessId
  nameWithType: StdioClientChannel.ProcessId
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.ProcessId
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Channel/StdioClientChannel.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ProcessId
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Channel/StdioClientChannel.cs
    startLine: 30
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  summary: "\nGets the process ID of the server process.\n"
  example: []
  syntax:
    content: public int ProcessId { get; }
    content.vb: Public ReadOnly Property ProcessId As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.ProcessId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.#ctor(System.String,System.String[])
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel
  langs:
  - csharp
  - vb
  name: StdioClientChannel(String, String[])
  nameWithType: StdioClientChannel.StdioClientChannel(String, String[])
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.StdioClientChannel(System.String, System.String[])
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Channel/StdioClientChannel.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Channel/StdioClientChannel.cs
    startLine: 37
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  summary: "\nInitializes an instance of the StdioClient.\n"
  example: []
  syntax:
    content: public StdioClientChannel(string serverProcessPath, params string[] serverProcessArguments)
    content.vb: Public Sub New(serverProcessPath As String, ParamArray serverProcessArguments As String())
    parameters:
    - id: serverProcessPath
      type: System.String
      description: The full path to the server process executable.
    - id: serverProcessArguments
      type: System.String[]
      description: Optional arguments to pass to the service process executable.
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.#ctor*
  nameWithType.vb: StdioClientChannel.StdioClientChannel(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.StdioClientChannel(System.String, System.String())
  name.vb: StdioClientChannel(String, String())
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Initialize(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Initialize(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
  id: Initialize(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel
  langs:
  - csharp
  - vb
  name: Initialize(IMessageSerializer)
  nameWithType: StdioClientChannel.Initialize(IMessageSerializer)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Initialize(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Channel/StdioClientChannel.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Initialize
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Channel/StdioClientChannel.cs
    startLine: 52
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  syntax:
    content: protected override void Initialize(IMessageSerializer messageSerializer)
    content.vb: Protected Overrides Sub Initialize(messageSerializer As IMessageSerializer)
    parameters:
    - id: messageSerializer
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
  overridden: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Initialize(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Initialize*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.WaitForConnection
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.WaitForConnection
  id: WaitForConnection
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel
  langs:
  - csharp
  - vb
  name: WaitForConnection()
  nameWithType: StdioClientChannel.WaitForConnection()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.WaitForConnection()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Channel/StdioClientChannel.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: WaitForConnection
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Channel/StdioClientChannel.cs
    startLine: 92
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  syntax:
    content: public override Task WaitForConnection()
    content.vb: Public Overrides Function WaitForConnection As Task
    return:
      type: System.Threading.Tasks.Task
  overridden: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.WaitForConnection
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.WaitForConnection*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Shutdown
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Shutdown
  id: Shutdown
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel
  langs:
  - csharp
  - vb
  name: Shutdown()
  nameWithType: StdioClientChannel.Shutdown()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Shutdown()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Channel/StdioClientChannel.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Shutdown
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Channel/StdioClientChannel.cs
    startLine: 98
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  syntax:
    content: protected override void Shutdown()
    content.vb: Protected Overrides Sub Shutdown
  overridden: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Shutdown
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Shutdown*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  isExternal: false
  name: ChannelBase
  nameWithType: ChannelBase
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.IsConnected
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.IsConnected
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  isExternal: false
  name: IsConnected
  nameWithType: ChannelBase.IsConnected
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.IsConnected
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.MessageReader
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.MessageReader
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  isExternal: false
  name: MessageReader
  nameWithType: ChannelBase.MessageReader
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.MessageReader
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.MessageWriter
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.MessageWriter
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  isExternal: false
  name: MessageWriter
  nameWithType: ChannelBase.MessageWriter
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.MessageWriter
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Start(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Start(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  isExternal: false
  name: Start(MessageProtocolType)
  nameWithType: ChannelBase.Start(MessageProtocolType)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Start(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Start(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType)
    name: Start
    nameWithType: ChannelBase.Start
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType
    name: MessageProtocolType
    nameWithType: MessageProtocolType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Start(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType)
    name: Start
    nameWithType: ChannelBase.Start
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType
    name: MessageProtocolType
    nameWithType: MessageProtocolType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Stop
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Stop
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  isExternal: false
  name: Stop()
  nameWithType: ChannelBase.Stop()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Stop()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Stop
    name: Stop
    nameWithType: ChannelBase.Stop
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Stop
    name: Stop
    nameWithType: ChannelBase.Stop
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.ProcessId*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.ProcessId
  isExternal: false
  name: ProcessId
  nameWithType: StdioClientChannel.ProcessId
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.ProcessId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.#ctor
  isExternal: false
  name: StdioClientChannel
  nameWithType: StdioClientChannel.StdioClientChannel
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.StdioClientChannel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Initialize(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Initialize(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  isExternal: false
  name: Initialize(IMessageSerializer)
  nameWithType: ChannelBase.Initialize(IMessageSerializer)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Initialize(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Initialize(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
    name: Initialize
    nameWithType: ChannelBase.Initialize
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
    name: IMessageSerializer
    nameWithType: IMessageSerializer
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Initialize(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
    name: Initialize
    nameWithType: ChannelBase.Initialize
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
    name: IMessageSerializer
    nameWithType: IMessageSerializer
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Initialize*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Initialize
  isExternal: false
  name: Initialize
  nameWithType: StdioClientChannel.Initialize
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Initialize
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  isExternal: false
  name: IMessageSerializer
  nameWithType: IMessageSerializer
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.WaitForConnection
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.WaitForConnection
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  isExternal: false
  name: WaitForConnection()
  nameWithType: ChannelBase.WaitForConnection()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.WaitForConnection()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.WaitForConnection
    name: WaitForConnection
    nameWithType: ChannelBase.WaitForConnection
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.WaitForConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.WaitForConnection
    name: WaitForConnection
    nameWithType: ChannelBase.WaitForConnection
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.WaitForConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.WaitForConnection*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.WaitForConnection
  isExternal: false
  name: WaitForConnection
  nameWithType: StdioClientChannel.WaitForConnection
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.WaitForConnection
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Shutdown
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Shutdown
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  isExternal: false
  name: Shutdown()
  nameWithType: ChannelBase.Shutdown()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Shutdown()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Shutdown
    name: Shutdown
    nameWithType: ChannelBase.Shutdown
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Shutdown
    name: Shutdown
    nameWithType: ChannelBase.Shutdown
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Shutdown*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Shutdown
  isExternal: false
  name: Shutdown
  nameWithType: StdioClientChannel.Shutdown
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.StdioClientChannel.Shutdown
