### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer
  id: JsonRpcMessageSerializer
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  children:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.DeserializeMessage(Newtonsoft.Json.Linq.JObject)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.SerializeMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  langs:
  - csharp
  - vb
  name: JsonRpcMessageSerializer
  nameWithType: JsonRpcMessageSerializer
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Serializers/JsonRpcMessageSerializer.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: JsonRpcMessageSerializer
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Serializers/JsonRpcMessageSerializer.cs
    startLine: 14
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  summary: "\nSerializes messages in the JSON RPC format.  Used primarily\nfor language servers.\n"
  example: []
  syntax:
    content: 'public class JsonRpcMessageSerializer : IMessageSerializer'
    content.vb: >-
      Public Class JsonRpcMessageSerializer
          Implements IMessageSerializer
  inheritance:
  - System.Object
  implements:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.SerializeMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.SerializeMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  id: SerializeMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer
  langs:
  - csharp
  - vb
  name: SerializeMessage(Message)
  nameWithType: JsonRpcMessageSerializer.SerializeMessage(Message)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.SerializeMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Serializers/JsonRpcMessageSerializer.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SerializeMessage
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Serializers/JsonRpcMessageSerializer.cs
    startLine: 16
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  syntax:
    content: public JObject SerializeMessage(Message message)
    content.vb: Public Function SerializeMessage(message As Message) As JObject
    parameters:
    - id: message
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
    return:
      type: Newtonsoft.Json.Linq.JObject
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.SerializeMessage*
  implements:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.SerializeMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.DeserializeMessage(Newtonsoft.Json.Linq.JObject)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.DeserializeMessage(Newtonsoft.Json.Linq.JObject)
  id: DeserializeMessage(Newtonsoft.Json.Linq.JObject)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer
  langs:
  - csharp
  - vb
  name: DeserializeMessage(JObject)
  nameWithType: JsonRpcMessageSerializer.DeserializeMessage(JObject)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.DeserializeMessage(Newtonsoft.Json.Linq.JObject)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Serializers/JsonRpcMessageSerializer.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: DeserializeMessage
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/Serializers/JsonRpcMessageSerializer.cs
    startLine: 52
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  syntax:
    content: public Message DeserializeMessage(JObject messageJson)
    content.vb: Public Function DeserializeMessage(messageJson As JObject) As Message
    parameters:
    - id: messageJson
      type: Newtonsoft.Json.Linq.JObject
    return:
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.DeserializeMessage*
  implements:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.DeserializeMessage(Newtonsoft.Json.Linq.JObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  isExternal: false
  name: IMessageSerializer
  nameWithType: IMessageSerializer
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.SerializeMessage*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.SerializeMessage
  isExternal: false
  name: SerializeMessage
  nameWithType: JsonRpcMessageSerializer.SerializeMessage
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.SerializeMessage
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.SerializeMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.SerializeMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
  isExternal: false
  name: SerializeMessage(Message)
  nameWithType: IMessageSerializer.SerializeMessage(Message)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.SerializeMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.SerializeMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
    name: SerializeMessage
    nameWithType: IMessageSerializer.SerializeMessage
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.SerializeMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
    name: Message
    nameWithType: Message
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.SerializeMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
    name: SerializeMessage
    nameWithType: IMessageSerializer.SerializeMessage
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.SerializeMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
    name: Message
    nameWithType: Message
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: false
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.DeserializeMessage*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.DeserializeMessage
  isExternal: false
  name: DeserializeMessage
  nameWithType: JsonRpcMessageSerializer.DeserializeMessage
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.JsonRpcMessageSerializer.DeserializeMessage
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.DeserializeMessage(Newtonsoft.Json.Linq.JObject)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.DeserializeMessage(Newtonsoft.Json.Linq.JObject)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
  isExternal: true
  name: DeserializeMessage(JObject)
  nameWithType: IMessageSerializer.DeserializeMessage(JObject)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.DeserializeMessage(Newtonsoft.Json.Linq.JObject)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.DeserializeMessage(Newtonsoft.Json.Linq.JObject)
    name: DeserializeMessage
    nameWithType: IMessageSerializer.DeserializeMessage
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.DeserializeMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.DeserializeMessage(Newtonsoft.Json.Linq.JObject)
    name: DeserializeMessage
    nameWithType: IMessageSerializer.DeserializeMessage
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer.DeserializeMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
