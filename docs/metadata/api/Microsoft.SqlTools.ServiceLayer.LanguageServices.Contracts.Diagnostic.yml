### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic
  commentId: T:Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic
  id: Diagnostic
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts
  children:
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Code
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Message
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Range
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Severity
  langs:
  - csharp
  - vb
  name: Diagnostic
  nameWithType: Diagnostic
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/Contracts/Diagnostics.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Diagnostic
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/Contracts/Diagnostics.cs
    startLine: 50
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts
  syntax:
    content: public class Diagnostic
    content.vb: Public Class Diagnostic
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Range
  commentId: P:Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Range
  id: Range
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic
  langs:
  - csharp
  - vb
  name: Range
  nameWithType: Diagnostic.Range
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Range
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/Contracts/Diagnostics.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Range
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/Contracts/Diagnostics.cs
    startLine: 52
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts
  syntax:
    content: public Range Range { get; set; }
    content.vb: Public Property Range As Range
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.Range
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Range*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Severity
  commentId: P:Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Severity
  id: Severity
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic
  langs:
  - csharp
  - vb
  name: Severity
  nameWithType: Diagnostic.Severity
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Severity
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/Contracts/Diagnostics.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Severity
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/Contracts/Diagnostics.cs
    startLine: 58
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts
  summary: "\nGets or sets the severity of the diagnostic.  If omitted, the\nclient should interpret the severity.\n"
  example: []
  syntax:
    content: public DiagnosticSeverity? Severity { get; set; }
    content.vb: Public Property Severity As DiagnosticSeverity?
    parameters: []
    return:
      type: System.Nullable{Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.DiagnosticSeverity}
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Severity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Code
  commentId: P:Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Code
  id: Code
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: Diagnostic.Code
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Code
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/Contracts/Diagnostics.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Code
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/Contracts/Diagnostics.cs
    startLine: 63
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts
  summary: "\nGets or sets the diagnostic's code (optional).\n"
  example: []
  syntax:
    content: public string Code { get; set; }
    content.vb: Public Property Code As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Code*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Message
  commentId: P:Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Message
  id: Message
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Diagnostic.Message
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Message
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/Contracts/Diagnostics.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Message
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/Contracts/Diagnostics.cs
    startLine: 68
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts
  summary: "\nGets or sets the diagnostic message.\n"
  example: []
  syntax:
    content: public string Message { get; set; }
    content.vb: Public Property Message As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Range*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Range
  isExternal: false
  name: Range
  nameWithType: Diagnostic.Range
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Range
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.Range
  commentId: T:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.Range
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  isExternal: false
  name: Range
  nameWithType: Range
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.Range
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Severity*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Severity
  isExternal: false
  name: Severity
  nameWithType: Diagnostic.Severity
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Severity
- uid: System.Nullable{Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.DiagnosticSeverity}
  commentId: T:System.Nullable{Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.DiagnosticSeverity}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DiagnosticSeverity>
  nameWithType: Nullable<DiagnosticSeverity>
  fullName: System.Nullable<Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.DiagnosticSeverity>
  nameWithType.vb: Nullable(Of DiagnosticSeverity)
  fullname.vb: System.Nullable(Of Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.DiagnosticSeverity)
  name.vb: Nullable(Of DiagnosticSeverity)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.DiagnosticSeverity
    name: DiagnosticSeverity
    nameWithType: DiagnosticSeverity
    fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.DiagnosticSeverity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.DiagnosticSeverity
    name: DiagnosticSeverity
    nameWithType: DiagnosticSeverity
    fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.DiagnosticSeverity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Code*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Code
  isExternal: false
  name: Code
  nameWithType: Diagnostic.Code
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Code
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Message*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Message
  isExternal: false
  name: Message
  nameWithType: Diagnostic.Message
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.Contracts.Diagnostic.Message
