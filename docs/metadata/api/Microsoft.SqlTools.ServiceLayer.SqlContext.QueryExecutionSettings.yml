### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
  commentId: T:Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
  id: QueryExecutionSettings
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext
  children:
  - Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.BatchSeparator
  - Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.Update(Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings)
  langs:
  - csharp
  - vb
  name: QueryExecutionSettings
  nameWithType: QueryExecutionSettings
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/QueryExecutionSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: QueryExecutionSettings
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/QueryExecutionSettings.cs
    startLine: 10
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nCollection of settings related to the execution of queries\n"
  example: []
  syntax:
    content: public class QueryExecutionSettings
    content.vb: Public Class QueryExecutionSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.BatchSeparator
  commentId: P:Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.BatchSeparator
  id: BatchSeparator
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
  langs:
  - csharp
  - vb
  name: BatchSeparator
  nameWithType: QueryExecutionSettings.BatchSeparator
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.BatchSeparator
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/QueryExecutionSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: BatchSeparator
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/QueryExecutionSettings.cs
    startLine: 22
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nThe configured batch separator, will use a default if a value was not configured\n"
  example: []
  syntax:
    content: public string BatchSeparator { get; set; }
    content.vb: Public Property BatchSeparator As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.BatchSeparator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.Update(Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings)
  commentId: M:Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.Update(Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings)
  id: Update(Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings)
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
  langs:
  - csharp
  - vb
  name: Update(QueryExecutionSettings)
  nameWithType: QueryExecutionSettings.Update(QueryExecutionSettings)
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.Update(Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/QueryExecutionSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Update
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/QueryExecutionSettings.cs
    startLine: 32
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nUpdate the current settings with the new settings\n"
  example: []
  syntax:
    content: public void Update(QueryExecutionSettings newSettings)
    content.vb: Public Sub Update(newSettings As QueryExecutionSettings)
    parameters:
    - id: newSettings
      type: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
      description: The new settings
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.Update*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext
  commentId: N:Microsoft.SqlTools.ServiceLayer.SqlContext
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.SqlContext
  nameWithType: Microsoft.SqlTools.ServiceLayer.SqlContext
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.BatchSeparator*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.BatchSeparator
  isExternal: false
  name: BatchSeparator
  nameWithType: QueryExecutionSettings.BatchSeparator
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.BatchSeparator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.Update*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.Update
  isExternal: false
  name: Update
  nameWithType: QueryExecutionSettings.Update
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings.Update
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
  commentId: T:Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext
  isExternal: false
  name: QueryExecutionSettings
  nameWithType: QueryExecutionSettings
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
