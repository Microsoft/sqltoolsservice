### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage
  commentId: T:Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage
  id: FileTokenStorage
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.Linux
  children:
  - Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.#ctor(System.String)
  - Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.AddEntries(System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential},System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential})
  - Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.Clear
  - Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.LoadEntries
  - Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.SaveEntries(System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential})
  langs:
  - csharp
  - vb
  name: FileTokenStorage
  nameWithType: FileTokenStorage
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/Linux/FileTokenStorage.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: FileTokenStorage
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/Linux/FileTokenStorage.cs
    startLine: 18
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials.Linux
  syntax:
    content: public class FileTokenStorage
    content.vb: Public Class FileTokenStorage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.#ctor(System.String)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage
  langs:
  - csharp
  - vb
  name: FileTokenStorage(String)
  nameWithType: FileTokenStorage.FileTokenStorage(String)
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.FileTokenStorage(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/Linux/FileTokenStorage.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/Linux/FileTokenStorage.cs
    startLine: 26
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials.Linux
  syntax:
    content: public FileTokenStorage(string fileName)
    content.vb: Public Sub New(fileName As String)
    parameters:
    - id: fileName
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.AddEntries(System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential},System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.AddEntries(System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential},System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential})
  id: AddEntries(System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential},System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential})
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage
  langs:
  - csharp
  - vb
  name: AddEntries(IEnumerable<Credential>, IEnumerable<Credential>)
  nameWithType: FileTokenStorage.AddEntries(IEnumerable<Credential>, IEnumerable<Credential>)
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.AddEntries(System.Collections.Generic.IEnumerable<Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential>, System.Collections.Generic.IEnumerable<Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential>)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/Linux/FileTokenStorage.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: AddEntries
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/Linux/FileTokenStorage.cs
    startLine: 32
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials.Linux
  syntax:
    content: public void AddEntries(IEnumerable<Credential> newEntries, IEnumerable<Credential> existingEntries)
    content.vb: Public Sub AddEntries(newEntries As IEnumerable(Of Credential), existingEntries As IEnumerable(Of Credential))
    parameters:
    - id: newEntries
      type: System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential}
    - id: existingEntries
      type: System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential}
  overload: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.AddEntries*
  nameWithType.vb: FileTokenStorage.AddEntries(IEnumerable(Of Credential), IEnumerable(Of Credential))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.AddEntries(System.Collections.Generic.IEnumerable(Of Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential), System.Collections.Generic.IEnumerable(Of Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential))
  name.vb: AddEntries(IEnumerable(Of Credential), IEnumerable(Of Credential))
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.Clear
  commentId: M:Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.Clear
  id: Clear
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: FileTokenStorage.Clear()
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.Clear()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/Linux/FileTokenStorage.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Clear
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/Linux/FileTokenStorage.cs
    startLine: 38
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials.Linux
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.LoadEntries
  commentId: M:Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.LoadEntries
  id: LoadEntries
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage
  langs:
  - csharp
  - vb
  name: LoadEntries()
  nameWithType: FileTokenStorage.LoadEntries()
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.LoadEntries()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/Linux/FileTokenStorage.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: LoadEntries
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/Linux/FileTokenStorage.cs
    startLine: 43
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials.Linux
  syntax:
    content: public IEnumerable<Credential> LoadEntries()
    content.vb: Public Function LoadEntries As IEnumerable(Of Credential)
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential}
  overload: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.LoadEntries*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.SaveEntries(System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.SaveEntries(System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential})
  id: SaveEntries(System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential})
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage
  langs:
  - csharp
  - vb
  name: SaveEntries(IEnumerable<Credential>)
  nameWithType: FileTokenStorage.SaveEntries(IEnumerable<Credential>)
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.SaveEntries(System.Collections.Generic.IEnumerable<Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential>)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/Linux/FileTokenStorage.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SaveEntries
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/Linux/FileTokenStorage.cs
    startLine: 64
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials.Linux
  syntax:
    content: public void SaveEntries(IEnumerable<Credential> entries)
    content.vb: Public Sub SaveEntries(entries As IEnumerable(Of Credential))
    parameters:
    - id: entries
      type: System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential}
  overload: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.SaveEntries*
  nameWithType.vb: FileTokenStorage.SaveEntries(IEnumerable(Of Credential))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.SaveEntries(System.Collections.Generic.IEnumerable(Of Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential))
  name.vb: SaveEntries(IEnumerable(Of Credential))
references:
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Linux
  commentId: N:Microsoft.SqlTools.ServiceLayer.Credentials.Linux
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Credentials.Linux
  nameWithType: Microsoft.SqlTools.ServiceLayer.Credentials.Linux
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Linux
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.#ctor
  isExternal: false
  name: FileTokenStorage
  nameWithType: FileTokenStorage.FileTokenStorage
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.FileTokenStorage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.AddEntries*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.AddEntries
  isExternal: false
  name: AddEntries
  nameWithType: FileTokenStorage.AddEntries
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.AddEntries
- uid: System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Credential>
  nameWithType: IEnumerable<Credential>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential>
  nameWithType.vb: IEnumerable(Of Credential)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential)
  name.vb: IEnumerable(Of Credential)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
    name: Credential
    nameWithType: Credential
    fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
    name: Credential
    nameWithType: Credential
    fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.Clear*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.Clear
  isExternal: false
  name: Clear
  nameWithType: FileTokenStorage.Clear
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.Clear
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.LoadEntries*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.LoadEntries
  isExternal: false
  name: LoadEntries
  nameWithType: FileTokenStorage.LoadEntries
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.LoadEntries
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.SaveEntries*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.SaveEntries
  isExternal: false
  name: SaveEntries
  nameWithType: FileTokenStorage.SaveEntries
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Linux.FileTokenStorage.SaveEntries
