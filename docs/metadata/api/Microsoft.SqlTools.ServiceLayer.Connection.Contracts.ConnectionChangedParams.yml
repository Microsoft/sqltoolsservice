### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams
  commentId: T:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams
  id: ConnectionChangedParams
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  children:
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.Connection
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.OwnerUri
  langs:
  - csharp
  - vb
  name: ConnectionChangedParams
  nameWithType: ConnectionChangedParams
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionChangedParams.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ConnectionChangedParams
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionChangedParams.cs
    startLine: 10
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nParameters for the ConnectionChanged Notification.\n"
  example: []
  syntax:
    content: public class ConnectionChangedParams
    content.vb: Public Class ConnectionChangedParams
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.OwnerUri
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.OwnerUri
  id: OwnerUri
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams
  langs:
  - csharp
  - vb
  name: OwnerUri
  nameWithType: ConnectionChangedParams.OwnerUri
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.OwnerUri
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionChangedParams.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: OwnerUri
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionChangedParams.cs
    startLine: 16
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nA URI identifying the owner of the connection. This will most commonly be a file in the workspace\nor a virtual file representing an object in a database.         \n"
  example: []
  syntax:
    content: public string OwnerUri { get; set; }
    content.vb: Public Property OwnerUri As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.OwnerUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.Connection
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.Connection
  id: Connection
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: ConnectionChangedParams.Connection
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.Connection
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionChangedParams.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Connection
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionChangedParams.cs
    startLine: 20
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nContains the high-level properties about the connection, for display to the user.\n"
  example: []
  syntax:
    content: public ConnectionSummary Connection { get; set; }
    content.vb: Public Property Connection As ConnectionSummary
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.Connection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.OwnerUri*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.OwnerUri
  isExternal: false
  name: OwnerUri
  nameWithType: ConnectionChangedParams.OwnerUri
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.OwnerUri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.Connection*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.Connection
  isExternal: false
  name: Connection
  nameWithType: ConnectionChangedParams.Connection
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionChangedParams.Connection
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
  commentId: T:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  isExternal: false
  name: ConnectionSummary
  nameWithType: ConnectionSummary
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
