### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Utility.Logger
  commentId: T:Microsoft.SqlTools.ServiceLayer.Utility.Logger
  id: Logger
  parent: Microsoft.SqlTools.ServiceLayer.Utility
  children:
  - Microsoft.SqlTools.ServiceLayer.Utility.Logger.Close
  - Microsoft.SqlTools.ServiceLayer.Utility.Logger.Initialize(System.String,Microsoft.SqlTools.ServiceLayer.Utility.LogLevel,System.Boolean)
  - Microsoft.SqlTools.ServiceLayer.Utility.Logger.Write(Microsoft.SqlTools.ServiceLayer.Utility.LogLevel,System.String,System.String,System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: Logger
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.Logger
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/Logger.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Logger
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/Logger.cs
    startLine: 43
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nProvides a simple logging interface.  May be replaced with a\nmore robust solution at a later date.\n"
  example: []
  syntax:
    content: public static class Logger
    content.vb: Public Module Logger
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Initialize(System.String,Microsoft.SqlTools.ServiceLayer.Utility.LogLevel,System.Boolean)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Utility.Logger.Initialize(System.String,Microsoft.SqlTools.ServiceLayer.Utility.LogLevel,System.Boolean)
  id: Initialize(System.String,Microsoft.SqlTools.ServiceLayer.Utility.LogLevel,System.Boolean)
  parent: Microsoft.SqlTools.ServiceLayer.Utility.Logger
  langs:
  - csharp
  - vb
  name: Initialize(String, LogLevel, Boolean)
  nameWithType: Logger.Initialize(String, LogLevel, Boolean)
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Initialize(System.String, Microsoft.SqlTools.ServiceLayer.Utility.LogLevel, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/Logger.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Initialize
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/Logger.cs
    startLine: 60
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nInitializes the Logger for the current session.\n"
  example: []
  syntax:
    content: public static void Initialize(string logFilePath = "sqltools", LogLevel minimumLogLevel = LogLevel.Normal, bool isEnabled = true)
    content.vb: Public Shared Sub Initialize(logFilePath As String = "sqltools", minimumLogLevel As LogLevel = LogLevel.Normal, isEnabled As Boolean = True)
    parameters:
    - id: logFilePath
      type: System.String
      description: "\nOptional. Specifies the path at which log messages will be written.\n"
    - id: minimumLogLevel
      type: Microsoft.SqlTools.ServiceLayer.Utility.LogLevel
      description: "\nOptional. Specifies the minimum log message level to write to the log file.\n"
    - id: isEnabled
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Initialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Close
  commentId: M:Microsoft.SqlTools.ServiceLayer.Utility.Logger.Close
  id: Close
  parent: Microsoft.SqlTools.ServiceLayer.Utility.Logger
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: Logger.Close()
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Close()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/Logger.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Close
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/Logger.cs
    startLine: 113
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nCloses the Logger.\n"
  example: []
  syntax:
    content: public static void Close()
    content.vb: Public Shared Sub Close
  overload: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Close*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Write(Microsoft.SqlTools.ServiceLayer.Utility.LogLevel,System.String,System.String,System.String,System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Utility.Logger.Write(Microsoft.SqlTools.ServiceLayer.Utility.LogLevel,System.String,System.String,System.String,System.Int32)
  id: Write(Microsoft.SqlTools.ServiceLayer.Utility.LogLevel,System.String,System.String,System.String,System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.Utility.Logger
  langs:
  - csharp
  - vb
  name: Write(LogLevel, String, String, String, Int32)
  nameWithType: Logger.Write(LogLevel, String, String, String, Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Write(Microsoft.SqlTools.ServiceLayer.Utility.LogLevel, System.String, System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/Logger.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Write
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/Logger.cs
    startLine: 129
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nWrites a message to the log file.\n"
  example: []
  syntax:
    content: public static void Write(LogLevel logLevel, string logMessage, string callerName = null, string callerSourceFile = null, int callerLineNumber = 0)
    content.vb: Public Shared Sub Write(logLevel As LogLevel, logMessage As String, callerName As String = Nothing, callerSourceFile As String = Nothing, callerLineNumber As Integer = 0)
    parameters:
    - id: logLevel
      type: Microsoft.SqlTools.ServiceLayer.Utility.LogLevel
      description: The level at which the message will be written.
    - id: logMessage
      type: System.String
      description: The message text to be written.
    - id: callerName
      type: System.String
      description: The name of the calling method.
    - id: callerSourceFile
      type: System.String
      description: The source file path where the calling method exists.
    - id: callerLineNumber
      type: System.Int32
      description: The line number of the calling method.
  overload: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Write*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.SqlTools.ServiceLayer.Utility
  commentId: N:Microsoft.SqlTools.ServiceLayer.Utility
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Utility
  nameWithType: Microsoft.SqlTools.ServiceLayer.Utility
  fullName: Microsoft.SqlTools.ServiceLayer.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Initialize*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.Logger.Initialize
  isExternal: false
  name: Initialize
  nameWithType: Logger.Initialize
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Initialize
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.Utility.LogLevel
  commentId: T:Microsoft.SqlTools.ServiceLayer.Utility.LogLevel
  parent: Microsoft.SqlTools.ServiceLayer.Utility
  isExternal: false
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.LogLevel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Close*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.Logger.Close
  isExternal: false
  name: Close
  nameWithType: Logger.Close
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Close
- uid: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Write*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.Logger.Write
  isExternal: false
  name: Write
  nameWithType: Logger.Write
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.Logger.Write
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
