### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread
  commentId: T:Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread
  id: AsyncContextThread
  parent: Microsoft.SqlTools.ServiceLayer.Utility
  children:
  - Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.#ctor(System.String)
  - Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Run(System.Func{System.Threading.Tasks.Task})
  - Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Stop
  langs:
  - csharp
  - vb
  name: AsyncContextThread
  nameWithType: AsyncContextThread
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/AsyncContextThread.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: AsyncContextThread
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/AsyncContextThread.cs
    startLine: 15
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nProvides a simplified interface for creating a new thread\nand establishing an AsyncContext in it.\n"
  example: []
  syntax:
    content: public class AsyncContextThread
    content.vb: Public Class AsyncContextThread
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.#ctor(System.String)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread
  langs:
  - csharp
  - vb
  name: AsyncContextThread(String)
  nameWithType: AsyncContextThread.AsyncContextThread(String)
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.AsyncContextThread(System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/AsyncContextThread.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/AsyncContextThread.cs
    startLine: 34
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nInitializes a new instance of the AsyncContextThread class.\n"
  example: []
  syntax:
    content: public AsyncContextThread(string threadName)
    content.vb: Public Sub New(threadName As String)
    parameters:
    - id: threadName
      type: System.String
      description: "\nThe name of the thread for debugging purposes.\n"
  overload: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Run(System.Func{System.Threading.Tasks.Task})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Run(System.Func{System.Threading.Tasks.Task})
  id: Run(System.Func{System.Threading.Tasks.Task})
  parent: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread
  langs:
  - csharp
  - vb
  name: Run(Func<Task>)
  nameWithType: AsyncContextThread.Run(Func<Task>)
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Run(System.Func<System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/AsyncContextThread.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Run
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/AsyncContextThread.cs
    startLine: 52
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nRuns a task on the AsyncContextThread.\n"
  example: []
  syntax:
    content: public Task Run(Func<Task> taskReturningFunc)
    content.vb: Public Function Run(taskReturningFunc As Func(Of Task)) As Task
    parameters:
    - id: taskReturningFunc
      type: System.Func{System.Threading.Tasks.Task}
      description: "\nA Func which returns the task to be run on the thread.\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\nA Task which can be used to monitor the thread for completion.\n"
  overload: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Run*
  nameWithType.vb: AsyncContextThread.Run(Func(Of Task))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Run(System.Func(Of System.Threading.Tasks.Task))
  name.vb: Run(Func(Of Task))
- uid: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Stop
  commentId: M:Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Stop
  id: Stop
  parent: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: AsyncContextThread.Stop()
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Stop()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Utility/AsyncContextThread.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Stop
    path: ../src/Microsoft.SqlTools.ServiceLayer/Utility/AsyncContextThread.cs
    startLine: 76
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Utility
  summary: "\nStops the thread task.\n"
  example: []
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.Utility
  commentId: N:Microsoft.SqlTools.ServiceLayer.Utility
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Utility
  nameWithType: Microsoft.SqlTools.ServiceLayer.Utility
  fullName: Microsoft.SqlTools.ServiceLayer.Utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.#ctor
  isExternal: false
  name: AsyncContextThread
  nameWithType: AsyncContextThread.AsyncContextThread
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.AsyncContextThread
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Run*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Run
  isExternal: false
  name: Run
  nameWithType: AsyncContextThread.Run
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Run
- uid: System.Func{System.Threading.Tasks.Task}
  commentId: T:System.Func{System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`1
  name: Func<Task>
  nameWithType: Func<Task>
  fullName: System.Func<System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of Task)
  fullname.vb: System.Func(Of System.Threading.Tasks.Task)
  name.vb: Func(Of Task)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullname.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Stop*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Stop
  isExternal: false
  name: Stop
  nameWithType: AsyncContextThread.Stop
  fullName: Microsoft.SqlTools.ServiceLayer.Utility.AsyncContextThread.Stop
