### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  commentId: T:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  id: QueueItem
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices
  children:
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.#ctor
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindingTimeout
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindOperation
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.GetResultAsT``1
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.ItemProcessed
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Key
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Result
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.TimeoutOperation
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.WaitForLockTimeout
  langs:
  - csharp
  - vb
  name: QueueItem
  nameWithType: QueueItem
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: QueueItem
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
    startLine: 13
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nClass that stores the state of a binding queue request item\n"
  example: []
  syntax:
    content: public class QueueItem
    content.vb: Public Class QueueItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.#ctor
  commentId: M:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.#ctor
  id: '#ctor'
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  langs:
  - csharp
  - vb
  name: QueueItem()
  nameWithType: QueueItem.QueueItem()
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.QueueItem()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
    startLine: 18
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nQueueItem constructor\n"
  example: []
  syntax:
    content: public QueueItem()
    content.vb: Public Sub New
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Key
  commentId: P:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Key
  id: Key
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: QueueItem.Key
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Key
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Key
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
    startLine: 26
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nGets or sets the queue item key\n"
  example: []
  syntax:
    content: public string Key { get; set; }
    content.vb: Public Property Key As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Key*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindOperation
  commentId: P:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindOperation
  id: BindOperation
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  langs:
  - csharp
  - vb
  name: BindOperation
  nameWithType: QueueItem.BindOperation
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindOperation
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: BindOperation
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
    startLine: 31
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nGets or sets the bind operation callback method\n"
  example: []
  syntax:
    content: public Func<IBindingContext, CancellationToken, object> BindOperation { get; set; }
    content.vb: Public Property BindOperation As Func(Of IBindingContext, CancellationToken, Object)
    parameters: []
    return:
      type: System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Threading.CancellationToken,System.Object}
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindOperation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.TimeoutOperation
  commentId: P:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.TimeoutOperation
  id: TimeoutOperation
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  langs:
  - csharp
  - vb
  name: TimeoutOperation
  nameWithType: QueueItem.TimeoutOperation
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.TimeoutOperation
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: TimeoutOperation
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
    startLine: 36
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nGets or sets the timeout operation to call if the bind operation doesn't finish within timeout period\n"
  example: []
  syntax:
    content: public Func<IBindingContext, object> TimeoutOperation { get; set; }
    content.vb: Public Property TimeoutOperation As Func(Of IBindingContext, Object)
    parameters: []
    return:
      type: System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Object}
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.TimeoutOperation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.ItemProcessed
  commentId: P:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.ItemProcessed
  id: ItemProcessed
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  langs:
  - csharp
  - vb
  name: ItemProcessed
  nameWithType: QueueItem.ItemProcessed
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.ItemProcessed
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ItemProcessed
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
    startLine: 41
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nGets or sets an event to signal when this queue item has been processed\n"
  example: []
  syntax:
    content: public virtual ManualResetEvent ItemProcessed { get; set; }
    content.vb: Public Overridable Property ItemProcessed As ManualResetEvent
    parameters: []
    return:
      type: System.Threading.ManualResetEvent
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.ItemProcessed*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Result
  commentId: P:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Result
  id: Result
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: QueueItem.Result
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Result
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Result
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
    startLine: 46
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nGets or sets the result of the queued task\n"
  example: []
  syntax:
    content: public object Result { get; set; }
    content.vb: Public Property Result As Object
    parameters: []
    return:
      type: System.Object
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Result*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindingTimeout
  commentId: P:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindingTimeout
  id: BindingTimeout
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  langs:
  - csharp
  - vb
  name: BindingTimeout
  nameWithType: QueueItem.BindingTimeout
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindingTimeout
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: BindingTimeout
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
    startLine: 51
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nGets or sets the binding operation timeout in milliseconds\n"
  example: []
  syntax:
    content: public int ? BindingTimeout { get; set; }
    content.vb: Public Property BindingTimeout As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindingTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.WaitForLockTimeout
  commentId: P:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.WaitForLockTimeout
  id: WaitForLockTimeout
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  langs:
  - csharp
  - vb
  name: WaitForLockTimeout
  nameWithType: QueueItem.WaitForLockTimeout
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.WaitForLockTimeout
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: WaitForLockTimeout
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
    startLine: 56
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nGets or sets the timeout for how long to wait for the binding lock\n"
  example: []
  syntax:
    content: public int ? WaitForLockTimeout { get; set; }
    content.vb: Public Property WaitForLockTimeout As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.WaitForLockTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.GetResultAsT``1
  commentId: M:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.GetResultAsT``1
  id: GetResultAsT``1
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  langs:
  - csharp
  - vb
  name: GetResultAsT<T>()
  nameWithType: QueueItem.GetResultAsT<T>()
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.GetResultAsT<T>()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetResultAsT
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/QueueItem.cs
    startLine: 61
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nConverts the result of the execution to type T\n"
  example: []
  syntax:
    content: 'public T GetResultAsT<T>()where T : class'
    content.vb: Public Function GetResultAsT(Of T As Class) As T
    typeParameters:
    - id: T
    return:
      type: '{T}'
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.GetResultAsT*
  nameWithType.vb: QueueItem.GetResultAsT(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.GetResultAsT(Of T)()
  name.vb: GetResultAsT(Of T)()
references:
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices
  commentId: N:Microsoft.SqlTools.ServiceLayer.LanguageServices
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.LanguageServices
  nameWithType: Microsoft.SqlTools.ServiceLayer.LanguageServices
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.#ctor
  isExternal: false
  name: QueueItem
  nameWithType: QueueItem.QueueItem
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.QueueItem
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Key*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Key
  isExternal: false
  name: Key
  nameWithType: QueueItem.Key
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Key
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindOperation*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindOperation
  isExternal: false
  name: BindOperation
  nameWithType: QueueItem.BindOperation
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindOperation
- uid: System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Threading.CancellationToken,System.Object}
  commentId: T:System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Threading.CancellationToken,System.Object}
  parent: System
  definition: System.Func`3
  name: Func<IBindingContext, CancellationToken, Object>
  nameWithType: Func<IBindingContext, CancellationToken, Object>
  fullName: System.Func<Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext, System.Threading.CancellationToken, System.Object>
  nameWithType.vb: Func(Of IBindingContext, CancellationToken, Object)
  fullname.vb: System.Func(Of Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext, System.Threading.CancellationToken, System.Object)
  name.vb: Func(Of IBindingContext, CancellationToken, Object)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
    name: IBindingContext
    nameWithType: IBindingContext
    fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
    name: IBindingContext
    nameWithType: IBindingContext
    fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.TimeoutOperation*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.TimeoutOperation
  isExternal: false
  name: TimeoutOperation
  nameWithType: QueueItem.TimeoutOperation
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.TimeoutOperation
- uid: System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Object}
  commentId: T:System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Object}
  parent: System
  definition: System.Func`2
  name: Func<IBindingContext, Object>
  nameWithType: Func<IBindingContext, Object>
  fullName: System.Func<Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext, System.Object>
  nameWithType.vb: Func(Of IBindingContext, Object)
  fullname.vb: System.Func(Of Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext, System.Object)
  name.vb: Func(Of IBindingContext, Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
    name: IBindingContext
    nameWithType: IBindingContext
    fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
    name: IBindingContext
    nameWithType: IBindingContext
    fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.ItemProcessed*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.ItemProcessed
  isExternal: false
  name: ItemProcessed
  nameWithType: QueueItem.ItemProcessed
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.ItemProcessed
- uid: System.Threading.ManualResetEvent
  commentId: T:System.Threading.ManualResetEvent
  parent: System.Threading
  isExternal: true
  name: ManualResetEvent
  nameWithType: ManualResetEvent
  fullName: System.Threading.ManualResetEvent
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Result*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Result
  isExternal: false
  name: Result
  nameWithType: QueueItem.Result
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.Result
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindingTimeout*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindingTimeout
  isExternal: false
  name: BindingTimeout
  nameWithType: QueueItem.BindingTimeout
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.BindingTimeout
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.WaitForLockTimeout*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.WaitForLockTimeout
  isExternal: false
  name: WaitForLockTimeout
  nameWithType: QueueItem.WaitForLockTimeout
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.WaitForLockTimeout
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.GetResultAsT*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.GetResultAsT
  isExternal: false
  name: GetResultAsT<T>
  nameWithType: QueueItem.GetResultAsT<T>
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.GetResultAsT<T>
  nameWithType.vb: QueueItem.GetResultAsT(Of T)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem.GetResultAsT(Of T)
  name.vb: GetResultAsT(Of T)
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
