### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange
  commentId: T:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange
  id: FileChange
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  children:
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndLine
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndOffset
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.InsertString
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Line
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Offset
  langs:
  - csharp
  - vb
  name: FileChange
  nameWithType: FileChange
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/FileChange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: FileChange
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/FileChange.cs
    startLine: 10
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nContains details relating to a content change in an open file.\n"
  example: []
  syntax:
    content: public class FileChange
    content.vb: Public Class FileChange
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.InsertString
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.InsertString
  id: InsertString
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange
  langs:
  - csharp
  - vb
  name: InsertString
  nameWithType: FileChange.InsertString
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.InsertString
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/FileChange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: InsertString
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/FileChange.cs
    startLine: 15
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nThe string which is to be inserted in the file.\n"
  example: []
  syntax:
    content: public string InsertString { get; set; }
    content.vb: Public Property InsertString As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.InsertString*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Line
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Line
  id: Line
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange
  langs:
  - csharp
  - vb
  name: Line
  nameWithType: FileChange.Line
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Line
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/FileChange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Line
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/FileChange.cs
    startLine: 20
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nThe 1-based line number where the change starts.\n"
  example: []
  syntax:
    content: public int Line { get; set; }
    content.vb: Public Property Line As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Line*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Offset
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Offset
  id: Offset
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: FileChange.Offset
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Offset
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/FileChange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Offset
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/FileChange.cs
    startLine: 25
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nThe 1-based column offset where the change starts.\n"
  example: []
  syntax:
    content: public int Offset { get; set; }
    content.vb: Public Property Offset As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Offset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndLine
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndLine
  id: EndLine
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange
  langs:
  - csharp
  - vb
  name: EndLine
  nameWithType: FileChange.EndLine
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndLine
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/FileChange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: EndLine
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/FileChange.cs
    startLine: 30
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nThe 1-based line number where the change ends.\n"
  example: []
  syntax:
    content: public int EndLine { get; set; }
    content.vb: Public Property EndLine As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndLine*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndOffset
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndOffset
  id: EndOffset
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange
  langs:
  - csharp
  - vb
  name: EndOffset
  nameWithType: FileChange.EndOffset
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndOffset
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/FileChange.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: EndOffset
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/FileChange.cs
    startLine: 35
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nThe 1-based column offset where the change ends.\n"
  example: []
  syntax:
    content: public int EndOffset { get; set; }
    content.vb: Public Property EndOffset As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndOffset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.InsertString*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.InsertString
  isExternal: false
  name: InsertString
  nameWithType: FileChange.InsertString
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.InsertString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Line*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Line
  isExternal: false
  name: Line
  nameWithType: FileChange.Line
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Line
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Offset*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Offset
  isExternal: false
  name: Offset
  nameWithType: FileChange.Offset
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.Offset
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndLine*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndLine
  isExternal: false
  name: EndLine
  nameWithType: FileChange.EndLine
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndLine
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndOffset*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndOffset
  isExternal: false
  name: EndOffset
  nameWithType: FileChange.EndOffset
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange.EndOffset
