### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace
  commentId: T:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace
  id: Workspace
  parent: Microsoft.SqlTools.ServiceLayer.Workspace
  children:
  - Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.#ctor
  - Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.CloseFile(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.Dispose
  - Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFile(System.String)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFileBuffer(System.String,System.String)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetOpenedFiles
  - Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.UnescapePath(System.String)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.WorkspacePath
  langs:
  - csharp
  - vb
  name: Workspace
  nameWithType: Workspace
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Workspace
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
    startLine: 20
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace
  summary: "\nManages a \"workspace\" of script files that are open for a particular\nediting session.  Also helps to navigate references between ScriptFiles.\n"
  example: []
  syntax:
    content: 'public class Workspace : IDisposable'
    content.vb: >-
      Public Class Workspace
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.WorkspacePath
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.WorkspacePath
  id: WorkspacePath
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace
  langs:
  - csharp
  - vb
  name: WorkspacePath
  nameWithType: Workspace.WorkspacePath
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.WorkspacePath
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: WorkspacePath
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
    startLine: 33
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace
  summary: "\nGets or sets the root path of the workspace.\n"
  example: []
  syntax:
    content: public string WorkspacePath { get; set; }
    content.vb: Public Property WorkspacePath As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.WorkspacePath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.#ctor
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.#ctor
  id: '#ctor'
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace
  langs:
  - csharp
  - vb
  name: Workspace()
  nameWithType: Workspace.Workspace()
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.Workspace()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
    startLine: 42
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace
  summary: "\nCreates a new instance of the Workspace class.\n"
  example: []
  syntax:
    content: public Workspace()
    content.vb: Public Sub New
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFile(System.String)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFile(System.String)
  id: GetFile(System.String)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace
  langs:
  - csharp
  - vb
  name: GetFile(String)
  nameWithType: Workspace.GetFile(String)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFile(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetFile
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
    startLine: 62
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace
  summary: "\nGets an open file in the workspace.  If the file isn't open but\nexists on the filesystem, load and return it. Virtual method to\nallow for mocking\n"
  example: []
  syntax:
    content: public virtual ScriptFile GetFile(string filePath)
    content.vb: Public Overridable Function GetFile(filePath As String) As ScriptFile
    parameters:
    - id: filePath
      type: System.String
      description: The file path at which the script resides.
    return:
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFile*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<span class=\"paramref\">filePath</span> is not found.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<span class=\"paramref\">filePath</span> contains a null or empty string.\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.UnescapePath(System.String)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.UnescapePath(System.String)
  id: UnescapePath(System.String)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace
  langs:
  - csharp
  - vb
  name: UnescapePath(String)
  nameWithType: Workspace.UnescapePath(String)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.UnescapePath(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: UnescapePath
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
    startLine: 137
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace
  summary: "\nUnescapes any escaped [, ] or space characters. Typically use this before calling a\n.NET API that doesn't understand PowerShell escaped chars.\n"
  example: []
  syntax:
    content: public static string UnescapePath(string path)
    content.vb: Public Shared Function UnescapePath(path As String) As String
    parameters:
    - id: path
      type: System.String
      description: The path to unescape.
    return:
      type: System.String
      description: The path with the ` character before [, ] and spaces removed.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.UnescapePath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFileBuffer(System.String,System.String)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFileBuffer(System.String,System.String)
  id: GetFileBuffer(System.String,System.String)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace
  langs:
  - csharp
  - vb
  name: GetFileBuffer(String, String)
  nameWithType: Workspace.GetFileBuffer(String, String)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFileBuffer(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetFileBuffer
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
    startLine: 154
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace
  summary: "\nGets a new ScriptFile instance which is identified by the given file\npath and initially contains the given buffer contents.\n"
  example: []
  syntax:
    content: public ScriptFile GetFileBuffer(string filePath, string initialBuffer)
    content.vb: Public Function GetFileBuffer(filePath As String, initialBuffer As String) As ScriptFile
    parameters:
    - id: filePath
      type: System.String
      description: ''
    - id: initialBuffer
      type: System.String
      description: ''
    return:
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
      description: ''
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFileBuffer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetOpenedFiles
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetOpenedFiles
  id: GetOpenedFiles
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace
  langs:
  - csharp
  - vb
  name: GetOpenedFiles()
  nameWithType: Workspace.GetOpenedFiles()
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetOpenedFiles()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetOpenedFiles
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
    startLine: 180
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace
  summary: "\nGets an array of all opened ScriptFiles in the workspace.\n"
  example: []
  syntax:
    content: public ScriptFile[] GetOpenedFiles()
    content.vb: Public Function GetOpenedFiles As ScriptFile()
    return:
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile[]
      description: An array of all opened ScriptFiles in the workspace.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetOpenedFiles*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.CloseFile(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.CloseFile(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile)
  id: CloseFile(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace
  langs:
  - csharp
  - vb
  name: CloseFile(ScriptFile)
  nameWithType: Workspace.CloseFile(ScriptFile)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.CloseFile(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: CloseFile
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
    startLine: 189
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace
  summary: "\nCloses a currently open script file with the given file path.\n"
  example: []
  syntax:
    content: public void CloseFile(ScriptFile scriptFile)
    content.vb: Public Sub CloseFile(scriptFile As ScriptFile)
    parameters:
    - id: scriptFile
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
      description: The file path at which the script resides.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.CloseFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.Dispose
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.Dispose
  id: Dispose
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Workspace.Dispose()
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Dispose
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Workspace.cs
    startLine: 243
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace
  summary: "\nDisposes of any Runspaces that were created for the\nservices used in this session.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.Workspace
  commentId: N:Microsoft.SqlTools.ServiceLayer.Workspace
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Workspace
  nameWithType: Microsoft.SqlTools.ServiceLayer.Workspace
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.WorkspacePath*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.WorkspacePath
  isExternal: false
  name: WorkspacePath
  nameWithType: Workspace.WorkspacePath
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.WorkspacePath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.#ctor
  isExternal: false
  name: Workspace
  nameWithType: Workspace.Workspace
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.Workspace
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFile*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFile
  isExternal: false
  name: GetFile
  nameWithType: Workspace.GetFile
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFile
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  commentId: T:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  isExternal: false
  name: ScriptFile
  nameWithType: ScriptFile
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.UnescapePath*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.UnescapePath
  isExternal: false
  name: UnescapePath
  nameWithType: Workspace.UnescapePath
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.UnescapePath
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFileBuffer*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFileBuffer
  isExternal: false
  name: GetFileBuffer
  nameWithType: Workspace.GetFileBuffer
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetFileBuffer
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetOpenedFiles*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetOpenedFiles
  isExternal: false
  name: GetOpenedFiles
  nameWithType: Workspace.GetOpenedFiles
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.GetOpenedFiles
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile[]
  name: ScriptFile[]
  nameWithType: ScriptFile[]
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile[]
  nameWithType.vb: ScriptFile()
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile()
  name.vb: ScriptFile()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
    name: ScriptFile
    nameWithType: ScriptFile
    fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
    name: ScriptFile
    nameWithType: ScriptFile
    fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.CloseFile*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.CloseFile
  isExternal: false
  name: CloseFile
  nameWithType: Workspace.CloseFile
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.CloseFile
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.Dispose*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.Dispose
  isExternal: false
  name: Dispose
  nameWithType: Workspace.Dispose
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Workspace.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
