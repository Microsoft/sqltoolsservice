### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  id: EventContext
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  children:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.#ctor
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.#ctor(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  langs:
  - csharp
  - vb
  name: EventContext
  nameWithType: EventContext
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/EventContext.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: EventContext
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/EventContext.cs
    startLine: 14
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  summary: "\nProvides context for a received event so that handlers\ncan write events back to the channel.\n"
  example: []
  syntax:
    content: public class EventContext
    content.vb: Public Class EventContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.#ctor
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.#ctor
  id: '#ctor'
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  langs:
  - csharp
  - vb
  name: EventContext()
  nameWithType: EventContext.EventContext()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.EventContext()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/EventContext.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/EventContext.cs
    startLine: 21
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  summary: "\nParameterless constructor required for mocking\n"
  example: []
  syntax:
    content: public EventContext()
    content.vb: Public Sub New
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.#ctor(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.#ctor(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter)
  id: '#ctor(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter)'
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  langs:
  - csharp
  - vb
  name: EventContext(MessageWriter)
  nameWithType: EventContext.EventContext(MessageWriter)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.EventContext(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/EventContext.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/EventContext.cs
    startLine: 23
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public EventContext(MessageWriter messageWriter)
    content.vb: Public Sub New(messageWriter As MessageWriter)
    parameters:
    - id: messageWriter
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  id: SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  langs:
  - csharp
  - vb
  name: SendEvent<TParams>(EventType<TParams>, TParams)
  nameWithType: EventContext.SendEvent<TParams>(EventType<TParams>, TParams)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.SendEvent<TParams>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>, TParams)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/EventContext.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SendEvent
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/EventContext.cs
    startLine: 28
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public Task SendEvent<TParams>(EventType<TParams> eventType, TParams eventParams)
    content.vb: Public Function SendEvent(Of TParams)(eventType As EventType(Of TParams), eventParams As TParams) As Task
    parameters:
    - id: eventType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}}
    - id: eventParams
      type: '{TParams}'
    typeParameters:
    - id: TParams
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.SendEvent*
  nameWithType.vb: EventContext.SendEvent(Of TParams)(EventType(Of TParams), TParams)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.SendEvent(Of TParams)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams), TParams)
  name.vb: SendEvent(Of TParams)(EventType(Of TParams), TParams)
references:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.#ctor
  isExternal: false
  name: EventContext
  nameWithType: EventContext.EventContext
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.EventContext
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  isExternal: false
  name: MessageWriter
  nameWithType: MessageWriter
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.SendEvent*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.SendEvent
  isExternal: false
  name: SendEvent<TParams>
  nameWithType: EventContext.SendEvent<TParams>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.SendEvent<TParams>
  nameWithType.vb: EventContext.SendEvent(Of TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext.SendEvent(Of TParams)
  name.vb: SendEvent(Of TParams)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}}
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0}
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
  name: EventType<TParams>
  nameWithType: EventType<TParams>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>
  nameWithType.vb: EventType(Of TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams)
  name.vb: EventType(Of TParams)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TParams}'
  commentId: '!:TParams'
  definition: TParams
  name: TParams
  nameWithType: TParams
  fullName: TParams
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: EventType<TParams>
  nameWithType: EventType<TParams>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>
  nameWithType.vb: EventType(Of TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams)
  name.vb: EventType(Of TParams)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
- uid: TParams
  isExternal: false
  name: TParams
  nameWithType: TParams
  fullName: TParams
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
