### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  id: ResultSet
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution
  children:
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.#ctor(System.Data.Common.DbDataReader,System.Int32,System.Int32,Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory)
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.BatchId
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Columns
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Dispose
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Dispose(System.Boolean)
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.GetSubset(System.Int32,System.Int32)
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Id
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxCharsToStore
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxXmlCharsToStore
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ReadResultToEnd(System.Threading.CancellationToken)
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultCompletion
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.RowCount
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Summary
  langs:
  - csharp
  - vb
  name: ResultSet
  nameWithType: ResultSet
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ResultSet
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 22
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nClass that represents a resultset the was generated from a query. Contains logic for\nstoring and retrieving results. Is contained by a Batch class.\n"
  example: []
  syntax:
    content: 'public class ResultSet : IDisposable'
    content.vb: >-
      Public Class ResultSet
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.#ctor(System.Data.Common.DbDataReader,System.Int32,System.Int32,Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.#ctor(System.Data.Common.DbDataReader,System.Int32,System.Int32,Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory)
  id: '#ctor(System.Data.Common.DbDataReader,System.Int32,System.Int32,Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory)'
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  langs:
  - csharp
  - vb
  name: ResultSet(DbDataReader, Int32, Int32, IFileStreamFactory)
  nameWithType: ResultSet.ResultSet(DbDataReader, Int32, Int32, IFileStreamFactory)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultSet(System.Data.Common.DbDataReader, System.Int32, System.Int32, Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 90
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nCreates a new result set and initializes its state\n"
  example: []
  syntax:
    content: public ResultSet(DbDataReader reader, int ordinal, int batchOrdinal, IFileStreamFactory factory)
    content.vb: Public Sub New(reader As DbDataReader, ordinal As Integer, batchOrdinal As Integer, factory As IFileStreamFactory)
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: The reader from executing a query
    - id: ordinal
      type: System.Int32
      description: The ID of the resultset, the ordinal of the result within the batch
    - id: batchOrdinal
      type: System.Int32
      description: The ID of the batch, the ordinal of the batch within the query
    - id: factory
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory
      description: Factory for creating a reader/writer
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultCompletion
  commentId: E:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultCompletion
  id: ResultCompletion
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  langs:
  - csharp
  - vb
  name: ResultCompletion
  nameWithType: ResultSet.ResultCompletion
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultCompletion
  type: Event
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ResultCompletion
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 120
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nEvent that will be called when the result set has completed execution\n"
  example: []
  syntax:
    content: public event ResultSet.ResultSetAsyncEventHandler ResultCompletion
    content.vb: Public Event ResultCompletion As ResultSet.ResultSetAsyncEventHandler
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultSetAsyncEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Columns
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Columns
  id: Columns
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  langs:
  - csharp
  - vb
  name: Columns
  nameWithType: ResultSet.Columns
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Columns
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Columns
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 131
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nThe columns for this result set\n"
  example: []
  syntax:
    content: public DbColumnWrapper[] Columns { get; }
    content.vb: Public ReadOnly Property Columns As DbColumnWrapper()
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper[]
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Columns*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Id
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Id
  id: Id
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ResultSet.Id
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Id
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 136
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nID of the result set, relative to the batch\n"
  example: []
  syntax:
    content: public int Id { get; }
    content.vb: Public ReadOnly Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.BatchId
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.BatchId
  id: BatchId
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  langs:
  - csharp
  - vb
  name: BatchId
  nameWithType: ResultSet.BatchId
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.BatchId
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: BatchId
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 141
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nID of the batch set, relative to the query\n"
  example: []
  syntax:
    content: public int BatchId { get; }
    content.vb: Public ReadOnly Property BatchId As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.BatchId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxCharsToStore
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxCharsToStore
  id: MaxCharsToStore
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  langs:
  - csharp
  - vb
  name: MaxCharsToStore
  nameWithType: ResultSet.MaxCharsToStore
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxCharsToStore
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: MaxCharsToStore
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 146
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nMaximum number of characters to store for a field\n"
  example: []
  syntax:
    content: public int MaxCharsToStore { get; }
    content.vb: Public ReadOnly Property MaxCharsToStore As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxCharsToStore*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxXmlCharsToStore
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxXmlCharsToStore
  id: MaxXmlCharsToStore
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  langs:
  - csharp
  - vb
  name: MaxXmlCharsToStore
  nameWithType: ResultSet.MaxXmlCharsToStore
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxXmlCharsToStore
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: MaxXmlCharsToStore
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 151
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nMaximum number of characters to store for an XML field\n"
  example: []
  syntax:
    content: public int MaxXmlCharsToStore { get; }
    content.vb: Public ReadOnly Property MaxXmlCharsToStore As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxXmlCharsToStore*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.RowCount
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.RowCount
  id: RowCount
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  langs:
  - csharp
  - vb
  name: RowCount
  nameWithType: ResultSet.RowCount
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.RowCount
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: RowCount
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 156
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nThe number of rows for this result set\n"
  example: []
  syntax:
    content: public long RowCount { get; }
    content.vb: Public ReadOnly Property RowCount As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.RowCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Summary
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Summary
  id: Summary
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  langs:
  - csharp
  - vb
  name: Summary
  nameWithType: ResultSet.Summary
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Summary
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Summary
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 161
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nGenerates a summary of this result set\n"
  example: []
  syntax:
    content: public ResultSetSummary Summary { get; }
    content.vb: Public ReadOnly Property Summary As ResultSetSummary
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Summary*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.GetSubset(System.Int32,System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.GetSubset(System.Int32,System.Int32)
  id: GetSubset(System.Int32,System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  langs:
  - csharp
  - vb
  name: GetSubset(Int32, Int32)
  nameWithType: ResultSet.GetSubset(Int32, Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.GetSubset(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetSubset
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 185
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nGenerates a subset of the rows from the result set\n"
  example: []
  syntax:
    content: public Task<ResultSetSubset> GetSubset(int startRow, int rowCount)
    content.vb: Public Function GetSubset(startRow As Integer, rowCount As Integer) As Task(Of ResultSetSubset)
    parameters:
    - id: startRow
      type: System.Int32
      description: The starting row of the results
    - id: rowCount
      type: System.Int32
      description: How many rows to retrieve
    return:
      type: System.Threading.Tasks.Task{Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset}
      description: A subset of results
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.GetSubset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ReadResultToEnd(System.Threading.CancellationToken)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ReadResultToEnd(System.Threading.CancellationToken)
  id: ReadResultToEnd(System.Threading.CancellationToken)
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  langs:
  - csharp
  - vb
  name: ReadResultToEnd(CancellationToken)
  nameWithType: ResultSet.ReadResultToEnd(CancellationToken)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ReadResultToEnd(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ReadResultToEnd
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 245
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nReads from the reader until there are no more results to read\n"
  example: []
  syntax:
    content: public Task ReadResultToEnd(CancellationToken cancellationToken)
    content.vb: Public Function ReadResultToEnd(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token for cancelling the query
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ReadResultToEnd*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Dispose
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Dispose
  id: Dispose
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ResultSet.Dispose()
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Dispose
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 288
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Dispose(System.Boolean)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: ResultSet.Dispose(Boolean)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Dispose
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/ResultSet.cs
    startLine: 294
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution
  commentId: N:Microsoft.SqlTools.ServiceLayer.QueryExecution
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.QueryExecution
  nameWithType: Microsoft.SqlTools.ServiceLayer.QueryExecution
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.#ctor
  isExternal: false
  name: ResultSet
  nameWithType: ResultSet.ResultSet
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultSet
- uid: System.Data.Common.DbDataReader
  commentId: T:System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: true
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  isExternal: false
  name: IFileStreamFactory
  nameWithType: IFileStreamFactory
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  commentId: N:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  nameWithType: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultSetAsyncEventHandler
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultSetAsyncEventHandler
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution
  isExternal: false
  name: ResultSet.ResultSetAsyncEventHandler
  nameWithType: ResultSet.ResultSetAsyncEventHandler
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultSetAsyncEventHandler
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Columns*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Columns
  isExternal: false
  name: Columns
  nameWithType: ResultSet.Columns
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Columns
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper[]
  name: DbColumnWrapper[]
  nameWithType: DbColumnWrapper[]
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper[]
  nameWithType.vb: DbColumnWrapper()
  fullname.vb: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper()
  name.vb: DbColumnWrapper()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper
    name: DbColumnWrapper
    nameWithType: DbColumnWrapper
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper
    name: DbColumnWrapper
    nameWithType: DbColumnWrapper
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Id*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Id
  isExternal: false
  name: Id
  nameWithType: ResultSet.Id
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Id
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.BatchId*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.BatchId
  isExternal: false
  name: BatchId
  nameWithType: ResultSet.BatchId
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.BatchId
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxCharsToStore*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxCharsToStore
  isExternal: false
  name: MaxCharsToStore
  nameWithType: ResultSet.MaxCharsToStore
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxCharsToStore
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxXmlCharsToStore*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxXmlCharsToStore
  isExternal: false
  name: MaxXmlCharsToStore
  nameWithType: ResultSet.MaxXmlCharsToStore
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.MaxXmlCharsToStore
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.RowCount*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.RowCount
  isExternal: false
  name: RowCount
  nameWithType: ResultSet.RowCount
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.RowCount
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Summary*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Summary
  isExternal: false
  name: Summary
  nameWithType: ResultSet.Summary
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Summary
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  isExternal: false
  name: ResultSetSummary
  nameWithType: ResultSetSummary
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.GetSubset*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.GetSubset
  isExternal: false
  name: GetSubset
  nameWithType: ResultSet.GetSubset
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.GetSubset
- uid: System.Threading.Tasks.Task{Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset}
  commentId: T:System.Threading.Tasks.Task{Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResultSetSubset>
  nameWithType: Task<ResultSetSubset>
  fullName: System.Threading.Tasks.Task<Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset>
  nameWithType.vb: Task(Of ResultSetSubset)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset)
  name.vb: Task(Of ResultSetSubset)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset
    name: ResultSetSubset
    nameWithType: ResultSetSubset
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset
    name: ResultSetSubset
    nameWithType: ResultSetSubset
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ReadResultToEnd*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ReadResultToEnd
  isExternal: false
  name: ReadResultToEnd
  nameWithType: ResultSet.ReadResultToEnd
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ReadResultToEnd
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Dispose*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Dispose
  isExternal: false
  name: Dispose
  nameWithType: ResultSet.Dispose
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
