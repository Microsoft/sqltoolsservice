### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
  id: ResultSetSummary
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  children:
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.BatchId
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.ColumnInfo
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.Id
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.RowCount
  langs:
  - csharp
  - vb
  name: ResultSetSummary
  nameWithType: ResultSetSummary
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/ResultSetSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ResultSetSummary
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/ResultSetSummary.cs
    startLine: 10
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nRepresents a summary of information about a result without returning any cells of the results\n"
  example: []
  syntax:
    content: public class ResultSetSummary
    content.vb: Public Class ResultSetSummary
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.Id
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.Id
  id: Id
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ResultSetSummary.Id
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/ResultSetSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Id
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/ResultSetSummary.cs
    startLine: 15
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nThe ID of the result set within the batch results\n"
  example: []
  syntax:
    content: public int Id { get; set; }
    content.vb: Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.BatchId
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.BatchId
  id: BatchId
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
  langs:
  - csharp
  - vb
  name: BatchId
  nameWithType: ResultSetSummary.BatchId
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.BatchId
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/ResultSetSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: BatchId
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/ResultSetSummary.cs
    startLine: 20
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nThe ID of the batch set within the query\n"
  example: []
  syntax:
    content: public int BatchId { get; set; }
    content.vb: Public Property BatchId As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.BatchId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.RowCount
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.RowCount
  id: RowCount
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
  langs:
  - csharp
  - vb
  name: RowCount
  nameWithType: ResultSetSummary.RowCount
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.RowCount
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/ResultSetSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: RowCount
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/ResultSetSummary.cs
    startLine: 25
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nThe number of rows that was returned with the resultset\n"
  example: []
  syntax:
    content: public long RowCount { get; set; }
    content.vb: Public Property RowCount As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.RowCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.ColumnInfo
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.ColumnInfo
  id: ColumnInfo
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
  langs:
  - csharp
  - vb
  name: ColumnInfo
  nameWithType: ResultSetSummary.ColumnInfo
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.ColumnInfo
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/ResultSetSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ColumnInfo
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/ResultSetSummary.cs
    startLine: 30
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nDetails about the columns that are provided as solutions\n"
  example: []
  syntax:
    content: public DbColumnWrapper[] ColumnInfo { get; set; }
    content.vb: Public Property ColumnInfo As DbColumnWrapper()
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper[]
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.ColumnInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.Id*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.Id
  isExternal: false
  name: Id
  nameWithType: ResultSetSummary.Id
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.BatchId*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.BatchId
  isExternal: false
  name: BatchId
  nameWithType: ResultSetSummary.BatchId
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.BatchId
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.RowCount*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.RowCount
  isExternal: false
  name: RowCount
  nameWithType: ResultSetSummary.RowCount
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.RowCount
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.ColumnInfo*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.ColumnInfo
  isExternal: false
  name: ColumnInfo
  nameWithType: ResultSetSummary.ColumnInfo
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.ColumnInfo
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper[]
  name: DbColumnWrapper[]
  nameWithType: DbColumnWrapper[]
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper[]
  nameWithType.vb: DbColumnWrapper()
  fullname.vb: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper()
  name.vb: DbColumnWrapper()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper
    name: DbColumnWrapper
    nameWithType: DbColumnWrapper
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper
    name: DbColumnWrapper
    nameWithType: DbColumnWrapper
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper
  - name: ()
    nameWithType: ()
    fullName: ()
