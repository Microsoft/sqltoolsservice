### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  id: MessageWriter
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  children:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.#ctor(System.IO.Stream,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Int32)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteResponse``1(``0,System.String,System.String)
  langs:
  - csharp
  - vb
  name: MessageWriter
  nameWithType: MessageWriter
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageWriter.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: MessageWriter
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageWriter.cs
    startLine: 16
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public class MessageWriter
    content.vb: Public Class MessageWriter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.#ctor(System.IO.Stream,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.#ctor(System.IO.Stream,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
  id: '#ctor(System.IO.Stream,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)'
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  langs:
  - csharp
  - vb
  name: MessageWriter(Stream, IMessageSerializer)
  nameWithType: MessageWriter.MessageWriter(Stream, IMessageSerializer)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.MessageWriter(System.IO.Stream, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageWriter.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageWriter.cs
    startLine: 32
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public MessageWriter(Stream outputStream, IMessageSerializer messageSerializer)
    content.vb: Public Sub New(outputStream As Stream, messageSerializer As IMessageSerializer)
    parameters:
    - id: outputStream
      type: System.IO.Stream
    - id: messageSerializer
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  id: WriteMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  langs:
  - csharp
  - vb
  name: WriteMessage(Message)
  nameWithType: MessageWriter.WriteMessage(Message)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageWriter.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: WriteMessage
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageWriter.cs
    startLine: 49
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public Task WriteMessage(Message messageToWrite)
    content.vb: Public Function WriteMessage(messageToWrite As Message) As Task
    parameters:
    - id: messageToWrite
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Int32)
  id: WriteRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  langs:
  - csharp
  - vb
  name: WriteRequest<TParams, TResult>(RequestType<TParams, TResult>, TParams, Int32)
  nameWithType: MessageWriter.WriteRequest<TParams, TResult>(RequestType<TParams, TResult>, TParams, Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteRequest<TParams, TResult>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>, TParams, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageWriter.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: WriteRequest
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageWriter.cs
    startLine: 92
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public Task WriteRequest<TParams, TResult>(RequestType<TParams, TResult> requestType, TParams requestParams, int requestId)
    content.vb: Public Function WriteRequest(Of TParams, TResult)(requestType As RequestType(Of TParams, TResult), requestParams As TParams, requestId As Integer) As Task
    parameters:
    - id: requestType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{{TParams},{TResult}}
    - id: requestParams
      type: '{TParams}'
    - id: requestId
      type: System.Int32
    typeParameters:
    - id: TParams
    - id: TResult
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteRequest*
  nameWithType.vb: MessageWriter.WriteRequest(Of TParams, TResult)(RequestType(Of TParams, TResult), TParams, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteRequest(Of TParams, TResult)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult), TParams, System.Int32)
  name.vb: WriteRequest(Of TParams, TResult)(RequestType(Of TParams, TResult), TParams, Int32)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteResponse``1(``0,System.String,System.String)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteResponse``1(``0,System.String,System.String)
  id: WriteResponse``1(``0,System.String,System.String)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  langs:
  - csharp
  - vb
  name: WriteResponse<TResult>(TResult, String, String)
  nameWithType: MessageWriter.WriteResponse<TResult>(TResult, String, String)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteResponse<TResult>(TResult, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageWriter.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: WriteResponse
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageWriter.cs
    startLine: 110
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public Task WriteResponse<TResult>(TResult resultContent, string method, string requestId)
    content.vb: Public Function WriteResponse(Of TResult)(resultContent As TResult, method As String, requestId As String) As Task
    parameters:
    - id: resultContent
      type: '{TResult}'
    - id: method
      type: System.String
    - id: requestId
      type: System.String
    typeParameters:
    - id: TResult
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteResponse*
  nameWithType.vb: MessageWriter.WriteResponse(Of TResult)(TResult, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteResponse(Of TResult)(TResult, System.String, System.String)
  name.vb: WriteResponse(Of TResult)(TResult, String, String)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  id: WriteEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  langs:
  - csharp
  - vb
  name: WriteEvent<TParams>(EventType<TParams>, TParams)
  nameWithType: MessageWriter.WriteEvent<TParams>(EventType<TParams>, TParams)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteEvent<TParams>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>, TParams)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageWriter.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: WriteEvent
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageWriter.cs
    startLine: 125
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public Task WriteEvent<TParams>(EventType<TParams> eventType, TParams eventParams)
    content.vb: Public Function WriteEvent(Of TParams)(eventType As EventType(Of TParams), eventParams As TParams) As Task
    parameters:
    - id: eventType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}}
    - id: eventParams
      type: '{TParams}'
    typeParameters:
    - id: TParams
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteEvent*
  nameWithType.vb: MessageWriter.WriteEvent(Of TParams)(EventType(Of TParams), TParams)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteEvent(Of TParams)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams), TParams)
  name.vb: WriteEvent(Of TParams)(EventType(Of TParams), TParams)
references:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.#ctor
  isExternal: false
  name: MessageWriter
  nameWithType: MessageWriter.MessageWriter
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.MessageWriter
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  isExternal: false
  name: IMessageSerializer
  nameWithType: IMessageSerializer
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers.IMessageSerializer
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Serializers
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteMessage*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteMessage
  isExternal: false
  name: WriteMessage
  nameWithType: MessageWriter.WriteMessage
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteMessage
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteRequest*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteRequest
  isExternal: false
  name: WriteRequest<TParams, TResult>
  nameWithType: MessageWriter.WriteRequest<TParams, TResult>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteRequest<TParams, TResult>
  nameWithType.vb: MessageWriter.WriteRequest(Of TParams, TResult)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteRequest(Of TParams, TResult)
  name.vb: WriteRequest(Of TParams, TResult)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{{TParams},{TResult}}
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1}
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
  name: RequestType<TParams, TResult>
  nameWithType: RequestType<TParams, TResult>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>
  nameWithType.vb: RequestType(Of TParams, TResult)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult)
  name.vb: RequestType(Of TParams, TResult)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TParams}'
  commentId: '!:TParams'
  definition: TParams
  name: TParams
  nameWithType: TParams
  fullName: TParams
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: RequestType<TParams, TResult>
  nameWithType: RequestType<TParams, TResult>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>
  nameWithType.vb: RequestType(Of TParams, TResult)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult)
  name.vb: RequestType(Of TParams, TResult)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: TParams
  isExternal: false
  name: TParams
  nameWithType: TParams
  fullName: TParams
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteResponse*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteResponse
  isExternal: false
  name: WriteResponse<TResult>
  nameWithType: MessageWriter.WriteResponse<TResult>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteResponse<TResult>
  nameWithType.vb: MessageWriter.WriteResponse(Of TResult)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteResponse(Of TResult)
  name.vb: WriteResponse(Of TResult)
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TResult
  isExternal: false
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteEvent*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteEvent
  isExternal: false
  name: WriteEvent<TParams>
  nameWithType: MessageWriter.WriteEvent<TParams>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteEvent<TParams>
  nameWithType.vb: MessageWriter.WriteEvent(Of TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter.WriteEvent(Of TParams)
  name.vb: WriteEvent(Of TParams)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}}
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0}
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
  name: EventType<TParams>
  nameWithType: EventType<TParams>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>
  nameWithType.vb: EventType(Of TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams)
  name.vb: EventType(Of TParams)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: EventType<TParams>
  nameWithType: EventType<TParams>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>
  nameWithType.vb: EventType(Of TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams)
  name.vb: EventType(Of TParams)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
