### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
  commentId: T:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
  id: SqlToolsSettings
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext
  children:
  - Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsDiagnositicsEnabled
  - Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsIntelliSenseEnabled
  - Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsQuickInfoEnabled
  - Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsSuggestionsEnabled
  - Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.QueryExecutionSettings
  - Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.SqlTools
  - Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.Update(Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings)
  langs:
  - csharp
  - vb
  name: SqlToolsSettings
  nameWithType: SqlToolsSettings
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SqlToolsSettings
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
    startLine: 12
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nClass for serialization and deserialization of the settings the SQL Tools Service needs.\n"
  example: []
  syntax:
    content: public class SqlToolsSettings
    content.vb: Public Class SqlToolsSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.SqlTools
  commentId: P:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.SqlTools
  id: SqlTools
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
  langs:
  - csharp
  - vb
  name: SqlTools
  nameWithType: SqlToolsSettings.SqlTools
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.SqlTools
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SqlTools
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
    startLine: 19
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nGets or sets the underlying settings value object\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("mssql")]

      public SqlToolsSettingsValues SqlTools { get; set; }
    content.vb: >-
      <JsonProperty("mssql")>

      Public Property SqlTools As SqlToolsSettingsValues
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettingsValues
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.SqlTools*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: mssql
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.QueryExecutionSettings
  commentId: P:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.QueryExecutionSettings
  id: QueryExecutionSettings
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
  langs:
  - csharp
  - vb
  name: QueryExecutionSettings
  nameWithType: SqlToolsSettings.QueryExecutionSettings
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.QueryExecutionSettings
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: QueryExecutionSettings
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
    startLine: 39
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nQuery excution settings forwarding property\n"
  example: []
  syntax:
    content: public QueryExecutionSettings QueryExecutionSettings { get; }
    content.vb: Public ReadOnly Property QueryExecutionSettings As QueryExecutionSettings
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.QueryExecutionSettings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.Update(Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings)
  commentId: M:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.Update(Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings)
  id: Update(Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings)
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
  langs:
  - csharp
  - vb
  name: Update(SqlToolsSettings)
  nameWithType: SqlToolsSettings.Update(SqlToolsSettings)
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.Update(Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Update
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
    startLine: 48
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nUpdates the extension settings\n"
  example: []
  syntax:
    content: public void Update(SqlToolsSettings settings)
    content.vb: Public Sub Update(settings As SqlToolsSettings)
    parameters:
    - id: settings
      type: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
      description: ''
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.Update*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsDiagnositicsEnabled
  commentId: P:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsDiagnositicsEnabled
  id: IsDiagnositicsEnabled
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
  langs:
  - csharp
  - vb
  name: IsDiagnositicsEnabled
  nameWithType: SqlToolsSettings.IsDiagnositicsEnabled
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsDiagnositicsEnabled
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: IsDiagnositicsEnabled
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
    startLine: 60
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nGets a flag determining if diagnostics are enabled\n"
  example: []
  syntax:
    content: public bool IsDiagnositicsEnabled { get; }
    content.vb: Public ReadOnly Property IsDiagnositicsEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsDiagnositicsEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsSuggestionsEnabled
  commentId: P:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsSuggestionsEnabled
  id: IsSuggestionsEnabled
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
  langs:
  - csharp
  - vb
  name: IsSuggestionsEnabled
  nameWithType: SqlToolsSettings.IsSuggestionsEnabled
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsSuggestionsEnabled
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: IsSuggestionsEnabled
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
    startLine: 72
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nGets a flag determining if suggestions are enabled\n"
  example: []
  syntax:
    content: public bool IsSuggestionsEnabled { get; }
    content.vb: Public ReadOnly Property IsSuggestionsEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsSuggestionsEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsQuickInfoEnabled
  commentId: P:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsQuickInfoEnabled
  id: IsQuickInfoEnabled
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
  langs:
  - csharp
  - vb
  name: IsQuickInfoEnabled
  nameWithType: SqlToolsSettings.IsQuickInfoEnabled
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsQuickInfoEnabled
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: IsQuickInfoEnabled
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
    startLine: 84
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nGets a flag determining if quick info is enabled\n"
  example: []
  syntax:
    content: public bool IsQuickInfoEnabled { get; }
    content.vb: Public ReadOnly Property IsQuickInfoEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsQuickInfoEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsIntelliSenseEnabled
  commentId: P:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsIntelliSenseEnabled
  id: IsIntelliSenseEnabled
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
  langs:
  - csharp
  - vb
  name: IsIntelliSenseEnabled
  nameWithType: SqlToolsSettings.IsIntelliSenseEnabled
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsIntelliSenseEnabled
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: IsIntelliSenseEnabled
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/SqlToolsSettings.cs
    startLine: 96
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nGets a flag determining if IntelliSense is enabled\n"
  example: []
  syntax:
    content: public bool IsIntelliSenseEnabled { get; }
    content.vb: Public ReadOnly Property IsIntelliSenseEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsIntelliSenseEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext
  commentId: N:Microsoft.SqlTools.ServiceLayer.SqlContext
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.SqlContext
  nameWithType: Microsoft.SqlTools.ServiceLayer.SqlContext
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.SqlTools*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.SqlTools
  isExternal: false
  name: SqlTools
  nameWithType: SqlToolsSettings.SqlTools
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.SqlTools
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettingsValues
  commentId: T:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettingsValues
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext
  isExternal: false
  name: SqlToolsSettingsValues
  nameWithType: SqlToolsSettingsValues
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettingsValues
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.QueryExecutionSettings*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.QueryExecutionSettings
  isExternal: false
  name: QueryExecutionSettings
  nameWithType: SqlToolsSettings.QueryExecutionSettings
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.QueryExecutionSettings
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
  commentId: T:Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext
  isExternal: false
  name: QueryExecutionSettings
  nameWithType: QueryExecutionSettings
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.Update*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.Update
  isExternal: false
  name: Update
  nameWithType: SqlToolsSettings.Update
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.Update
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
  commentId: T:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext
  isExternal: false
  name: SqlToolsSettings
  nameWithType: SqlToolsSettings
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsDiagnositicsEnabled*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsDiagnositicsEnabled
  isExternal: false
  name: IsDiagnositicsEnabled
  nameWithType: SqlToolsSettings.IsDiagnositicsEnabled
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsDiagnositicsEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsSuggestionsEnabled*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsSuggestionsEnabled
  isExternal: false
  name: IsSuggestionsEnabled
  nameWithType: SqlToolsSettings.IsSuggestionsEnabled
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsSuggestionsEnabled
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsQuickInfoEnabled*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsQuickInfoEnabled
  isExternal: false
  name: IsQuickInfoEnabled
  nameWithType: SqlToolsSettings.IsQuickInfoEnabled
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsQuickInfoEnabled
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsIntelliSenseEnabled*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsIntelliSenseEnabled
  isExternal: false
  name: IsIntelliSenseEnabled
  nameWithType: SqlToolsSettings.IsIntelliSenseEnabled
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.SqlToolsSettings.IsIntelliSenseEnabled
