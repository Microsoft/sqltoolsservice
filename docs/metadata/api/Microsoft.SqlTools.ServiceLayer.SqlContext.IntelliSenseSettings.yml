### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
  commentId: T:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
  id: IntelliSenseSettings
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext
  children:
  - Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.#ctor
  - Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableErrorChecking
  - Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableIntellisense
  - Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableQuickInfo
  - Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableSuggestions
  - Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.LowerCaseSuggestions
  - Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.Update(Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings)
  langs:
  - csharp
  - vb
  name: IntelliSenseSettings
  nameWithType: IntelliSenseSettings
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: IntelliSenseSettings
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
    startLine: 10
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nClass for serialization and deserialization of IntelliSense settings\n"
  example: []
  syntax:
    content: public class IntelliSenseSettings
    content.vb: Public Class IntelliSenseSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.#ctor
  commentId: M:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.#ctor
  id: '#ctor'
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
  langs:
  - csharp
  - vb
  name: IntelliSenseSettings()
  nameWithType: IntelliSenseSettings.IntelliSenseSettings()
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.IntelliSenseSettings()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
    startLine: 15
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nInitialize the IntelliSense settings defaults\n"
  example: []
  syntax:
    content: public IntelliSenseSettings()
    content.vb: Public Sub New
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableIntellisense
  commentId: P:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableIntellisense
  id: EnableIntellisense
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
  langs:
  - csharp
  - vb
  name: EnableIntellisense
  nameWithType: IntelliSenseSettings.EnableIntellisense
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableIntellisense
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: EnableIntellisense
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
    startLine: 28
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nGets or sets a flag determining if IntelliSense is enabled\n"
  example: []
  syntax:
    content: public bool EnableIntellisense { get; set; }
    content.vb: Public Property EnableIntellisense As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableIntellisense*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableSuggestions
  commentId: P:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableSuggestions
  id: EnableSuggestions
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
  langs:
  - csharp
  - vb
  name: EnableSuggestions
  nameWithType: IntelliSenseSettings.EnableSuggestions
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableSuggestions
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: EnableSuggestions
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
    startLine: 34
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nGets or sets a flag determining if suggestions are enabled\n"
  example: []
  syntax:
    content: public bool ? EnableSuggestions { get; set; }
    content.vb: Public Property EnableSuggestions As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: ''
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableSuggestions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.LowerCaseSuggestions
  commentId: P:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.LowerCaseSuggestions
  id: LowerCaseSuggestions
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
  langs:
  - csharp
  - vb
  name: LowerCaseSuggestions
  nameWithType: IntelliSenseSettings.LowerCaseSuggestions
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.LowerCaseSuggestions
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: LowerCaseSuggestions
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
    startLine: 39
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nGets or sets a flag determining if built-in suggestions should be lowercase\n"
  example: []
  syntax:
    content: public bool ? LowerCaseSuggestions { get; set; }
    content.vb: Public Property LowerCaseSuggestions As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.LowerCaseSuggestions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableErrorChecking
  commentId: P:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableErrorChecking
  id: EnableErrorChecking
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
  langs:
  - csharp
  - vb
  name: EnableErrorChecking
  nameWithType: IntelliSenseSettings.EnableErrorChecking
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableErrorChecking
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: EnableErrorChecking
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
    startLine: 44
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nGets or sets a flag determining if diagnostics are enabled\n"
  example: []
  syntax:
    content: public bool ? EnableErrorChecking { get; set; }
    content.vb: Public Property EnableErrorChecking As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableErrorChecking*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableQuickInfo
  commentId: P:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableQuickInfo
  id: EnableQuickInfo
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
  langs:
  - csharp
  - vb
  name: EnableQuickInfo
  nameWithType: IntelliSenseSettings.EnableQuickInfo
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableQuickInfo
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: EnableQuickInfo
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
    startLine: 49
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nGets or sets a flag determining if quick info is enabled\n"
  example: []
  syntax:
    content: public bool ? EnableQuickInfo { get; set; }
    content.vb: Public Property EnableQuickInfo As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableQuickInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.Update(Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings)
  commentId: M:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.Update(Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings)
  id: Update(Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings)
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
  langs:
  - csharp
  - vb
  name: Update(IntelliSenseSettings)
  nameWithType: IntelliSenseSettings.Update(IntelliSenseSettings)
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.Update(Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Update
    path: ../src/Microsoft.SqlTools.ServiceLayer/SqlContext/IntelliSenseSettings.cs
    startLine: 55
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.SqlContext
  summary: "\nUpdate the Intellisense settings\n"
  example: []
  syntax:
    content: public void Update(IntelliSenseSettings settings)
    content.vb: Public Sub Update(settings As IntelliSenseSettings)
    parameters:
    - id: settings
      type: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
      description: ''
  overload: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.Update*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext
  commentId: N:Microsoft.SqlTools.ServiceLayer.SqlContext
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.SqlContext
  nameWithType: Microsoft.SqlTools.ServiceLayer.SqlContext
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.#ctor
  isExternal: false
  name: IntelliSenseSettings
  nameWithType: IntelliSenseSettings.IntelliSenseSettings
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.IntelliSenseSettings
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableIntellisense*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableIntellisense
  isExternal: false
  name: EnableIntellisense
  nameWithType: IntelliSenseSettings.EnableIntellisense
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableIntellisense
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableSuggestions*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableSuggestions
  isExternal: false
  name: EnableSuggestions
  nameWithType: IntelliSenseSettings.EnableSuggestions
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableSuggestions
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.LowerCaseSuggestions*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.LowerCaseSuggestions
  isExternal: false
  name: LowerCaseSuggestions
  nameWithType: IntelliSenseSettings.LowerCaseSuggestions
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.LowerCaseSuggestions
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableErrorChecking*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableErrorChecking
  isExternal: false
  name: EnableErrorChecking
  nameWithType: IntelliSenseSettings.EnableErrorChecking
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableErrorChecking
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableQuickInfo*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableQuickInfo
  isExternal: false
  name: EnableQuickInfo
  nameWithType: IntelliSenseSettings.EnableQuickInfo
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.EnableQuickInfo
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.Update*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.Update
  isExternal: false
  name: Update
  nameWithType: IntelliSenseSettings.Update
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings.Update
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
  commentId: T:Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext
  isExternal: false
  name: IntelliSenseSettings
  nameWithType: IntelliSenseSettings
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.IntelliSenseSettings
