### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore
  commentId: T:Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore
  id: ICredentialStore
  parent: Microsoft.SqlTools.ServiceLayer.Credentials
  children:
  - Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.DeletePassword(System.String)
  - Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.Save(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential)
  - Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.TryGetPassword(System.String,System.String@)
  langs:
  - csharp
  - vb
  name: ICredentialStore
  nameWithType: ICredentialStore
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore
  type: Interface
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/ICredentialStore.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ICredentialStore
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/ICredentialStore.cs
    startLine: 12
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials
  summary: "\nAn <xref href=\"Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore\" data-throw-if-not-resolved=\"false\"></xref> support securely saving and retrieving passwords\n"
  example: []
  syntax:
    content: public interface ICredentialStore
    content.vb: Public Interface ICredentialStore
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.Save(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.Save(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential)
  id: Save(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential)
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore
  langs:
  - csharp
  - vb
  name: Save(Credential)
  nameWithType: ICredentialStore.Save(Credential)
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.Save(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/ICredentialStore.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Save
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/ICredentialStore.cs
    startLine: 22
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials
  summary: "\nSaves a Password linked to a given Credential\n"
  example: []
  syntax:
    content: bool Save(Credential credential)
    content.vb: Function Save(credential As Credential) As Boolean
    parameters:
    - id: credential
      type: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
      description: "\nA <xref href=\"Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential\" data-throw-if-not-resolved=\"false\"></xref> to be saved. \n<xref href=\"Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential.CredentialId\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential.Password\" data-throw-if-not-resolved=\"false\"></xref> are required\n"
    return:
      type: System.Boolean
      description: True if successful, false otherwise
  overload: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.Save*
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.TryGetPassword(System.String,System.String@)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.TryGetPassword(System.String,System.String@)
  id: TryGetPassword(System.String,System.String@)
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore
  langs:
  - csharp
  - vb
  name: TryGetPassword(String, out String)
  nameWithType: ICredentialStore.TryGetPassword(String, out String)
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.TryGetPassword(System.String, out System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/ICredentialStore.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: TryGetPassword
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/ICredentialStore.cs
    startLine: 30
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials
  summary: "\nGets a Password and sets it into a <xref href=\"Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential\" data-throw-if-not-resolved=\"false\"></xref> object\n"
  example: []
  syntax:
    content: bool TryGetPassword(string credentialId, out string password)
    content.vb: Function TryGetPassword(credentialId As String, ByRef password As String) As Boolean
    parameters:
    - id: credentialId
      type: System.String
      description: The name of the credential to find the password for. This is required
    - id: password
      type: System.String
      description: Out value
    return:
      type: System.Boolean
      description: true if password was found, false otherwise
  overload: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.TryGetPassword*
  nameWithType.vb: ICredentialStore.TryGetPassword(String, ByRef String)
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.TryGetPassword(System.String, ByRef System.String)
  name.vb: TryGetPassword(String, ByRef String)
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.DeletePassword(System.String)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.DeletePassword(System.String)
  id: DeletePassword(System.String)
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore
  langs:
  - csharp
  - vb
  name: DeletePassword(String)
  nameWithType: ICredentialStore.DeletePassword(String)
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.DeletePassword(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/ICredentialStore.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: DeletePassword
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/ICredentialStore.cs
    startLine: 37
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials
  summary: "\nDeletes a password linked to a given credential\n"
  example: []
  syntax:
    content: bool DeletePassword(string credentialId)
    content.vb: Function DeletePassword(credentialId As String) As Boolean
    parameters:
    - id: credentialId
      type: System.String
      description: The name of the credential to find the password for. This is required
    return:
      type: System.Boolean
      description: True if password existed and was deleted, false otherwise
  overload: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.DeletePassword*
references:
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore
  commentId: T:Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore
  isExternal: false
  name: ICredentialStore
  nameWithType: ICredentialStore
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore
- uid: Microsoft.SqlTools.ServiceLayer.Credentials
  commentId: N:Microsoft.SqlTools.ServiceLayer.Credentials
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Credentials
  nameWithType: Microsoft.SqlTools.ServiceLayer.Credentials
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
  commentId: T:Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts
  isExternal: false
  name: Credential
  nameWithType: Credential
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential.CredentialId
  commentId: P:Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential.CredentialId
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential.Password
  commentId: P:Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential.Password
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.Save*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.Save
  isExternal: false
  name: Save
  nameWithType: ICredentialStore.Save
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.Save
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Credentials.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.TryGetPassword*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.TryGetPassword
  isExternal: false
  name: TryGetPassword
  nameWithType: ICredentialStore.TryGetPassword
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.TryGetPassword
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.DeletePassword*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.DeletePassword
  isExternal: false
  name: DeletePassword
  nameWithType: ICredentialStore.DeletePassword
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.ICredentialStore.DeletePassword
