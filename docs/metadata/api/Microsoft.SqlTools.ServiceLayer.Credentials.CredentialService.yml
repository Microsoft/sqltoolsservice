### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService
  commentId: T:Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService
  id: CredentialService
  parent: Microsoft.SqlTools.ServiceLayer.Credentials
  children:
  - Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleDeleteCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{System.Boolean})
  - Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleReadCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential})
  - Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleSaveCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{System.Boolean})
  - Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.InitializeService(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint)
  - Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.Instance
  langs:
  - csharp
  - vb
  name: CredentialService
  nameWithType: CredentialService
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/CredentialService.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: CredentialService
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/CredentialService.cs
    startLine: 21
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials
  summary: "\nService responsible for securing credentials in a platform-neutral manner. This provides\na generic API for read, save and delete credentials\n"
  example: []
  syntax:
    content: public class CredentialService
    content.vb: Public Class CredentialService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.Instance
  commentId: P:Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.Instance
  id: Instance
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: CredentialService.Instance
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.Instance
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/CredentialService.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Instance
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/CredentialService.cs
    startLine: 36
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials
  summary: "\nGets the singleton service instance\n"
  example: []
  syntax:
    content: public static CredentialService Instance { get; }
    content.vb: Public Shared ReadOnly Property Instance As CredentialService
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService
  overload: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.InitializeService(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.InitializeService(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint)
  id: InitializeService(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint)
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService
  langs:
  - csharp
  - vb
  name: InitializeService(IProtocolEndpoint)
  nameWithType: CredentialService.InitializeService(IProtocolEndpoint)
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.InitializeService(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/CredentialService.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: InitializeService
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/CredentialService.cs
    startLine: 85
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials
  syntax:
    content: public void InitializeService(IProtocolEndpoint serviceHost)
    content.vb: Public Sub InitializeService(serviceHost As IProtocolEndpoint)
    parameters:
    - id: serviceHost
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint
  overload: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.InitializeService*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleReadCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleReadCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential})
  id: HandleReadCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential})
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService
  langs:
  - csharp
  - vb
  name: HandleReadCredentialRequest(Credential, RequestContext<Credential>)
  nameWithType: CredentialService.HandleReadCredentialRequest(Credential, RequestContext<Credential>)
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleReadCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext<Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential>)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/CredentialService.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: HandleReadCredentialRequest
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/CredentialService.cs
    startLine: 93
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials
  syntax:
    content: public Task HandleReadCredentialRequest(Credential credential, RequestContext<Credential> requestContext)
    content.vb: Public Function HandleReadCredentialRequest(credential As Credential, requestContext As RequestContext(Of Credential)) As Task
    parameters:
    - id: credential
      type: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
    - id: requestContext
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential}
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleReadCredentialRequest*
  nameWithType.vb: CredentialService.HandleReadCredentialRequest(Credential, RequestContext(Of Credential))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleReadCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext(Of Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential))
  name.vb: HandleReadCredentialRequest(Credential, RequestContext(Of Credential))
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleSaveCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{System.Boolean})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleSaveCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{System.Boolean})
  id: HandleSaveCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{System.Boolean})
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService
  langs:
  - csharp
  - vb
  name: HandleSaveCredentialRequest(Credential, RequestContext<Boolean>)
  nameWithType: CredentialService.HandleSaveCredentialRequest(Credential, RequestContext<Boolean>)
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleSaveCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/CredentialService.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: HandleSaveCredentialRequest
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/CredentialService.cs
    startLine: 116
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials
  syntax:
    content: public Task HandleSaveCredentialRequest(Credential credential, RequestContext<bool> requestContext)
    content.vb: Public Function HandleSaveCredentialRequest(credential As Credential, requestContext As RequestContext(Of Boolean)) As Task
    parameters:
    - id: credential
      type: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
    - id: requestContext
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{System.Boolean}
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleSaveCredentialRequest*
  nameWithType.vb: CredentialService.HandleSaveCredentialRequest(Credential, RequestContext(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleSaveCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext(Of System.Boolean))
  name.vb: HandleSaveCredentialRequest(Credential, RequestContext(Of Boolean))
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleDeleteCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{System.Boolean})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleDeleteCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{System.Boolean})
  id: HandleDeleteCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{System.Boolean})
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService
  langs:
  - csharp
  - vb
  name: HandleDeleteCredentialRequest(Credential, RequestContext<Boolean>)
  nameWithType: CredentialService.HandleDeleteCredentialRequest(Credential, RequestContext<Boolean>)
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleDeleteCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Credentials/CredentialService.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: HandleDeleteCredentialRequest
    path: ../src/Microsoft.SqlTools.ServiceLayer/Credentials/CredentialService.cs
    startLine: 126
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Credentials
  syntax:
    content: public Task HandleDeleteCredentialRequest(Credential credential, RequestContext<bool> requestContext)
    content.vb: Public Function HandleDeleteCredentialRequest(credential As Credential, requestContext As RequestContext(Of Boolean)) As Task
    parameters:
    - id: credential
      type: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
    - id: requestContext
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{System.Boolean}
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleDeleteCredentialRequest*
  nameWithType.vb: CredentialService.HandleDeleteCredentialRequest(Credential, RequestContext(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleDeleteCredentialRequest(Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext(Of System.Boolean))
  name.vb: HandleDeleteCredentialRequest(Credential, RequestContext(Of Boolean))
references:
- uid: Microsoft.SqlTools.ServiceLayer.Credentials
  commentId: N:Microsoft.SqlTools.ServiceLayer.Credentials
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Credentials
  nameWithType: Microsoft.SqlTools.ServiceLayer.Credentials
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.Instance*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.Instance
  isExternal: false
  name: Instance
  nameWithType: CredentialService.Instance
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.Instance
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService
  commentId: T:Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService
  parent: Microsoft.SqlTools.ServiceLayer.Credentials
  isExternal: false
  name: CredentialService
  nameWithType: CredentialService
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.InitializeService*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.InitializeService
  isExternal: false
  name: InitializeService
  nameWithType: CredentialService.InitializeService
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.InitializeService
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  isExternal: false
  name: IProtocolEndpoint
  nameWithType: IProtocolEndpoint
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleReadCredentialRequest*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleReadCredentialRequest
  isExternal: false
  name: HandleReadCredentialRequest
  nameWithType: CredentialService.HandleReadCredentialRequest
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleReadCredentialRequest
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
  commentId: T:Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
  parent: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts
  isExternal: false
  name: Credential
  nameWithType: Credential
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential}
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential}
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
  name: RequestContext<Credential>
  nameWithType: RequestContext<Credential>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext<Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential>
  nameWithType.vb: RequestContext(Of Credential)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext(Of Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential)
  name.vb: RequestContext(Of Credential)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
    name: Credential
    nameWithType: Credential
    fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
    name: Credential
    nameWithType: Credential
    fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts.Credential
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Credentials.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.Contracts
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
  isExternal: false
  name: RequestContext<TResult>
  nameWithType: RequestContext<TResult>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext<TResult>
  nameWithType.vb: RequestContext(Of TResult)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext(Of TResult)
  name.vb: RequestContext(Of TResult)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleSaveCredentialRequest*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleSaveCredentialRequest
  isExternal: false
  name: HandleSaveCredentialRequest
  nameWithType: CredentialService.HandleSaveCredentialRequest
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleSaveCredentialRequest
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{System.Boolean}
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{System.Boolean}
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
  name: RequestContext<Boolean>
  nameWithType: RequestContext<Boolean>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext<System.Boolean>
  nameWithType.vb: RequestContext(Of Boolean)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext(Of System.Boolean)
  name.vb: RequestContext(Of Boolean)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleDeleteCredentialRequest*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleDeleteCredentialRequest
  isExternal: false
  name: HandleDeleteCredentialRequest
  nameWithType: CredentialService.HandleDeleteCredentialRequest
  fullName: Microsoft.SqlTools.ServiceLayer.Credentials.CredentialService.HandleDeleteCredentialRequest
