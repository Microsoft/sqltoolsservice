### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo
  commentId: T:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo
  id: ServerInfo
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  children:
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.AzureVersion
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.EngineEditionId
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.IsCloud
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.OsVersion
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerEdition
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerLevel
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMajorVersion
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMinorVersion
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerReleaseVersion
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerVersion
  langs:
  - csharp
  - vb
  name: ServerInfo
  nameWithType: ServerInfo
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ServerInfo
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
    startLine: 10
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nContract for information on the connected SQL Server instance.\n"
  example: []
  syntax:
    content: public class ServerInfo
    content.vb: Public Class ServerInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMajorVersion
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMajorVersion
  id: ServerMajorVersion
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo
  langs:
  - csharp
  - vb
  name: ServerMajorVersion
  nameWithType: ServerInfo.ServerMajorVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMajorVersion
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ServerMajorVersion
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
    startLine: 15
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nThe major version of the SQL Server instance.\n"
  example: []
  syntax:
    content: public int ServerMajorVersion { get; set; }
    content.vb: Public Property ServerMajorVersion As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMajorVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMinorVersion
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMinorVersion
  id: ServerMinorVersion
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo
  langs:
  - csharp
  - vb
  name: ServerMinorVersion
  nameWithType: ServerInfo.ServerMinorVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMinorVersion
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ServerMinorVersion
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
    startLine: 20
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nThe minor version of the SQL Server instance.\n"
  example: []
  syntax:
    content: public int ServerMinorVersion { get; set; }
    content.vb: Public Property ServerMinorVersion As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMinorVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerReleaseVersion
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerReleaseVersion
  id: ServerReleaseVersion
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo
  langs:
  - csharp
  - vb
  name: ServerReleaseVersion
  nameWithType: ServerInfo.ServerReleaseVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerReleaseVersion
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ServerReleaseVersion
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
    startLine: 25
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nThe build of the SQL Server instance.\n"
  example: []
  syntax:
    content: public int ServerReleaseVersion { get; set; }
    content.vb: Public Property ServerReleaseVersion As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerReleaseVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.EngineEditionId
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.EngineEditionId
  id: EngineEditionId
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo
  langs:
  - csharp
  - vb
  name: EngineEditionId
  nameWithType: ServerInfo.EngineEditionId
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.EngineEditionId
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: EngineEditionId
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
    startLine: 30
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nThe ID of the engine edition of the SQL Server instance.\n"
  example: []
  syntax:
    content: public int EngineEditionId { get; set; }
    content.vb: Public Property EngineEditionId As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.EngineEditionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerVersion
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerVersion
  id: ServerVersion
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo
  langs:
  - csharp
  - vb
  name: ServerVersion
  nameWithType: ServerInfo.ServerVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerVersion
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ServerVersion
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
    startLine: 35
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nString containing the full server version text.\n"
  example: []
  syntax:
    content: public string ServerVersion { get; set; }
    content.vb: Public Property ServerVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerLevel
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerLevel
  id: ServerLevel
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo
  langs:
  - csharp
  - vb
  name: ServerLevel
  nameWithType: ServerInfo.ServerLevel
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerLevel
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ServerLevel
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
    startLine: 40
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nString describing the product level of the server.\n"
  example: []
  syntax:
    content: public string ServerLevel { get; set; }
    content.vb: Public Property ServerLevel As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerEdition
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerEdition
  id: ServerEdition
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo
  langs:
  - csharp
  - vb
  name: ServerEdition
  nameWithType: ServerInfo.ServerEdition
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerEdition
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ServerEdition
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
    startLine: 45
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nThe edition of the SQL Server instance.\n"
  example: []
  syntax:
    content: public string ServerEdition { get; set; }
    content.vb: Public Property ServerEdition As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerEdition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.IsCloud
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.IsCloud
  id: IsCloud
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo
  langs:
  - csharp
  - vb
  name: IsCloud
  nameWithType: ServerInfo.IsCloud
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.IsCloud
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: IsCloud
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
    startLine: 50
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nWhether the SQL Server instance is running in the cloud (Azure) or not.\n"
  example: []
  syntax:
    content: public bool IsCloud { get; set; }
    content.vb: Public Property IsCloud As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.IsCloud*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.AzureVersion
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.AzureVersion
  id: AzureVersion
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo
  langs:
  - csharp
  - vb
  name: AzureVersion
  nameWithType: ServerInfo.AzureVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.AzureVersion
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: AzureVersion
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
    startLine: 55
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nThe version of Azure that the SQL Server instance is running on, if applicable.\n"
  example: []
  syntax:
    content: public int AzureVersion { get; set; }
    content.vb: Public Property AzureVersion As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.AzureVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.OsVersion
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.OsVersion
  id: OsVersion
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo
  langs:
  - csharp
  - vb
  name: OsVersion
  nameWithType: ServerInfo.OsVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.OsVersion
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: OsVersion
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ServerInfo.cs
    startLine: 60
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nThe Operating System version string of the machine running the SQL Server instance.\n"
  example: []
  syntax:
    content: public string OsVersion { get; set; }
    content.vb: Public Property OsVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.OsVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMajorVersion*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMajorVersion
  isExternal: false
  name: ServerMajorVersion
  nameWithType: ServerInfo.ServerMajorVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMajorVersion
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMinorVersion*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMinorVersion
  isExternal: false
  name: ServerMinorVersion
  nameWithType: ServerInfo.ServerMinorVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerMinorVersion
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerReleaseVersion*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerReleaseVersion
  isExternal: false
  name: ServerReleaseVersion
  nameWithType: ServerInfo.ServerReleaseVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerReleaseVersion
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.EngineEditionId*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.EngineEditionId
  isExternal: false
  name: EngineEditionId
  nameWithType: ServerInfo.EngineEditionId
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.EngineEditionId
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerVersion*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerVersion
  isExternal: false
  name: ServerVersion
  nameWithType: ServerInfo.ServerVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerVersion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerLevel*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerLevel
  isExternal: false
  name: ServerLevel
  nameWithType: ServerInfo.ServerLevel
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerLevel
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerEdition*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerEdition
  isExternal: false
  name: ServerEdition
  nameWithType: ServerInfo.ServerEdition
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.ServerEdition
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.IsCloud*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.IsCloud
  isExternal: false
  name: IsCloud
  nameWithType: ServerInfo.IsCloud
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.IsCloud
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.AzureVersion*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.AzureVersion
  isExternal: false
  name: AzureVersion
  nameWithType: ServerInfo.AzureVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.AzureVersion
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.OsVersion*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.OsVersion
  isExternal: false
  name: OsVersion
  nameWithType: ServerInfo.OsVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ServerInfo.OsVersion
