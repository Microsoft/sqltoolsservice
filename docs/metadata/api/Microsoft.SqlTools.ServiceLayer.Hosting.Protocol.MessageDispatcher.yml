### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  id: MessageDispatcher
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  children:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.#ctor(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.DispatchMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.InMessageLoopThread
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageReader
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageWriter
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.OnUnhandledException(System.Exception)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task},System.Boolean)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetResponseHandler(System.Action{Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message})
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Start
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Stop
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SynchronizationContext
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.UnhandledException
  langs:
  - csharp
  - vb
  name: MessageDispatcher
  nameWithType: MessageDispatcher
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: MessageDispatcher
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 17
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public class MessageDispatcher
    content.vb: Public Class MessageDispatcher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SynchronizationContext
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SynchronizationContext
  id: SynchronizationContext
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: SynchronizationContext
  nameWithType: MessageDispatcher.SynchronizationContext
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SynchronizationContext
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SynchronizationContext
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 40
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public SynchronizationContext SynchronizationContext { get; }
    content.vb: Public ReadOnly Property SynchronizationContext As SynchronizationContext
    parameters: []
    return:
      type: System.Threading.SynchronizationContext
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SynchronizationContext*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.InMessageLoopThread
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.InMessageLoopThread
  id: InMessageLoopThread
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: InMessageLoopThread
  nameWithType: MessageDispatcher.InMessageLoopThread
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.InMessageLoopThread
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: InMessageLoopThread
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 42
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public bool InMessageLoopThread { get; }
    content.vb: Public ReadOnly Property InMessageLoopThread As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.InMessageLoopThread*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageReader
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageReader
  id: MessageReader
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: MessageReader
  nameWithType: MessageDispatcher.MessageReader
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageReader
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: MessageReader
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 53
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: protected MessageReader MessageReader { get; }
    content.vb: Protected ReadOnly Property MessageReader As MessageReader
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageReader
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageReader*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageWriter
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageWriter
  id: MessageWriter
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: MessageWriter
  nameWithType: MessageDispatcher.MessageWriter
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageWriter
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: MessageWriter
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 55
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: protected MessageWriter MessageWriter { get; }
    content.vb: Protected ReadOnly Property MessageWriter As MessageWriter
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageWriter*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.#ctor(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.#ctor(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase)
  id: '#ctor(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase)'
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: MessageDispatcher(ChannelBase)
  nameWithType: MessageDispatcher.MessageDispatcher(ChannelBase)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageDispatcher(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 62
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public MessageDispatcher(ChannelBase protocolChannel)
    content.vb: Public Sub New(protocolChannel As ChannelBase)
    parameters:
    - id: protocolChannel
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Start
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Start
  id: Start
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: MessageDispatcher.Start()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Start()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Start
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 73
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Stop
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Stop
  id: Stop
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: MessageDispatcher.Stop()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Stop()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Stop
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 84
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
  id: SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: SetRequestHandler<TParams, TResult>(RequestType<TParams, TResult>, Func<TParams, RequestContext<TResult>, Task>)
  nameWithType: MessageDispatcher.SetRequestHandler<TParams, TResult>(RequestType<TParams, TResult>, Func<TParams, RequestContext<TResult>, Task>)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler<TParams, TResult>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>, System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext<TResult>, System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SetRequestHandler
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 94
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public void SetRequestHandler<TParams, TResult>(RequestType<TParams, TResult> requestType, Func<TParams, RequestContext<TResult>, Task> requestHandler)
    content.vb: Public Sub SetRequestHandler(Of TParams, TResult)(requestType As RequestType(Of TParams, TResult), requestHandler As Func(Of TParams, RequestContext(Of TResult), Task))
    parameters:
    - id: requestType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{{TParams},{TResult}}
    - id: requestHandler
      type: System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{{TResult}},System.Threading.Tasks.Task}
    typeParameters:
    - id: TParams
    - id: TResult
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler*
  nameWithType.vb: MessageDispatcher.SetRequestHandler(Of TParams, TResult)(RequestType(Of TParams, TResult), Func(Of TParams, RequestContext(Of TResult), Task))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler(Of TParams, TResult)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult), System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext(Of TResult), System.Threading.Tasks.Task))
  name.vb: SetRequestHandler(Of TParams, TResult)(RequestType(Of TParams, TResult), Func(Of TParams, RequestContext(Of TResult), Task))
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task},System.Boolean)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task},System.Boolean)
  id: SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task},System.Boolean)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: SetRequestHandler<TParams, TResult>(RequestType<TParams, TResult>, Func<TParams, RequestContext<TResult>, Task>, Boolean)
  nameWithType: MessageDispatcher.SetRequestHandler<TParams, TResult>(RequestType<TParams, TResult>, Func<TParams, RequestContext<TResult>, Task>, Boolean)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler<TParams, TResult>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>, System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext<TResult>, System.Threading.Tasks.Task>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SetRequestHandler
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 104
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public void SetRequestHandler<TParams, TResult>(RequestType<TParams, TResult> requestType, Func<TParams, RequestContext<TResult>, Task> requestHandler, bool overrideExisting)
    content.vb: Public Sub SetRequestHandler(Of TParams, TResult)(requestType As RequestType(Of TParams, TResult), requestHandler As Func(Of TParams, RequestContext(Of TResult), Task), overrideExisting As Boolean)
    parameters:
    - id: requestType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{{TParams},{TResult}}
    - id: requestHandler
      type: System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{{TResult}},System.Threading.Tasks.Task}
    - id: overrideExisting
      type: System.Boolean
    typeParameters:
    - id: TParams
    - id: TResult
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler*
  nameWithType.vb: MessageDispatcher.SetRequestHandler(Of TParams, TResult)(RequestType(Of TParams, TResult), Func(Of TParams, RequestContext(Of TResult), Task), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler(Of TParams, TResult)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult), System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext(Of TResult), System.Threading.Tasks.Task), System.Boolean)
  name.vb: SetRequestHandler(Of TParams, TResult)(RequestType(Of TParams, TResult), Func(Of TParams, RequestContext(Of TResult), Task), Boolean)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  id: SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>)
  nameWithType: MessageDispatcher.SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler<TParams>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>, System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SetEventHandler
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 135
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public void SetEventHandler<TParams>(EventType<TParams> eventType, Func<TParams, EventContext, Task> eventHandler)
    content.vb: Public Sub SetEventHandler(Of TParams)(eventType As EventType(Of TParams), eventHandler As Func(Of TParams, EventContext, Task))
    parameters:
    - id: eventType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}}
    - id: eventHandler
      type: System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task}
    typeParameters:
    - id: TParams
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler*
  nameWithType.vb: MessageDispatcher.SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler(Of TParams)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams), System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task))
  name.vb: SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task))
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  id: SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>, Boolean)
  nameWithType: MessageDispatcher.SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>, Boolean)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler<TParams>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>, System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SetEventHandler
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 145
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public void SetEventHandler<TParams>(EventType<TParams> eventType, Func<TParams, EventContext, Task> eventHandler, bool overrideExisting)
    content.vb: Public Sub SetEventHandler(Of TParams)(eventType As EventType(Of TParams), eventHandler As Func(Of TParams, EventContext, Task), overrideExisting As Boolean)
    parameters:
    - id: eventType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}}
    - id: eventHandler
      type: System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task}
    - id: overrideExisting
      type: System.Boolean
    typeParameters:
    - id: TParams
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler*
  nameWithType.vb: MessageDispatcher.SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler(Of TParams)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams), System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task), System.Boolean)
  name.vb: SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task), Boolean)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetResponseHandler(System.Action{Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetResponseHandler(System.Action{Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message})
  id: SetResponseHandler(System.Action{Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message})
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: SetResponseHandler(Action<Message>)
  nameWithType: MessageDispatcher.SetResponseHandler(Action<Message>)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetResponseHandler(System.Action<Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message>)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SetResponseHandler
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 179
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public void SetResponseHandler(Action<Message> responseHandler)
    content.vb: Public Sub SetResponseHandler(responseHandler As Action(Of Message))
    parameters:
    - id: responseHandler
      type: System.Action{Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message}
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetResponseHandler*
  nameWithType.vb: MessageDispatcher.SetResponseHandler(Action(Of Message))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetResponseHandler(System.Action(Of Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message))
  name.vb: SetResponseHandler(Action(Of Message))
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.UnhandledException
  commentId: E:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.UnhandledException
  id: UnhandledException
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: UnhandledException
  nameWithType: MessageDispatcher.UnhandledException
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.UnhandledException
  type: Event
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: UnhandledException
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 188
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public event EventHandler<Exception> UnhandledException
    content.vb: Public Event UnhandledException As EventHandler(Of Exception)
    return:
      type: System.EventHandler{System.Exception}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.OnUnhandledException(System.Exception)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.OnUnhandledException(System.Exception)
  id: OnUnhandledException(System.Exception)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: OnUnhandledException(Exception)
  nameWithType: MessageDispatcher.OnUnhandledException(Exception)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.OnUnhandledException(System.Exception)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: OnUnhandledException
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 190
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: protected void OnUnhandledException(Exception unhandledException)
    content.vb: Protected Sub OnUnhandledException(unhandledException As Exception)
    parameters:
    - id: unhandledException
      type: System.Exception
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.OnUnhandledException*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.DispatchMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.DispatchMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter)
  id: DispatchMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  langs:
  - csharp
  - vb
  name: DispatchMessage(Message, MessageWriter)
  nameWithType: MessageDispatcher.DispatchMessage(Message, MessageWriter)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.DispatchMessage(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: DispatchMessage
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/MessageDispatcher.cs
    startLine: 256
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: protected Task DispatchMessage(Message messageToDispatch, MessageWriter messageWriter)
    content.vb: Protected Function DispatchMessage(messageToDispatch As Message, messageWriter As MessageWriter) As Task
    parameters:
    - id: messageToDispatch
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
    - id: messageWriter
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.DispatchMessage*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SynchronizationContext*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SynchronizationContext
  isExternal: false
  name: SynchronizationContext
  nameWithType: MessageDispatcher.SynchronizationContext
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SynchronizationContext
- uid: System.Threading.SynchronizationContext
  commentId: T:System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: true
  name: SynchronizationContext
  nameWithType: SynchronizationContext
  fullName: System.Threading.SynchronizationContext
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.InMessageLoopThread*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.InMessageLoopThread
  isExternal: false
  name: InMessageLoopThread
  nameWithType: MessageDispatcher.InMessageLoopThread
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.InMessageLoopThread
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageReader*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageReader
  isExternal: false
  name: MessageReader
  nameWithType: MessageDispatcher.MessageReader
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageReader
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageReader
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageReader
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  isExternal: false
  name: MessageReader
  nameWithType: MessageReader
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageReader
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageWriter*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageWriter
  isExternal: false
  name: MessageWriter
  nameWithType: MessageDispatcher.MessageWriter
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageWriter
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  isExternal: false
  name: MessageWriter
  nameWithType: MessageWriter
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageWriter
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.#ctor
  isExternal: false
  name: MessageDispatcher
  nameWithType: MessageDispatcher.MessageDispatcher
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.MessageDispatcher
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  isExternal: false
  name: ChannelBase
  nameWithType: ChannelBase
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Start*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Start
  isExternal: false
  name: Start
  nameWithType: MessageDispatcher.Start
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Start
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Stop*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Stop
  isExternal: false
  name: Stop
  nameWithType: MessageDispatcher.Stop
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.Stop
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler
  isExternal: false
  name: SetRequestHandler<TParams, TResult>
  nameWithType: MessageDispatcher.SetRequestHandler<TParams, TResult>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler<TParams, TResult>
  nameWithType.vb: MessageDispatcher.SetRequestHandler(Of TParams, TResult)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetRequestHandler(Of TParams, TResult)
  name.vb: SetRequestHandler(Of TParams, TResult)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{{TParams},{TResult}}
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1}
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
  name: RequestType<TParams, TResult>
  nameWithType: RequestType<TParams, TResult>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>
  nameWithType.vb: RequestType(Of TParams, TResult)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult)
  name.vb: RequestType(Of TParams, TResult)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{{TResult}},System.Threading.Tasks.Task}
  commentId: T:System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`3
  name: Func<TParams, RequestContext<TResult>, Task>
  nameWithType: Func<TParams, RequestContext<TResult>, Task>
  fullName: System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext<TResult>, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of TParams, RequestContext(Of TResult), Task)
  fullname.vb: System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext(Of TResult), System.Threading.Tasks.Task)
  name.vb: Func(Of TParams, RequestContext(Of TResult), Task)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: RequestType<TParams, TResult>
  nameWithType: RequestType<TParams, TResult>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>
  nameWithType.vb: RequestType(Of TParams, TResult)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult)
  name.vb: RequestType(Of TParams, TResult)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler
  isExternal: false
  name: SetEventHandler<TParams>
  nameWithType: MessageDispatcher.SetEventHandler<TParams>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler<TParams>
  nameWithType.vb: MessageDispatcher.SetEventHandler(Of TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetEventHandler(Of TParams)
  name.vb: SetEventHandler(Of TParams)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}}
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0}
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
  name: EventType<TParams>
  nameWithType: EventType<TParams>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>
  nameWithType.vb: EventType(Of TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams)
  name.vb: EventType(Of TParams)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task}
  commentId: T:System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`3
  name: Func<TParams, EventContext, Task>
  nameWithType: Func<TParams, EventContext, Task>
  fullName: System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of TParams, EventContext, Task)
  fullname.vb: System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task)
  name.vb: Func(Of TParams, EventContext, Task)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
    name: EventContext
    nameWithType: EventContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
    name: EventContext
    nameWithType: EventContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: EventType<TParams>
  nameWithType: EventType<TParams>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>
  nameWithType.vb: EventType(Of TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams)
  name.vb: EventType(Of TParams)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetResponseHandler*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetResponseHandler
  isExternal: false
  name: SetResponseHandler
  nameWithType: MessageDispatcher.SetResponseHandler
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.SetResponseHandler
- uid: System.Action{Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message}
  commentId: T:System.Action{Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message}
  parent: System
  definition: System.Action`1
  name: Action<Message>
  nameWithType: Action<Message>
  fullName: System.Action<Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message>
  nameWithType.vb: Action(Of Message)
  fullname.vb: System.Action(Of Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message)
  name.vb: Action(Of Message)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
    name: Message
    nameWithType: Message
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
    name: Message
    nameWithType: Message
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{System.Exception}
  commentId: T:System.EventHandler{System.Exception}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<Exception>
  nameWithType: EventHandler<Exception>
  fullName: System.EventHandler<System.Exception>
  nameWithType.vb: EventHandler(Of Exception)
  fullname.vb: System.EventHandler(Of System.Exception)
  name.vb: EventHandler(Of Exception)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.OnUnhandledException*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.OnUnhandledException
  isExternal: false
  name: OnUnhandledException
  nameWithType: MessageDispatcher.OnUnhandledException
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.OnUnhandledException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.DispatchMessage*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.DispatchMessage
  isExternal: false
  name: DispatchMessage
  nameWithType: MessageDispatcher.DispatchMessage
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher.DispatchMessage
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.Message
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
