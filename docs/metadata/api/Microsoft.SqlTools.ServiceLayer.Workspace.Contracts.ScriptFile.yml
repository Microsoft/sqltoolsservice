### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  commentId: T:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  id: ScriptFile
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  children:
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor(System.String,System.String,System.IO.TextReader)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor(System.String,System.String,System.String)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ApplyChange(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.CalculatePosition(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition,System.Int32,System.Int32)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ClientFilePath
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Contents
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FilePath
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FileRange
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLine(System.Int32)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLinesInRange(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetOffsetAtPosition(System.Int32,System.Int32)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetPositionAtOffset(System.Int32)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetRangeBetweenOffsets(System.Int32,System.Int32)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Id
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.IsInMemory
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SetFileContents(System.String)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SyntaxMarkers
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition)
  - Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: ScriptFile
  nameWithType: ScriptFile
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ScriptFile
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 16
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nContains the details and contents of an open script file.\n"
  example: []
  syntax:
    content: public class ScriptFile
    content.vb: Public Class ScriptFile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Id
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Id
  id: Id
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ScriptFile.Id
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Id
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 25
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nGets a unique string that identifies this file.  At this time,\nthis property returns a normalized version of the value stored\nin the FilePath property.\n"
  example: []
  syntax:
    content: public string Id { get; }
    content.vb: Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FilePath
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FilePath
  id: FilePath
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: ScriptFile.FilePath
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FilePath
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: FilePath
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 33
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nGets the path at which this file resides.\n"
  example: []
  syntax:
    content: public string FilePath { get; }
    content.vb: Public ReadOnly Property FilePath As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FilePath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ClientFilePath
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ClientFilePath
  id: ClientFilePath
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: ClientFilePath
  nameWithType: ScriptFile.ClientFilePath
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ClientFilePath
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ClientFilePath
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 40
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nGets or sets the path which the editor client uses to identify this file.\nSetter for testing purposes only\nvirtual to allow mocking.\n"
  example: []
  syntax:
    content: public virtual string ClientFilePath { get; }
    content.vb: Public Overridable ReadOnly Property ClientFilePath As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ClientFilePath*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.IsInMemory
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.IsInMemory
  id: IsInMemory
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: IsInMemory
  nameWithType: ScriptFile.IsInMemory
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.IsInMemory
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: IsInMemory
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 53
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nGets a boolean that determines whether this file is\nin-memory or not (either unsaved or non-file content).\n"
  example: []
  syntax:
    content: public bool IsInMemory { get; }
    content.vb: Public ReadOnly Property IsInMemory As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.IsInMemory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Contents
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Contents
  id: Contents
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: Contents
  nameWithType: ScriptFile.Contents
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Contents
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Contents
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 59
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nGets or sets a string containing the full contents of the file.\nSetter for testing purposes only\n"
  example: []
  syntax:
    content: public virtual string Contents { get; set; }
    content.vb: Public Overridable Property Contents As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Contents*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FileRange
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FileRange
  id: FileRange
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: FileRange
  nameWithType: ScriptFile.FileRange
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FileRange
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: FileRange
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 75
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nGets a BufferRange that represents the entire content\nrange of the file.\n"
  example: []
  syntax:
    content: public BufferRange FileRange { get; }
    content.vb: Public ReadOnly Property FileRange As BufferRange
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FileRange*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SyntaxMarkers
  commentId: P:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SyntaxMarkers
  id: SyntaxMarkers
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: SyntaxMarkers
  nameWithType: ScriptFile.SyntaxMarkers
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SyntaxMarkers
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SyntaxMarkers
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 81
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nGets the list of syntax markers found by parsing this\nfile's contents.\n"
  example: []
  syntax:
    content: public ScriptFileMarker[] SyntaxMarkers { get; }
    content.vb: Public ReadOnly Property SyntaxMarkers As ScriptFileMarker()
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFileMarker[]
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SyntaxMarkers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor
  id: '#ctor'
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: ScriptFile()
  nameWithType: ScriptFile.ScriptFile()
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ScriptFile()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 103
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nAdd a default constructor for testing\n"
  example: []
  syntax:
    content: public ScriptFile()
    content.vb: Public Sub New
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor(System.String,System.String,System.IO.TextReader)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor(System.String,System.String,System.IO.TextReader)
  id: '#ctor(System.String,System.String,System.IO.TextReader)'
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: ScriptFile(String, String, TextReader)
  nameWithType: ScriptFile.ScriptFile(String, String, TextReader)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ScriptFile(System.String, System.String, System.IO.TextReader)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 115
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nCreates a new ScriptFile instance by reading file contents from\nthe given TextReader.\n"
  example: []
  syntax:
    content: public ScriptFile(string filePath, string clientFilePath, TextReader textReader)
    content.vb: Public Sub New(filePath As String, clientFilePath As String, textReader As TextReader)
    parameters:
    - id: filePath
      type: System.String
      description: The path at which the script file resides.
    - id: clientFilePath
      type: System.String
      description: The path which the client uses to identify the file.
    - id: textReader
      type: System.IO.TextReader
      description: The TextReader to use for reading the file's contents.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor(System.String,System.String,System.String)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: ScriptFile(String, String, String)
  nameWithType: ScriptFile.ScriptFile(String, String, String)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ScriptFile(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 134
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nCreates a new ScriptFile instance with the specified file contents.\n"
  example: []
  syntax:
    content: public ScriptFile(string filePath, string clientFilePath, string initialBuffer)
    content.vb: Public Sub New(filePath As String, clientFilePath As String, initialBuffer As String)
    parameters:
    - id: filePath
      type: System.String
      description: The path at which the script file resides.
    - id: clientFilePath
      type: System.String
      description: The path which the client uses to identify the file.
    - id: initialBuffer
      type: System.String
      description: The initial contents of the script file.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLine(System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLine(System.Int32)
  id: GetLine(System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: GetLine(Int32)
  nameWithType: ScriptFile.GetLine(Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLine(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetLine
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 155
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nGets a line from the file's contents.\n"
  example: []
  syntax:
    content: public string GetLine(int lineNumber)
    content.vb: Public Function GetLine(lineNumber As Integer) As String
    parameters:
    - id: lineNumber
      type: System.Int32
      description: The 1-based line number in the file.
    return:
      type: System.String
      description: The complete line at the given line number.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLine*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLinesInRange(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLinesInRange(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange)
  id: GetLinesInRange(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: GetLinesInRange(BufferRange)
  nameWithType: ScriptFile.GetLinesInRange(BufferRange)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLinesInRange(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetLinesInRange
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 170
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nGets a range of lines from the file's contents. Virtual method to allow for\nmocking.\n"
  example: []
  syntax:
    content: public virtual string[] GetLinesInRange(BufferRange bufferRange)
    content.vb: Public Overridable Function GetLinesInRange(bufferRange As BufferRange) As String()
    parameters:
    - id: bufferRange
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
      description: The buffer range from which lines will be extracted.
    return:
      type: System.String[]
      description: An array of strings from the specified range of the file.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLinesInRange*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition)
  id: ValidatePosition(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: ValidatePosition(BufferPosition)
  nameWithType: ScriptFile.ValidatePosition(BufferPosition)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ValidatePosition
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 208
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nThrows ArgumentOutOfRangeException if the given position is outside\nof the file's buffer extents.\n"
  example: []
  syntax:
    content: public void ValidatePosition(BufferPosition bufferPosition)
    content.vb: Public Sub ValidatePosition(bufferPosition As BufferPosition)
    parameters:
    - id: bufferPosition
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition
      description: The position in the buffer to be validated.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition(System.Int32,System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition(System.Int32,System.Int32)
  id: ValidatePosition(System.Int32,System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: ValidatePosition(Int32, Int32)
  nameWithType: ScriptFile.ValidatePosition(Int32, Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ValidatePosition
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 221
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nThrows ArgumentOutOfRangeException if the given position is outside\nof the file's buffer extents.\n"
  example: []
  syntax:
    content: public void ValidatePosition(int line, int column)
    content.vb: Public Sub ValidatePosition(line As Integer, column As Integer)
    parameters:
    - id: line
      type: System.Int32
      description: The 1-based line to be validated.
    - id: column
      type: System.Int32
      description: The 1-based column to be validated.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ApplyChange(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ApplyChange(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange)
  id: ApplyChange(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: ApplyChange(FileChange)
  nameWithType: ScriptFile.ApplyChange(FileChange)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ApplyChange(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ApplyChange
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 243
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nApplies the provided FileChange to the file's contents\n"
  example: []
  syntax:
    content: public void ApplyChange(FileChange fileChange)
    content.vb: Public Sub ApplyChange(fileChange As FileChange)
    parameters:
    - id: fileChange
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange
      description: The FileChange to apply to the file's contents.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ApplyChange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetOffsetAtPosition(System.Int32,System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetOffsetAtPosition(System.Int32,System.Int32)
  id: GetOffsetAtPosition(System.Int32,System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: GetOffsetAtPosition(Int32, Int32)
  nameWithType: ScriptFile.GetOffsetAtPosition(Int32, Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetOffsetAtPosition(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetOffsetAtPosition
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 301
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nCalculates the zero-based character offset of a given\nline and column position in the file.\n"
  example: []
  syntax:
    content: public int GetOffsetAtPosition(int lineNumber, int columnNumber)
    content.vb: Public Function GetOffsetAtPosition(lineNumber As Integer, columnNumber As Integer) As Integer
    parameters:
    - id: lineNumber
      type: System.Int32
      description: The 1-based line number from which the offset is calculated.
    - id: columnNumber
      type: System.Int32
      description: The 1-based column number from which the offset is calculated.
    return:
      type: System.Int32
      description: The zero-based offset for the given file position.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetOffsetAtPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.CalculatePosition(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition,System.Int32,System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.CalculatePosition(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition,System.Int32,System.Int32)
  id: CalculatePosition(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition,System.Int32,System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: CalculatePosition(BufferPosition, Int32, Int32)
  nameWithType: ScriptFile.CalculatePosition(BufferPosition, Int32, Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.CalculatePosition(Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: CalculatePosition
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 333
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nCalculates a FilePosition relative to a starting BufferPosition\nusing the given 1-based line and column offset.\n"
  example: []
  syntax:
    content: public FilePosition CalculatePosition(BufferPosition originalPosition, int lineOffset, int columnOffset)
    content.vb: Public Function CalculatePosition(originalPosition As BufferPosition, lineOffset As Integer, columnOffset As Integer) As FilePosition
    parameters:
    - id: originalPosition
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition
      description: The original BufferPosition from which an new position should be calculated.
    - id: lineOffset
      type: System.Int32
      description: The 1-based line offset added to the original position in this file.
    - id: columnOffset
      type: System.Int32
      description: The 1-based column offset added to the original position in this file.
    return:
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FilePosition
      description: A new FilePosition instance with the resulting line and column number.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.CalculatePosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetPositionAtOffset(System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetPositionAtOffset(System.Int32)
  id: GetPositionAtOffset(System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: GetPositionAtOffset(Int32)
  nameWithType: ScriptFile.GetPositionAtOffset(Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetPositionAtOffset(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetPositionAtOffset
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 355
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nCalculates the 1-based line and column number position based\non the given buffer offset.\n"
  example: []
  syntax:
    content: public BufferPosition GetPositionAtOffset(int bufferOffset)
    content.vb: Public Function GetPositionAtOffset(bufferOffset As Integer) As BufferPosition
    parameters:
    - id: bufferOffset
      type: System.Int32
      description: The buffer offset to convert.
    return:
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition
      description: A new BufferPosition containing the position of the offset.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetPositionAtOffset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetRangeBetweenOffsets(System.Int32,System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetRangeBetweenOffsets(System.Int32,System.Int32)
  id: GetRangeBetweenOffsets(System.Int32,System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: GetRangeBetweenOffsets(Int32, Int32)
  nameWithType: ScriptFile.GetRangeBetweenOffsets(Int32, Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetRangeBetweenOffsets(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetRangeBetweenOffsets
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 371
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nCalculates the 1-based line and column number range based on\nthe given start and end buffer offsets.\n"
  example: []
  syntax:
    content: public BufferRange GetRangeBetweenOffsets(int startOffset, int endOffset)
    content.vb: Public Function GetRangeBetweenOffsets(startOffset As Integer, endOffset As Integer) As BufferRange
    parameters:
    - id: startOffset
      type: System.Int32
      description: The start offset of the range.
    - id: endOffset
      type: System.Int32
      description: The end offset of the range.
    return:
      type: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
      description: A new BufferRange containing the positions in the offset range.
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetRangeBetweenOffsets*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SetFileContents(System.String)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SetFileContents(System.String)
  id: SetFileContents(System.String)
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile
  langs:
  - csharp
  - vb
  name: SetFileContents(String)
  nameWithType: ScriptFile.SetFileContents(String)
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SetFileContents(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SetFileContents
    path: ../src/Microsoft.SqlTools.ServiceLayer/Workspace/Contracts/ScriptFile.cs
    startLine: 428
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  summary: "\nSet the script files contents\n"
  example: []
  syntax:
    content: public void SetFileContents(string fileContents)
    content.vb: Public Sub SetFileContents(fileContents As String)
    parameters:
    - id: fileContents
      type: System.String
      description: ''
  overload: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SetFileContents*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Id*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Id
  isExternal: false
  name: Id
  nameWithType: ScriptFile.Id
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FilePath*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FilePath
  isExternal: false
  name: FilePath
  nameWithType: ScriptFile.FilePath
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FilePath
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ClientFilePath*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ClientFilePath
  isExternal: false
  name: ClientFilePath
  nameWithType: ScriptFile.ClientFilePath
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ClientFilePath
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.IsInMemory*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.IsInMemory
  isExternal: false
  name: IsInMemory
  nameWithType: ScriptFile.IsInMemory
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.IsInMemory
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Contents*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Contents
  isExternal: false
  name: Contents
  nameWithType: ScriptFile.Contents
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.Contents
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FileRange*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FileRange
  isExternal: false
  name: FileRange
  nameWithType: ScriptFile.FileRange
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.FileRange
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  commentId: T:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  isExternal: false
  name: BufferRange
  nameWithType: BufferRange
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferRange
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SyntaxMarkers*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SyntaxMarkers
  isExternal: false
  name: SyntaxMarkers
  nameWithType: ScriptFile.SyntaxMarkers
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SyntaxMarkers
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFileMarker[]
  name: ScriptFileMarker[]
  nameWithType: ScriptFileMarker[]
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFileMarker[]
  nameWithType.vb: ScriptFileMarker()
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFileMarker()
  name.vb: ScriptFileMarker()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFileMarker
    name: ScriptFileMarker
    nameWithType: ScriptFileMarker
    fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFileMarker
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFileMarker
    name: ScriptFileMarker
    nameWithType: ScriptFileMarker
    fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFileMarker
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor
  isExternal: false
  name: ScriptFile
  nameWithType: ScriptFile.ScriptFile
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ScriptFile
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLine*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLine
  isExternal: false
  name: GetLine
  nameWithType: ScriptFile.GetLine
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLine
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLinesInRange*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLinesInRange
  isExternal: false
  name: GetLinesInRange
  nameWithType: ScriptFile.GetLinesInRange
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetLinesInRange
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition
  isExternal: false
  name: ValidatePosition
  nameWithType: ScriptFile.ValidatePosition
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition
  commentId: T:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  isExternal: false
  name: BufferPosition
  nameWithType: BufferPosition
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.BufferPosition
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ApplyChange*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ApplyChange
  isExternal: false
  name: ApplyChange
  nameWithType: ScriptFile.ApplyChange
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.ApplyChange
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange
  commentId: T:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  isExternal: false
  name: FileChange
  nameWithType: FileChange
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FileChange
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetOffsetAtPosition*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetOffsetAtPosition
  isExternal: false
  name: GetOffsetAtPosition
  nameWithType: ScriptFile.GetOffsetAtPosition
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetOffsetAtPosition
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.CalculatePosition*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.CalculatePosition
  isExternal: false
  name: CalculatePosition
  nameWithType: ScriptFile.CalculatePosition
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.CalculatePosition
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FilePosition
  commentId: T:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FilePosition
  parent: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts
  isExternal: false
  name: FilePosition
  nameWithType: FilePosition
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.FilePosition
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetPositionAtOffset*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetPositionAtOffset
  isExternal: false
  name: GetPositionAtOffset
  nameWithType: ScriptFile.GetPositionAtOffset
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetPositionAtOffset
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetRangeBetweenOffsets*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetRangeBetweenOffsets
  isExternal: false
  name: GetRangeBetweenOffsets
  nameWithType: ScriptFile.GetRangeBetweenOffsets
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.GetRangeBetweenOffsets
- uid: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SetFileContents*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SetFileContents
  isExternal: false
  name: SetFileContents
  nameWithType: ScriptFile.SetFileContents
  fullName: Microsoft.SqlTools.ServiceLayer.Workspace.Contracts.ScriptFile.SetFileContents
