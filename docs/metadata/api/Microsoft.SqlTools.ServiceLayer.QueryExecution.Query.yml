### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  id: Query
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution
  children:
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.#ctor(System.String,Microsoft.SqlTools.ServiceLayer.Connection.ConnectionInfo,Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings,Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory)
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchCompleted
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchStarted
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchSummaries
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Cancel
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Dispose
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Dispose(System.Boolean)
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Execute
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.GetSubset(System.Int32,System.Int32,System.Int32,System.Int32)
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.HasExecuted
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryCompleted
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryConnectionException
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryFailed
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryText
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.ResultSetCompleted
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: Query
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Query
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 23
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nInternal representation of an active query\n"
  example: []
  syntax:
    content: 'public class Query : IDisposable'
    content.vb: >-
      Public Class Query
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.#ctor(System.String,Microsoft.SqlTools.ServiceLayer.Connection.ConnectionInfo,Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings,Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.#ctor(System.String,Microsoft.SqlTools.ServiceLayer.Connection.ConnectionInfo,Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings,Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory)
  id: '#ctor(System.String,Microsoft.SqlTools.ServiceLayer.Connection.ConnectionInfo,Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings,Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory)'
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: Query(String, ConnectionInfo, QueryExecutionSettings, IFileStreamFactory)
  nameWithType: Query.Query(String, ConnectionInfo, QueryExecutionSettings, IFileStreamFactory)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Query(System.String, Microsoft.SqlTools.ServiceLayer.Connection.ConnectionInfo, Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings, Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 62
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nConstructor for a query\n"
  example: []
  syntax:
    content: public Query(string queryText, ConnectionInfo connection, QueryExecutionSettings settings, IFileStreamFactory outputFactory)
    content.vb: Public Sub New(queryText As String, connection As ConnectionInfo, settings As QueryExecutionSettings, outputFactory As IFileStreamFactory)
    parameters:
    - id: queryText
      type: System.String
      description: The text of the query to execute
    - id: connection
      type: Microsoft.SqlTools.ServiceLayer.Connection.ConnectionInfo
      description: The information of the connection to use to execute the query
    - id: settings
      type: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
      description: Settings for how to execute the query, from the user
    - id: outputFactory
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory
      description: Factory for creating output files
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchCompleted
  commentId: E:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchCompleted
  id: BatchCompleted
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: BatchCompleted
  nameWithType: Query.BatchCompleted
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchCompleted
  type: Event
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: BatchCompleted
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 99
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nEvent to be called when a batch is completed.\n"
  example: []
  syntax:
    content: public event Batch.BatchAsyncEventHandler BatchCompleted
    content.vb: Public Event BatchCompleted As Batch.BatchAsyncEventHandler
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Batch.BatchAsyncEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchStarted
  commentId: E:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchStarted
  id: BatchStarted
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: BatchStarted
  nameWithType: Query.BatchStarted
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchStarted
  type: Event
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: BatchStarted
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 104
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nEvent to be called when a batch starts execution.\n"
  example: []
  syntax:
    content: public event Batch.BatchAsyncEventHandler BatchStarted
    content.vb: Public Event BatchStarted As Batch.BatchAsyncEventHandler
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Batch.BatchAsyncEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryCompleted
  commentId: E:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryCompleted
  id: QueryCompleted
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: QueryCompleted
  nameWithType: Query.QueryCompleted
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryCompleted
  type: Event
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: QueryCompleted
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 115
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nCallback for when the query has completed successfully\n"
  example: []
  syntax:
    content: public event Query.QueryAsyncEventHandler QueryCompleted
    content.vb: Public Event QueryCompleted As Query.QueryAsyncEventHandler
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryAsyncEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryFailed
  commentId: E:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryFailed
  id: QueryFailed
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: QueryFailed
  nameWithType: Query.QueryFailed
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryFailed
  type: Event
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: QueryFailed
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 120
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nCallback for when the query has failed\n"
  example: []
  syntax:
    content: public event Query.QueryAsyncEventHandler QueryFailed
    content.vb: Public Event QueryFailed As Query.QueryAsyncEventHandler
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryAsyncEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryConnectionException
  commentId: E:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryConnectionException
  id: QueryConnectionException
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: QueryConnectionException
  nameWithType: Query.QueryConnectionException
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryConnectionException
  type: Event
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: QueryConnectionException
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 125
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nCallback for when the query connection has failed\n"
  example: []
  syntax:
    content: public event Query.QueryAsyncErrorEventHandler QueryConnectionException
    content.vb: Public Event QueryConnectionException As Query.QueryAsyncErrorEventHandler
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryAsyncErrorEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.ResultSetCompleted
  commentId: E:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.ResultSetCompleted
  id: ResultSetCompleted
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: ResultSetCompleted
  nameWithType: Query.ResultSetCompleted
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.ResultSetCompleted
  type: Event
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ResultSetCompleted
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 130
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nEvent to be called when a resultset has completed.\n"
  example: []
  syntax:
    content: public event ResultSet.ResultSetAsyncEventHandler ResultSetCompleted
    content.vb: Public Event ResultSetCompleted As ResultSet.ResultSetAsyncEventHandler
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultSetAsyncEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchSummaries
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchSummaries
  id: BatchSummaries
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: BatchSummaries
  nameWithType: Query.BatchSummaries
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchSummaries
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: BatchSummaries
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 150
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nThe summaries of the batches underneath this query\n"
  example: []
  syntax:
    content: public BatchSummary[] BatchSummaries { get; }
    content.vb: Public ReadOnly Property BatchSummaries As BatchSummary()
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary[]
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchSummaries*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.HasExecuted
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.HasExecuted
  id: HasExecuted
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: HasExecuted
  nameWithType: Query.HasExecuted
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.HasExecuted
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: HasExecuted
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 174
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nWhether or not the query has completed executed, regardless of success or failure\n"
  remarks: "\nDon't touch the setter unless you're doing unit tests!\n"
  example: []
  syntax:
    content: public bool HasExecuted { get; }
    content.vb: Public ReadOnly Property HasExecuted As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.HasExecuted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryText
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryText
  id: QueryText
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: QueryText
  nameWithType: Query.QueryText
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryText
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: QueryText
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 190
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nThe text of the query to execute\n"
  example: []
  syntax:
    content: public string QueryText { get; set; }
    content.vb: Public Property QueryText As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Cancel
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Cancel
  id: Cancel
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: Cancel()
  nameWithType: Query.Cancel()
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Cancel()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Cancel
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 199
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nCancels the query by issuing the cancellation token\n"
  example: []
  syntax:
    content: public void Cancel()
    content.vb: Public Sub Cancel
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Cancel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Execute
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Execute
  id: Execute
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: Query.Execute()
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Execute()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Execute
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 211
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  syntax:
    content: public void Execute()
    content.vb: Public Sub Execute
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Execute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.GetSubset(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.GetSubset(System.Int32,System.Int32,System.Int32,System.Int32)
  id: GetSubset(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: GetSubset(Int32, Int32, Int32, Int32)
  nameWithType: Query.GetSubset(Int32, Int32, Int32, Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.GetSubset(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetSubset
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 224
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  summary: "\nRetrieves a subset of the result sets\n"
  example: []
  syntax:
    content: public Task<ResultSetSubset> GetSubset(int batchIndex, int resultSetIndex, int startRow, int rowCount)
    content.vb: Public Function GetSubset(batchIndex As Integer, resultSetIndex As Integer, startRow As Integer, rowCount As Integer) As Task(Of ResultSetSubset)
    parameters:
    - id: batchIndex
      type: System.Int32
      description: The index for selecting the batch item
    - id: resultSetIndex
      type: System.Int32
      description: The index for selecting the result set
    - id: startRow
      type: System.Int32
      description: The starting row of the results
    - id: rowCount
      type: System.Int32
      description: How many rows to retrieve
    return:
      type: System.Threading.Tasks.Task{Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset}
      description: A subset of results
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.GetSubset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Dispose
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Dispose
  id: Dispose
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Query.Dispose()
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Dispose()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Dispose
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 342
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Dispose(System.Boolean)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: Query.Dispose(Boolean)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Dispose
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Query.cs
    startLine: 348
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution
  commentId: N:Microsoft.SqlTools.ServiceLayer.QueryExecution
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.QueryExecution
  nameWithType: Microsoft.SqlTools.ServiceLayer.QueryExecution
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.#ctor
  isExternal: false
  name: Query
  nameWithType: Query.Query
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Query
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.Connection.ConnectionInfo
  commentId: T:Microsoft.SqlTools.ServiceLayer.Connection.ConnectionInfo
  parent: Microsoft.SqlTools.ServiceLayer.Connection
  isExternal: false
  name: ConnectionInfo
  nameWithType: ConnectionInfo
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.ConnectionInfo
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
  commentId: T:Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
  parent: Microsoft.SqlTools.ServiceLayer.SqlContext
  isExternal: false
  name: QueryExecutionSettings
  nameWithType: QueryExecutionSettings
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext.QueryExecutionSettings
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  isExternal: false
  name: IFileStreamFactory
  nameWithType: IFileStreamFactory
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory
- uid: Microsoft.SqlTools.ServiceLayer.Connection
  commentId: N:Microsoft.SqlTools.ServiceLayer.Connection
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Connection
  nameWithType: Microsoft.SqlTools.ServiceLayer.Connection
  fullName: Microsoft.SqlTools.ServiceLayer.Connection
- uid: Microsoft.SqlTools.ServiceLayer.SqlContext
  commentId: N:Microsoft.SqlTools.ServiceLayer.SqlContext
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.SqlContext
  nameWithType: Microsoft.SqlTools.ServiceLayer.SqlContext
  fullName: Microsoft.SqlTools.ServiceLayer.SqlContext
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  commentId: N:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  nameWithType: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Batch.BatchAsyncEventHandler
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.Batch.BatchAsyncEventHandler
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution
  isExternal: false
  name: Batch.BatchAsyncEventHandler
  nameWithType: Batch.BatchAsyncEventHandler
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Batch.BatchAsyncEventHandler
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryAsyncEventHandler
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryAsyncEventHandler
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution
  isExternal: false
  name: Query.QueryAsyncEventHandler
  nameWithType: Query.QueryAsyncEventHandler
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryAsyncEventHandler
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryAsyncErrorEventHandler
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryAsyncErrorEventHandler
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution
  isExternal: false
  name: Query.QueryAsyncErrorEventHandler
  nameWithType: Query.QueryAsyncErrorEventHandler
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryAsyncErrorEventHandler
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultSetAsyncEventHandler
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultSetAsyncEventHandler
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution
  isExternal: false
  name: ResultSet.ResultSetAsyncEventHandler
  nameWithType: ResultSet.ResultSetAsyncEventHandler
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.ResultSet.ResultSetAsyncEventHandler
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchSummaries*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchSummaries
  isExternal: false
  name: BatchSummaries
  nameWithType: Query.BatchSummaries
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.BatchSummaries
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary[]
  name: BatchSummary[]
  nameWithType: BatchSummary[]
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary[]
  nameWithType.vb: BatchSummary()
  fullname.vb: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary()
  name.vb: BatchSummary()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
    name: BatchSummary
    nameWithType: BatchSummary
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
    name: BatchSummary
    nameWithType: BatchSummary
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.HasExecuted*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.HasExecuted
  isExternal: false
  name: HasExecuted
  nameWithType: Query.HasExecuted
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.HasExecuted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryText*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryText
  isExternal: false
  name: QueryText
  nameWithType: Query.QueryText
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.QueryText
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Cancel*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Cancel
  isExternal: false
  name: Cancel
  nameWithType: Query.Cancel
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Cancel
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Execute*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Execute
  isExternal: false
  name: Execute
  nameWithType: Query.Execute
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Execute
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.GetSubset*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.GetSubset
  isExternal: false
  name: GetSubset
  nameWithType: Query.GetSubset
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.GetSubset
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset}
  commentId: T:System.Threading.Tasks.Task{Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ResultSetSubset>
  nameWithType: Task<ResultSetSubset>
  fullName: System.Threading.Tasks.Task<Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset>
  nameWithType.vb: Task(Of ResultSetSubset)
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset)
  name.vb: Task(Of ResultSetSubset)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset
    name: ResultSetSubset
    nameWithType: ResultSetSubset
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset
    name: ResultSetSubset
    nameWithType: ResultSetSubset
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSubset
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Dispose*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Dispose
  isExternal: false
  name: Dispose
  nameWithType: Query.Dispose
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Query.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
