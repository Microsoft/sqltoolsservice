### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  id: ProtocolEndpoint
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  children:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.#ctor(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.MessageDispatcher
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnConnect
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStart
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStop
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Boolean)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Start
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Stop
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.WaitForExit
  langs:
  - csharp
  - vb
  name: ProtocolEndpoint
  nameWithType: ProtocolEndpoint
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ProtocolEndpoint
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 18
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  summary: "\nProvides behavior for a client or server endpoint that\ncommunicates using the specified protocol.\n"
  example: []
  syntax:
    content: 'public class ProtocolEndpoint : IProtocolEndpoint, IMessageSender'
    content.vb: >-
      Public Class ProtocolEndpoint
          Implements IProtocolEndpoint, IMessageSender
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.SqlTools.ServiceLayer.Hosting.ServiceHostBase
  implements:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.MessageDispatcher
  commentId: P:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.MessageDispatcher
  id: MessageDispatcher
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: MessageDispatcher
  nameWithType: ProtocolEndpoint.MessageDispatcher
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.MessageDispatcher
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: MessageDispatcher
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 35
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  summary: "\nGets the MessageDispatcher which allows registration of\nhandlers for requests, responses, and events that are\ntransmitted through the channel.\n"
  example: []
  syntax:
    content: protected MessageDispatcher MessageDispatcher { get; set; }
    content.vb: Protected Property MessageDispatcher As MessageDispatcher
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.MessageDispatcher*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.#ctor(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.#ctor(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType)
  id: '#ctor(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType)'
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: ProtocolEndpoint(ChannelBase, MessageProtocolType)
  nameWithType: ProtocolEndpoint.ProtocolEndpoint(ChannelBase, MessageProtocolType)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.ProtocolEndpoint(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 47
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  summary: "\nInitializes an instance of the protocol server using the\nspecified channel for communication.\n"
  example: []
  syntax:
    content: public ProtocolEndpoint(ChannelBase protocolChannel, MessageProtocolType messageProtocolType)
    content.vb: Public Sub New(protocolChannel As ChannelBase, messageProtocolType As MessageProtocolType)
    parameters:
    - id: protocolChannel
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
      description: "\nThe channel to use for communication with the connected endpoint.\n"
    - id: messageProtocolType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType
      description: "\nThe type of message protocol used by the endpoint.\n"
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Start
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Start
  id: Start
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: ProtocolEndpoint.Start()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Start()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Start
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 60
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  summary: "\nStarts the language server client and sends the Initialize method.\n"
  example: []
  syntax:
    content: public Task Start()
    content.vb: Public Function Start As Task
    return:
      type: System.Threading.Tasks.Task
      description: A Task that can be awaited for initialization to complete.
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.WaitForExit
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.WaitForExit
  id: WaitForExit
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: WaitForExit()
  nameWithType: ProtocolEndpoint.WaitForExit()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.WaitForExit()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: WaitForExit
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 97
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public void WaitForExit()
    content.vb: Public Sub WaitForExit
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.WaitForExit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Stop
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Stop
  id: Stop
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: ProtocolEndpoint.Stop()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Stop()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Stop
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 103
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public Task Stop()
    content.vb: Public Function Stop As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0)
  id: SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: SendRequest<TParams, TResult>(RequestType<TParams, TResult>, TParams)
  nameWithType: ProtocolEndpoint.SendRequest<TParams, TResult>(RequestType<TParams, TResult>, TParams)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest<TParams, TResult>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>, TParams)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SendRequest
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 135
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  summary: "\nSends a request to the server\n"
  example: []
  syntax:
    content: public Task<TResult> SendRequest<TParams, TResult>(RequestType<TParams, TResult> requestType, TParams requestParams)
    content.vb: Public Function SendRequest(Of TParams, TResult)(requestType As RequestType(Of TParams, TResult), requestParams As TParams) As Task(Of TResult)
    parameters:
    - id: requestType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{{TParams},{TResult}}
      description: ''
    - id: requestParams
      type: '{TParams}'
      description: ''
    typeParameters:
    - id: TParams
      description: ''
    - id: TResult
      description: ''
    return:
      type: System.Threading.Tasks.Task{{TResult}}
      description: ''
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest*
  nameWithType.vb: ProtocolEndpoint.SendRequest(Of TParams, TResult)(RequestType(Of TParams, TResult), TParams)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest(Of TParams, TResult)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult), TParams)
  name.vb: SendRequest(Of TParams, TResult)(RequestType(Of TParams, TResult), TParams)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Boolean)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Boolean)
  id: SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Boolean)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: SendRequest<TParams, TResult>(RequestType<TParams, TResult>, TParams, Boolean)
  nameWithType: ProtocolEndpoint.SendRequest<TParams, TResult>(RequestType<TParams, TResult>, TParams, Boolean)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest<TParams, TResult>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>, TParams, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SendRequest
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 142
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public Task<TResult> SendRequest<TParams, TResult>(RequestType<TParams, TResult> requestType, TParams requestParams, bool waitForResponse)
    content.vb: Public Function SendRequest(Of TParams, TResult)(requestType As RequestType(Of TParams, TResult), requestParams As TParams, waitForResponse As Boolean) As Task(Of TResult)
    parameters:
    - id: requestType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{{TParams},{TResult}}
    - id: requestParams
      type: '{TParams}'
    - id: waitForResponse
      type: System.Boolean
    typeParameters:
    - id: TParams
    - id: TResult
    return:
      type: System.Threading.Tasks.Task{{TResult}}
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest*
  implements:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{{TParams},{TResult}},{TParams},System.Boolean)
  nameWithType.vb: ProtocolEndpoint.SendRequest(Of TParams, TResult)(RequestType(Of TParams, TResult), TParams, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest(Of TParams, TResult)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult), TParams, System.Boolean)
  name.vb: SendRequest(Of TParams, TResult)(RequestType(Of TParams, TResult), TParams, Boolean)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  id: SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: SendEvent<TParams>(EventType<TParams>, TParams)
  nameWithType: ProtocolEndpoint.SendEvent<TParams>(EventType<TParams>, TParams)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendEvent<TParams>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>, TParams)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SendEvent
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 192
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  summary: "\nSends an event to the channel's endpoint.\n"
  example: []
  syntax:
    content: public Task SendEvent<TParams>(EventType<TParams> eventType, TParams eventParams)
    content.vb: Public Function SendEvent(Of TParams)(eventType As EventType(Of TParams), eventParams As TParams) As Task
    parameters:
    - id: eventType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}}
      description: The type of event being sent.
    - id: eventParams
      type: '{TParams}'
      description: The event parameters being sent.
    typeParameters:
    - id: TParams
      description: The event parameter type.
    return:
      type: System.Threading.Tasks.Task
      description: A Task that tracks completion of the send operation.
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendEvent*
  implements:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}},{TParams})
  nameWithType.vb: ProtocolEndpoint.SendEvent(Of TParams)(EventType(Of TParams), TParams)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendEvent(Of TParams)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams), TParams)
  name.vb: SendEvent(Of TParams)(EventType(Of TParams), TParams)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
  id: SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: SetRequestHandler<TParams, TResult>(RequestType<TParams, TResult>, Func<TParams, RequestContext<TResult>, Task>)
  nameWithType: ProtocolEndpoint.SetRequestHandler<TParams, TResult>(RequestType<TParams, TResult>, Func<TParams, RequestContext<TResult>, Task>)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetRequestHandler<TParams, TResult>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>, System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext<TResult>, System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SetRequestHandler
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 233
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public void SetRequestHandler<TParams, TResult>(RequestType<TParams, TResult> requestType, Func<TParams, RequestContext<TResult>, Task> requestHandler)
    content.vb: Public Sub SetRequestHandler(Of TParams, TResult)(requestType As RequestType(Of TParams, TResult), requestHandler As Func(Of TParams, RequestContext(Of TResult), Task))
    parameters:
    - id: requestType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{{TParams},{TResult}}
    - id: requestHandler
      type: System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{{TResult}},System.Threading.Tasks.Task}
    typeParameters:
    - id: TParams
    - id: TResult
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetRequestHandler*
  implements:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{{TParams},{TResult}},System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{{TResult}},System.Threading.Tasks.Task})
  nameWithType.vb: ProtocolEndpoint.SetRequestHandler(Of TParams, TResult)(RequestType(Of TParams, TResult), Func(Of TParams, RequestContext(Of TResult), Task))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetRequestHandler(Of TParams, TResult)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult), System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext(Of TResult), System.Threading.Tasks.Task))
  name.vb: SetRequestHandler(Of TParams, TResult)(RequestType(Of TParams, TResult), Func(Of TParams, RequestContext(Of TResult), Task))
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  id: SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>)
  nameWithType: ProtocolEndpoint.SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler<TParams>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>, System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SetEventHandler
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 242
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public void SetEventHandler<TParams>(EventType<TParams> eventType, Func<TParams, EventContext, Task> eventHandler)
    content.vb: Public Sub SetEventHandler(Of TParams)(eventType As EventType(Of TParams), eventHandler As Func(Of TParams, EventContext, Task))
    parameters:
    - id: eventType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}}
    - id: eventHandler
      type: System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task}
    typeParameters:
    - id: TParams
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler*
  implements:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}},System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  nameWithType.vb: ProtocolEndpoint.SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler(Of TParams)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams), System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task))
  name.vb: SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task))
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  id: SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>, Boolean)
  nameWithType: ProtocolEndpoint.SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>, Boolean)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler<TParams>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>, System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: SetEventHandler
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 252
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: public void SetEventHandler<TParams>(EventType<TParams> eventType, Func<TParams, EventContext, Task> eventHandler, bool overrideExisting)
    content.vb: Public Sub SetEventHandler(Of TParams)(eventType As EventType(Of TParams), eventHandler As Func(Of TParams, EventContext, Task), overrideExisting As Boolean)
    parameters:
    - id: eventType
      type: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}}
    - id: eventHandler
      type: System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task}
    - id: overrideExisting
      type: System.Boolean
    typeParameters:
    - id: TParams
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler*
  implements:
  - Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}},System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  nameWithType.vb: ProtocolEndpoint.SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler(Of TParams)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams), System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task), System.Boolean)
  name.vb: SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task), Boolean)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStart
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStart
  id: OnStart
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: OnStart()
  nameWithType: ProtocolEndpoint.OnStart()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStart()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: OnStart
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 278
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: protected virtual Task OnStart()
    content.vb: Protected Overridable Function OnStart As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStart*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnConnect
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnConnect
  id: OnConnect
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: OnConnect()
  nameWithType: ProtocolEndpoint.OnConnect()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnConnect()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: OnConnect
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 283
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: protected virtual Task OnConnect()
    content.vb: Protected Overridable Function OnConnect As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnConnect*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStop
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStop
  id: OnStop
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint
  langs:
  - csharp
  - vb
  name: OnStop()
  nameWithType: ProtocolEndpoint.OnStop()
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStop()
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: OnStop
    path: ../src/Microsoft.SqlTools.ServiceLayer/Hosting/Protocol/ProtocolEndpoint.cs
    startLine: 288
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  syntax:
    content: protected virtual Task OnStop()
    content.vb: Protected Overridable Function OnStop As Task
    return:
      type: System.Threading.Tasks.Task
  overload: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStop*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  isExternal: false
  name: IProtocolEndpoint
  nameWithType: IProtocolEndpoint
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  isExternal: false
  name: IMessageSender
  nameWithType: IMessageSender
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.MessageDispatcher*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.MessageDispatcher
  isExternal: false
  name: MessageDispatcher
  nameWithType: ProtocolEndpoint.MessageDispatcher
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.MessageDispatcher
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  isExternal: false
  name: MessageDispatcher
  nameWithType: MessageDispatcher
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageDispatcher
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.#ctor
  isExternal: false
  name: ProtocolEndpoint
  nameWithType: ProtocolEndpoint.ProtocolEndpoint
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.ProtocolEndpoint
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  isExternal: false
  name: ChannelBase
  nameWithType: ChannelBase
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel.ChannelBase
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol
  isExternal: false
  name: MessageProtocolType
  nameWithType: MessageProtocolType
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.MessageProtocolType
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Channel
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Start*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Start
  isExternal: false
  name: Start
  nameWithType: ProtocolEndpoint.Start
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Start
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.WaitForExit*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.WaitForExit
  isExternal: false
  name: WaitForExit
  nameWithType: ProtocolEndpoint.WaitForExit
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.WaitForExit
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Stop*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Stop
  isExternal: false
  name: Stop
  nameWithType: ProtocolEndpoint.Stop
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.Stop
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest
  isExternal: false
  name: SendRequest<TParams, TResult>
  nameWithType: ProtocolEndpoint.SendRequest<TParams, TResult>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest<TParams, TResult>
  nameWithType.vb: ProtocolEndpoint.SendRequest(Of TParams, TResult)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendRequest(Of TParams, TResult)
  name.vb: SendRequest(Of TParams, TResult)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{{TParams},{TResult}}
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1}
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
  name: RequestType<TParams, TResult>
  nameWithType: RequestType<TParams, TResult>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>
  nameWithType.vb: RequestType(Of TParams, TResult)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult)
  name.vb: RequestType(Of TParams, TResult)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TParams}'
  commentId: '!:TParams'
  definition: TParams
  name: TParams
  nameWithType: TParams
  fullName: TParams
- uid: System.Threading.Tasks.Task{{TResult}}
  commentId: T:System.Threading.Tasks.Task{``1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: RequestType<TParams, TResult>
  nameWithType: RequestType<TParams, TResult>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>
  nameWithType.vb: RequestType(Of TParams, TResult)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult)
  name.vb: RequestType(Of TParams, TResult)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
- uid: TParams
  isExternal: false
  name: TParams
  nameWithType: TParams
  fullName: TParams
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{{TParams},{TResult}},{TParams},System.Boolean)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Boolean)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Boolean)
  name: SendRequest<TParams, TResult>(RequestType<TParams, TResult>, TParams, Boolean)
  nameWithType: IMessageSender.SendRequest<TParams, TResult>(RequestType<TParams, TResult>, TParams, Boolean)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest<TParams, TResult>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>, TParams, System.Boolean)
  nameWithType.vb: IMessageSender.SendRequest(Of TParams, TResult)(RequestType(Of TParams, TResult), TParams, Boolean)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest(Of TParams, TResult)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult), TParams, System.Boolean)
  name.vb: SendRequest(Of TParams, TResult)(RequestType(Of TParams, TResult), TParams, Boolean)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Boolean)
    name: SendRequest<TParams, TResult>
    nameWithType: IMessageSender.SendRequest<TParams, TResult>
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest<TParams, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Boolean)
    name: SendRequest(Of TParams, TResult)
    nameWithType: IMessageSender.SendRequest(Of TParams, TResult)
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest(Of TParams, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Boolean)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Boolean)
  isExternal: true
  name: SendRequest<TParams, TResult>(RequestType<TParams, TResult>, TParams, Boolean)
  nameWithType: IMessageSender.SendRequest<TParams, TResult>(RequestType<TParams, TResult>, TParams, Boolean)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest<TParams, TResult>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>, TParams, System.Boolean)
  nameWithType.vb: IMessageSender.SendRequest(Of TParams, TResult)(RequestType(Of TParams, TResult), TParams, Boolean)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest(Of TParams, TResult)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult), TParams, System.Boolean)
  name.vb: SendRequest(Of TParams, TResult)(RequestType(Of TParams, TResult), TParams, Boolean)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Boolean)
    name: SendRequest<TParams, TResult>
    nameWithType: IMessageSender.SendRequest<TParams, TResult>
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest<TParams, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},``0,System.Boolean)
    name: SendRequest(Of TParams, TResult)
    nameWithType: IMessageSender.SendRequest(Of TParams, TResult)
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendRequest(Of TParams, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendEvent*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendEvent
  isExternal: false
  name: SendEvent<TParams>
  nameWithType: ProtocolEndpoint.SendEvent<TParams>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendEvent<TParams>
  nameWithType.vb: ProtocolEndpoint.SendEvent(Of TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SendEvent(Of TParams)
  name.vb: SendEvent(Of TParams)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}},{TParams})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  name: SendEvent<TParams>(EventType<TParams>, TParams)
  nameWithType: IMessageSender.SendEvent<TParams>(EventType<TParams>, TParams)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent<TParams>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>, TParams)
  nameWithType.vb: IMessageSender.SendEvent(Of TParams)(EventType(Of TParams), TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent(Of TParams)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams), TParams)
  name.vb: SendEvent(Of TParams)(EventType(Of TParams), TParams)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
    name: SendEvent<TParams>
    nameWithType: IMessageSender.SendEvent<TParams>
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent<TParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
    name: SendEvent(Of TParams)
    nameWithType: IMessageSender.SendEvent(Of TParams)
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent(Of TParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}}
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0}
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
  name: EventType<TParams>
  nameWithType: EventType<TParams>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>
  nameWithType.vb: EventType(Of TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams)
  name.vb: EventType(Of TParams)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
  isExternal: false
  name: SendEvent<TParams>(EventType<TParams>, TParams)
  nameWithType: IMessageSender.SendEvent<TParams>(EventType<TParams>, TParams)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent<TParams>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>, TParams)
  nameWithType.vb: IMessageSender.SendEvent(Of TParams)(EventType(Of TParams), TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent(Of TParams)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams), TParams)
  name.vb: SendEvent(Of TParams)(EventType(Of TParams), TParams)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
    name: SendEvent<TParams>
    nameWithType: IMessageSender.SendEvent<TParams>
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent<TParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},``0)
    name: SendEvent(Of TParams)
    nameWithType: IMessageSender.SendEvent(Of TParams)
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IMessageSender.SendEvent(Of TParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
  commentId: T:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts
  isExternal: false
  name: EventType<TParams>
  nameWithType: EventType<TParams>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>
  nameWithType.vb: EventType(Of TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams)
  name.vb: EventType(Of TParams)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetRequestHandler*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetRequestHandler
  isExternal: false
  name: SetRequestHandler<TParams, TResult>
  nameWithType: ProtocolEndpoint.SetRequestHandler<TParams, TResult>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetRequestHandler<TParams, TResult>
  nameWithType.vb: ProtocolEndpoint.SetRequestHandler(Of TParams, TResult)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetRequestHandler(Of TParams, TResult)
  name.vb: SetRequestHandler(Of TParams, TResult)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{{TParams},{TResult}},System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{{TResult}},System.Threading.Tasks.Task})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
  name: SetRequestHandler<TParams, TResult>(RequestType<TParams, TResult>, Func<TParams, RequestContext<TResult>, Task>)
  nameWithType: IProtocolEndpoint.SetRequestHandler<TParams, TResult>(RequestType<TParams, TResult>, Func<TParams, RequestContext<TResult>, Task>)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler<TParams, TResult>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>, System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext<TResult>, System.Threading.Tasks.Task>)
  nameWithType.vb: IProtocolEndpoint.SetRequestHandler(Of TParams, TResult)(RequestType(Of TParams, TResult), Func(Of TParams, RequestContext(Of TResult), Task))
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler(Of TParams, TResult)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult), System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext(Of TResult), System.Threading.Tasks.Task))
  name.vb: SetRequestHandler(Of TParams, TResult)(RequestType(Of TParams, TResult), Func(Of TParams, RequestContext(Of TResult), Task))
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
    name: SetRequestHandler<TParams, TResult>
    nameWithType: IProtocolEndpoint.SetRequestHandler<TParams, TResult>
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler<TParams, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
    name: SetRequestHandler(Of TParams, TResult)
    nameWithType: IProtocolEndpoint.SetRequestHandler(Of TParams, TResult)
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler(Of TParams, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{{TResult}},System.Threading.Tasks.Task}
  commentId: T:System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`3
  name: Func<TParams, RequestContext<TResult>, Task>
  nameWithType: Func<TParams, RequestContext<TResult>, Task>
  fullName: System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext<TResult>, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of TParams, RequestContext(Of TResult), Task)
  fullname.vb: System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext(Of TResult), System.Threading.Tasks.Task)
  name.vb: Func(Of TParams, RequestContext(Of TResult), Task)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
  isExternal: true
  name: SetRequestHandler<TParams, TResult>(RequestType<TParams, TResult>, Func<TParams, RequestContext<TResult>, Task>)
  nameWithType: IProtocolEndpoint.SetRequestHandler<TParams, TResult>(RequestType<TParams, TResult>, Func<TParams, RequestContext<TResult>, Task>)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler<TParams, TResult>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType<TParams, TResult>, System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext<TResult>, System.Threading.Tasks.Task>)
  nameWithType.vb: IProtocolEndpoint.SetRequestHandler(Of TParams, TResult)(RequestType(Of TParams, TResult), Func(Of TParams, RequestContext(Of TResult), Task))
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler(Of TParams, TResult)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType(Of TParams, TResult), System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext(Of TResult), System.Threading.Tasks.Task))
  name.vb: SetRequestHandler(Of TParams, TResult)(RequestType(Of TParams, TResult), Func(Of TParams, RequestContext(Of TResult), Task))
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
    name: SetRequestHandler<TParams, TResult>
    nameWithType: IProtocolEndpoint.SetRequestHandler<TParams, TResult>
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler<TParams, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler``2(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType{``0,``1},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext{``1},System.Threading.Tasks.Task})
    name: SetRequestHandler(Of TParams, TResult)
    nameWithType: IProtocolEndpoint.SetRequestHandler(Of TParams, TResult)
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetRequestHandler(Of TParams, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType`2
    name: RequestType
    nameWithType: RequestType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.RequestType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext`1
    name: RequestContext
    nameWithType: RequestContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.RequestContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler
  isExternal: false
  name: SetEventHandler<TParams>
  nameWithType: ProtocolEndpoint.SetEventHandler<TParams>
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler<TParams>
  nameWithType.vb: ProtocolEndpoint.SetEventHandler(Of TParams)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.SetEventHandler(Of TParams)
  name.vb: SetEventHandler(Of TParams)
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}},System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  name: SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>)
  nameWithType: IProtocolEndpoint.SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler<TParams>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>, System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task>)
  nameWithType.vb: IProtocolEndpoint.SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task))
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler(Of TParams)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams), System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task))
  name.vb: SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task))
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
    name: SetEventHandler<TParams>
    nameWithType: IProtocolEndpoint.SetEventHandler<TParams>
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler<TParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
    name: EventContext
    nameWithType: EventContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
    name: SetEventHandler(Of TParams)
    nameWithType: IProtocolEndpoint.SetEventHandler(Of TParams)
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler(Of TParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
    name: EventContext
    nameWithType: EventContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task}
  commentId: T:System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`3
  name: Func<TParams, EventContext, Task>
  nameWithType: Func<TParams, EventContext, Task>
  fullName: System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of TParams, EventContext, Task)
  fullname.vb: System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task)
  name.vb: Func(Of TParams, EventContext, Task)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
    name: EventContext
    nameWithType: EventContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
    name: EventContext
    nameWithType: EventContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
  isExternal: true
  name: SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>)
  nameWithType: IProtocolEndpoint.SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler<TParams>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>, System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task>)
  nameWithType.vb: IProtocolEndpoint.SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task))
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler(Of TParams)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams), System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task))
  name.vb: SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task))
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
    name: SetEventHandler<TParams>
    nameWithType: IProtocolEndpoint.SetEventHandler<TParams>
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler<TParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
    name: EventContext
    nameWithType: EventContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task})
    name: SetEventHandler(Of TParams)
    nameWithType: IProtocolEndpoint.SetEventHandler(Of TParams)
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler(Of TParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
    name: EventContext
    nameWithType: EventContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{{TParams}},System.Func{{TParams},Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  parent: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint
  definition: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  name: SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>, Boolean)
  nameWithType: IProtocolEndpoint.SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>, Boolean)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler<TParams>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>, System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task>, System.Boolean)
  nameWithType.vb: IProtocolEndpoint.SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task), Boolean)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler(Of TParams)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams), System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task), System.Boolean)
  name.vb: SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task), Boolean)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
    name: SetEventHandler<TParams>
    nameWithType: IProtocolEndpoint.SetEventHandler<TParams>
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler<TParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
    name: EventContext
    nameWithType: EventContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
    name: SetEventHandler(Of TParams)
    nameWithType: IProtocolEndpoint.SetEventHandler(Of TParams)
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler(Of TParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
    name: EventContext
    nameWithType: EventContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
  isExternal: true
  name: SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>, Boolean)
  nameWithType: IProtocolEndpoint.SetEventHandler<TParams>(EventType<TParams>, Func<TParams, EventContext, Task>, Boolean)
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler<TParams>(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType<TParams>, System.Func<TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task>, System.Boolean)
  nameWithType.vb: IProtocolEndpoint.SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task), Boolean)
  fullname.vb: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler(Of TParams)(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType(Of TParams), System.Func(Of TParams, Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext, System.Threading.Tasks.Task), System.Boolean)
  name.vb: SetEventHandler(Of TParams)(EventType(Of TParams), Func(Of TParams, EventContext, Task), Boolean)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
    name: SetEventHandler<TParams>
    nameWithType: IProtocolEndpoint.SetEventHandler<TParams>
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler<TParams>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
    name: EventContext
    nameWithType: EventContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler``1(Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType{``0},System.Func{``0,Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext,System.Threading.Tasks.Task},System.Boolean)
    name: SetEventHandler(Of TParams)
    nameWithType: IProtocolEndpoint.SetEventHandler(Of TParams)
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.IProtocolEndpoint.SetEventHandler(Of TParams)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType`1
    name: EventType
    nameWithType: EventType
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.Contracts.EventType
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TParams
    nameWithType: TParams
    fullName: TParams
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
    name: EventContext
    nameWithType: EventContext
    fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.EventContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStart*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStart
  isExternal: false
  name: OnStart
  nameWithType: ProtocolEndpoint.OnStart
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStart
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnConnect*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnConnect
  isExternal: false
  name: OnConnect
  nameWithType: ProtocolEndpoint.OnConnect
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnConnect
- uid: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStop*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStop
  isExternal: false
  name: OnStop
  nameWithType: ProtocolEndpoint.OnStop
  fullName: Microsoft.SqlTools.ServiceLayer.Hosting.Protocol.ProtocolEndpoint.OnStop
