### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  id: BatchSummary
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  children:
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionElapsed
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionEnd
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionStart
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.HasError
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Id
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Messages
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ResultSetSummaries
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Selection
  langs:
  - csharp
  - vb
  name: BatchSummary
  nameWithType: BatchSummary
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: BatchSummary
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
    startLine: 10
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nSummary of a batch within a query\n"
  example: []
  syntax:
    content: public class BatchSummary
    content.vb: Public Class BatchSummary
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionElapsed
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionElapsed
  id: ExecutionElapsed
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  langs:
  - csharp
  - vb
  name: ExecutionElapsed
  nameWithType: BatchSummary.ExecutionElapsed
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionElapsed
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ExecutionElapsed
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
    startLine: 15
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nLocalized timestamp for how long it took for the execution to complete\n"
  example: []
  syntax:
    content: public string ExecutionElapsed { get; set; }
    content.vb: Public Property ExecutionElapsed As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionElapsed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionEnd
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionEnd
  id: ExecutionEnd
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  langs:
  - csharp
  - vb
  name: ExecutionEnd
  nameWithType: BatchSummary.ExecutionEnd
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionEnd
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ExecutionEnd
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
    startLine: 20
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nLocalized timestamp for when the execution completed.\n"
  example: []
  syntax:
    content: public string ExecutionEnd { get; set; }
    content.vb: Public Property ExecutionEnd As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionEnd*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionStart
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionStart
  id: ExecutionStart
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  langs:
  - csharp
  - vb
  name: ExecutionStart
  nameWithType: BatchSummary.ExecutionStart
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionStart
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ExecutionStart
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
    startLine: 25
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nLocalized timestamp for when the execution started.\n"
  example: []
  syntax:
    content: public string ExecutionStart { get; set; }
    content.vb: Public Property ExecutionStart As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionStart*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.HasError
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.HasError
  id: HasError
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  langs:
  - csharp
  - vb
  name: HasError
  nameWithType: BatchSummary.HasError
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.HasError
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: HasError
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
    startLine: 30
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nWhether or not the batch was successful. True indicates errors, false indicates success\n"
  example: []
  syntax:
    content: public bool HasError { get; set; }
    content.vb: Public Property HasError As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.HasError*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Id
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Id
  id: Id
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: BatchSummary.Id
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Id
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Id
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
    startLine: 35
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nThe ID of the result set within the query results\n"
  example: []
  syntax:
    content: public int Id { get; set; }
    content.vb: Public Property Id As Integer
    parameters: []
    return:
      type: System.Int32
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Selection
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Selection
  id: Selection
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  langs:
  - csharp
  - vb
  name: Selection
  nameWithType: BatchSummary.Selection
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Selection
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Selection
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
    startLine: 40
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nThe selection from the file for this batch\n"
  example: []
  syntax:
    content: public SelectionData Selection { get; set; }
    content.vb: Public Property Selection As SelectionData
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.SelectionData
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Selection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Messages
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Messages
  id: Messages
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  langs:
  - csharp
  - vb
  name: Messages
  nameWithType: BatchSummary.Messages
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Messages
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Messages
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
    startLine: 45
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nAny messages that came back from the server during execution of the batch\n"
  example: []
  syntax:
    content: public ResultMessage[] Messages { get; set; }
    content.vb: Public Property Messages As ResultMessage()
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultMessage[]
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Messages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ResultSetSummaries
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ResultSetSummaries
  id: ResultSetSummaries
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary
  langs:
  - csharp
  - vb
  name: ResultSetSummaries
  nameWithType: BatchSummary.ResultSetSummaries
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ResultSetSummaries
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ResultSetSummaries
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/Contracts/BatchSummary.cs
    startLine: 50
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  summary: "\nThe summaries of the result sets inside the batch\n"
  example: []
  syntax:
    content: public ResultSetSummary[] ResultSetSummaries { get; set; }
    content.vb: Public Property ResultSetSummaries As ResultSetSummary()
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary[]
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ResultSetSummaries*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionElapsed*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionElapsed
  isExternal: false
  name: ExecutionElapsed
  nameWithType: BatchSummary.ExecutionElapsed
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionElapsed
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionEnd*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionEnd
  isExternal: false
  name: ExecutionEnd
  nameWithType: BatchSummary.ExecutionEnd
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionEnd
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionStart*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionStart
  isExternal: false
  name: ExecutionStart
  nameWithType: BatchSummary.ExecutionStart
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionStart
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.HasError*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.HasError
  isExternal: false
  name: HasError
  nameWithType: BatchSummary.HasError
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.HasError
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Id*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Id
  isExternal: false
  name: Id
  nameWithType: BatchSummary.Id
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Selection*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Selection
  isExternal: false
  name: Selection
  nameWithType: BatchSummary.Selection
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Selection
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.SelectionData
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.SelectionData
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts
  isExternal: false
  name: SelectionData
  nameWithType: SelectionData
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.SelectionData
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Messages*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Messages
  isExternal: false
  name: Messages
  nameWithType: BatchSummary.Messages
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.Messages
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultMessage[]
  name: ResultMessage[]
  nameWithType: ResultMessage[]
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultMessage[]
  nameWithType.vb: ResultMessage()
  fullname.vb: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultMessage()
  name.vb: ResultMessage()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultMessage
    name: ResultMessage
    nameWithType: ResultMessage
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultMessage
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultMessage
    name: ResultMessage
    nameWithType: ResultMessage
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultMessage
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ResultSetSummaries*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ResultSetSummaries
  isExternal: false
  name: ResultSetSummaries
  nameWithType: BatchSummary.ResultSetSummaries
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.BatchSummary.ResultSetSummaries
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary[]
  name: ResultSetSummary[]
  nameWithType: ResultSetSummary[]
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary[]
  nameWithType.vb: ResultSetSummary()
  fullname.vb: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary()
  name.vb: ResultSetSummary()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
    name: ResultSetSummary
    nameWithType: ResultSetSummary
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
    name: ResultSetSummary
    nameWithType: ResultSetSummary
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.ResultSetSummary
  - name: ()
    nameWithType: ()
    fullName: ()
