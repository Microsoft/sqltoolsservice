### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1
  commentId: T:Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1
  id: BindingQueue`1
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices
  children:
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.#ctor
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.BindingContextExists(System.String)
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.GetOrCreateBindingContext(System.String)
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.QueueBindingOperation(System.String,System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Threading.CancellationToken,System.Object},System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Object},System.Nullable{System.Int32},System.Nullable{System.Int32})
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.StopQueueProcessor(System.Int32)
  langs:
  - csharp
  - vb
  name: BindingQueue<T>
  nameWithType: BindingQueue<T>
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue<T>
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/BindingQueue.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: BindingQueue
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/BindingQueue.cs
    startLine: 16
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nMain class for the Binding Queue\n"
  example: []
  syntax:
    content: >-
      public class BindingQueue<T>
          where T : IBindingContext, new ()
    content.vb: Public Class BindingQueue(Of T As {IBindingContext, New})
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.SqlTools.ServiceLayer.LanguageServices.ConnectedBindingQueue
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: BindingQueue(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue(Of T)
  name.vb: BindingQueue(Of T)
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.#ctor
  commentId: M:Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.#ctor
  id: '#ctor'
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1
  langs:
  - csharp
  - vb
  name: BindingQueue()
  nameWithType: BindingQueue<T>.BindingQueue()
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue<T>.BindingQueue()
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/BindingQueue.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/BindingQueue.cs
    startLine: 39
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nConstructor for a binding queue instance\n"
  example: []
  syntax:
    content: public BindingQueue()
    content.vb: Public Sub New
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.#ctor*
  nameWithType.vb: BindingQueue(Of T).BindingQueue()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue(Of T).BindingQueue()
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.StopQueueProcessor(System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.StopQueueProcessor(System.Int32)
  id: StopQueueProcessor(System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1
  langs:
  - csharp
  - vb
  name: StopQueueProcessor(Int32)
  nameWithType: BindingQueue<T>.StopQueueProcessor(Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue<T>.StopQueueProcessor(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/BindingQueue.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: StopQueueProcessor
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/BindingQueue.cs
    startLine: 50
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nStops the binding queue by sending cancellation request\n"
  example: []
  syntax:
    content: public bool StopQueueProcessor(int timeout)
    content.vb: Public Function StopQueueProcessor(timeout As Integer) As Boolean
    parameters:
    - id: timeout
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.StopQueueProcessor*
  nameWithType.vb: BindingQueue(Of T).StopQueueProcessor(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue(Of T).StopQueueProcessor(System.Int32)
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.QueueBindingOperation(System.String,System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Threading.CancellationToken,System.Object},System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Object},System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.QueueBindingOperation(System.String,System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Threading.CancellationToken,System.Object},System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Object},System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: QueueBindingOperation(System.String,System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Threading.CancellationToken,System.Object},System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Object},System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1
  langs:
  - csharp
  - vb
  name: QueueBindingOperation(String, Func<IBindingContext, CancellationToken, Object>, Func<IBindingContext, Object>, Nullable<Int32>, Nullable<Int32>)
  nameWithType: BindingQueue<T>.QueueBindingOperation(String, Func<IBindingContext, CancellationToken, Object>, Func<IBindingContext, Object>, Nullable<Int32>, Nullable<Int32>)
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue<T>.QueueBindingOperation(System.String, System.Func<Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext, System.Threading.CancellationToken, System.Object>, System.Func<Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext, System.Object>, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/BindingQueue.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: QueueBindingOperation
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/BindingQueue.cs
    startLine: 59
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nQueue a binding request item\n"
  example: []
  syntax:
    content: public virtual QueueItem QueueBindingOperation(string key, Func<IBindingContext, CancellationToken, object> bindOperation, Func<IBindingContext, object> timeoutOperation = null, int ? bindingTimeout = null, int ? waitForLockTimeout = null)
    content.vb: Public Overridable Function QueueBindingOperation(key As String, bindOperation As Func(Of IBindingContext, CancellationToken, Object), timeoutOperation As Func(Of IBindingContext, Object) = Nothing, bindingTimeout As Integer? = Nothing, waitForLockTimeout As Integer? = Nothing) As QueueItem
    parameters:
    - id: key
      type: System.String
    - id: bindOperation
      type: System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Threading.CancellationToken,System.Object}
    - id: timeoutOperation
      type: System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Object}
    - id: bindingTimeout
      type: System.Nullable{System.Int32}
    - id: waitForLockTimeout
      type: System.Nullable{System.Int32}
    return:
      type: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.QueueBindingOperation*
  nameWithType.vb: BindingQueue(Of T).QueueBindingOperation(String, Func(Of IBindingContext, CancellationToken, Object), Func(Of IBindingContext, Object), Nullable(Of Int32), Nullable(Of Int32))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue(Of T).QueueBindingOperation(System.String, System.Func(Of Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext, System.Threading.CancellationToken, System.Object), System.Func(Of Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext, System.Object), System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  name.vb: QueueBindingOperation(String, Func(Of IBindingContext, CancellationToken, Object), Func(Of IBindingContext, Object), Nullable(Of Int32), Nullable(Of Int32))
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.GetOrCreateBindingContext(System.String)
  commentId: M:Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.GetOrCreateBindingContext(System.String)
  id: GetOrCreateBindingContext(System.String)
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1
  langs:
  - csharp
  - vb
  name: GetOrCreateBindingContext(String)
  nameWithType: BindingQueue<T>.GetOrCreateBindingContext(String)
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue<T>.GetOrCreateBindingContext(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/BindingQueue.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetOrCreateBindingContext
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/BindingQueue.cs
    startLine: 95
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nGets or creates a binding context for the provided context key\n"
  example: []
  syntax:
    content: protected IBindingContext GetOrCreateBindingContext(string key)
    content.vb: Protected Function GetOrCreateBindingContext(key As String) As IBindingContext
    parameters:
    - id: key
      type: System.String
      description: ''
    return:
      type: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.GetOrCreateBindingContext*
  nameWithType.vb: BindingQueue(Of T).GetOrCreateBindingContext(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue(Of T).GetOrCreateBindingContext(System.String)
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.BindingContextExists(System.String)
  commentId: M:Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.BindingContextExists(System.String)
  id: BindingContextExists(System.String)
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1
  langs:
  - csharp
  - vb
  name: BindingContextExists(String)
  nameWithType: BindingQueue<T>.BindingContextExists(String)
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue<T>.BindingContextExists(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/LanguageServices/BindingQueue.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: BindingContextExists
    path: ../src/Microsoft.SqlTools.ServiceLayer/LanguageServices/BindingQueue.cs
    startLine: 117
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.LanguageServices
  summary: "\nChecks if a binding context already exists for the provided context key\n"
  example: []
  syntax:
    content: protected bool BindingContextExists(string key)
    content.vb: Protected Function BindingContextExists(key As String) As Boolean
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.BindingContextExists*
  nameWithType.vb: BindingQueue(Of T).BindingContextExists(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue(Of T).BindingContextExists(System.String)
references:
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices
  commentId: N:Microsoft.SqlTools.ServiceLayer.LanguageServices
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.LanguageServices
  nameWithType: Microsoft.SqlTools.ServiceLayer.LanguageServices
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.#ctor
  isExternal: false
  name: BindingQueue
  nameWithType: BindingQueue.BindingQueue
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue.BindingQueue
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.StopQueueProcessor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.StopQueueProcessor
  isExternal: false
  name: StopQueueProcessor
  nameWithType: BindingQueue.StopQueueProcessor
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue.StopQueueProcessor
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.QueueBindingOperation*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.QueueBindingOperation
  isExternal: false
  name: QueueBindingOperation
  nameWithType: BindingQueue.QueueBindingOperation
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue.QueueBindingOperation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Threading.CancellationToken,System.Object}
  commentId: T:System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Threading.CancellationToken,System.Object}
  parent: System
  definition: System.Func`3
  name: Func<IBindingContext, CancellationToken, Object>
  nameWithType: Func<IBindingContext, CancellationToken, Object>
  fullName: System.Func<Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext, System.Threading.CancellationToken, System.Object>
  nameWithType.vb: Func(Of IBindingContext, CancellationToken, Object)
  fullname.vb: System.Func(Of Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext, System.Threading.CancellationToken, System.Object)
  name.vb: Func(Of IBindingContext, CancellationToken, Object)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
    name: IBindingContext
    nameWithType: IBindingContext
    fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
    name: IBindingContext
    nameWithType: IBindingContext
    fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Object}
  commentId: T:System.Func{Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext,System.Object}
  parent: System
  definition: System.Func`2
  name: Func<IBindingContext, Object>
  nameWithType: Func<IBindingContext, Object>
  fullName: System.Func<Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext, System.Object>
  nameWithType.vb: Func(Of IBindingContext, Object)
  fullname.vb: System.Func(Of Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext, System.Object)
  name.vb: Func(Of IBindingContext, Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
    name: IBindingContext
    nameWithType: IBindingContext
    fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
    name: IBindingContext
    nameWithType: IBindingContext
    fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  commentId: T:Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices
  isExternal: false
  name: QueueItem
  nameWithType: QueueItem
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.QueueItem
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullname.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.GetOrCreateBindingContext*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.GetOrCreateBindingContext
  isExternal: false
  name: GetOrCreateBindingContext
  nameWithType: BindingQueue.GetOrCreateBindingContext
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue.GetOrCreateBindingContext
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
  commentId: T:Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
  parent: Microsoft.SqlTools.ServiceLayer.LanguageServices
  isExternal: false
  name: IBindingContext
  nameWithType: IBindingContext
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.IBindingContext
- uid: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.BindingContextExists*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue`1.BindingContextExists
  isExternal: false
  name: BindingContextExists
  nameWithType: BindingQueue.BindingContextExists
  fullName: Microsoft.SqlTools.ServiceLayer.LanguageServices.BindingQueue.BindingContextExists
