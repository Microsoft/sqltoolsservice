### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  commentId: T:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  id: ConnectionDetails
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  children:
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationIntent
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationName
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AttachDbFilename
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AuthenticationType
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryCount
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryInterval
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectTimeout
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.CurrentLanguage
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Encrypt
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.FailoverPartner
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.LoadBalanceTimeout
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MaxPoolSize
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MinPoolSize
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultipleActiveResultSets
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultiSubnetFailover
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PacketSize
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Password
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PersistSecurityInfo
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Pooling
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Replication
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TrustServerCertificate
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TypeSystemVersion
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.WorkstationId
  langs:
  - csharp
  - vb
  name: ConnectionDetails
  nameWithType: ConnectionDetails
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ConnectionDetails
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 13
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nMessage format for the initial connection request\n"
  remarks: "\nIf this contract is ever changed, be sure to update ConnectionDetailsExtensions methods.\n"
  example: []
  syntax:
    content: 'public class ConnectionDetails : ConnectionSummary'
    content.vb: >-
      Public Class ConnectionDetails
          Inherits ConnectionSummary
  inheritance:
  - System.Object
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
  inheritedMembers:
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.ServerName
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.DatabaseName
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.UserName
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone
  - Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Password
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Password
  id: Password
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: ConnectionDetails.Password
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Password
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Password
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 19
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets the connection password\n"
  example: []
  syntax:
    content: public string Password { get; set; }
    content.vb: Public Property Password As String
    parameters: []
    return:
      type: System.String
      description: ''
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AuthenticationType
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AuthenticationType
  id: AuthenticationType
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: AuthenticationType
  nameWithType: ConnectionDetails.AuthenticationType
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AuthenticationType
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: AuthenticationType
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 24
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets the authentication to use.\n"
  example: []
  syntax:
    content: public string AuthenticationType { get; set; }
    content.vb: Public Property AuthenticationType As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AuthenticationType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Encrypt
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Encrypt
  id: Encrypt
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: Encrypt
  nameWithType: ConnectionDetails.Encrypt
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Encrypt
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Encrypt
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 29
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets a Boolean value that indicates whether SQL Server uses SSL encryption for all data sent between the client and server if the server has a certificate installed.\n"
  example: []
  syntax:
    content: public bool ? Encrypt { get; set; }
    content.vb: Public Property Encrypt As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Encrypt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TrustServerCertificate
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TrustServerCertificate
  id: TrustServerCertificate
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: TrustServerCertificate
  nameWithType: ConnectionDetails.TrustServerCertificate
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TrustServerCertificate
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: TrustServerCertificate
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 34
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets a value that indicates whether the channel will be encrypted while bypassing walking the certificate chain to validate trust.\n"
  example: []
  syntax:
    content: public bool ? TrustServerCertificate { get; set; }
    content.vb: Public Property TrustServerCertificate As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TrustServerCertificate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PersistSecurityInfo
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PersistSecurityInfo
  id: PersistSecurityInfo
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: PersistSecurityInfo
  nameWithType: ConnectionDetails.PersistSecurityInfo
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PersistSecurityInfo
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: PersistSecurityInfo
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 39
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets a Boolean value that indicates if security-sensitive information, such as the password, is not returned as part of the connection if the connection is open or has ever been in an open state.\n"
  example: []
  syntax:
    content: public bool ? PersistSecurityInfo { get; set; }
    content.vb: Public Property PersistSecurityInfo As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PersistSecurityInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectTimeout
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectTimeout
  id: ConnectTimeout
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: ConnectTimeout
  nameWithType: ConnectionDetails.ConnectTimeout
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectTimeout
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ConnectTimeout
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 44
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets the length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error.\n"
  example: []
  syntax:
    content: public int ? ConnectTimeout { get; set; }
    content.vb: Public Property ConnectTimeout As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryCount
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryCount
  id: ConnectRetryCount
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: ConnectRetryCount
  nameWithType: ConnectionDetails.ConnectRetryCount
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryCount
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ConnectRetryCount
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 49
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nThe number of reconnections attempted after identifying that there was an idle connection failure.\n"
  example: []
  syntax:
    content: public int ? ConnectRetryCount { get; set; }
    content.vb: Public Property ConnectRetryCount As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryInterval
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryInterval
  id: ConnectRetryInterval
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: ConnectRetryInterval
  nameWithType: ConnectionDetails.ConnectRetryInterval
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryInterval
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ConnectRetryInterval
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 54
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nAmount of time (in seconds) between each reconnection attempt after identifying that there was an idle connection failure.\n"
  example: []
  syntax:
    content: public int ? ConnectRetryInterval { get; set; }
    content.vb: Public Property ConnectRetryInterval As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationName
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationName
  id: ApplicationName
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: ConnectionDetails.ApplicationName
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationName
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ApplicationName
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 59
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets the name of the application associated with the connection string.\n"
  example: []
  syntax:
    content: public string ApplicationName { get; set; }
    content.vb: Public Property ApplicationName As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.WorkstationId
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.WorkstationId
  id: WorkstationId
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: WorkstationId
  nameWithType: ConnectionDetails.WorkstationId
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.WorkstationId
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: WorkstationId
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 64
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets the name of the workstation connecting to SQL Server.\n"
  example: []
  syntax:
    content: public string WorkstationId { get; set; }
    content.vb: Public Property WorkstationId As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.WorkstationId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationIntent
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationIntent
  id: ApplicationIntent
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: ApplicationIntent
  nameWithType: ConnectionDetails.ApplicationIntent
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationIntent
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ApplicationIntent
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 69
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nDeclares the application workload type when connecting to a database in an SQL Server Availability Group.\n"
  example: []
  syntax:
    content: public string ApplicationIntent { get; set; }
    content.vb: Public Property ApplicationIntent As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationIntent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.CurrentLanguage
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.CurrentLanguage
  id: CurrentLanguage
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: CurrentLanguage
  nameWithType: ConnectionDetails.CurrentLanguage
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.CurrentLanguage
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: CurrentLanguage
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 74
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets the SQL Server Language record name.\n"
  example: []
  syntax:
    content: public string CurrentLanguage { get; set; }
    content.vb: Public Property CurrentLanguage As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.CurrentLanguage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Pooling
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Pooling
  id: Pooling
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: Pooling
  nameWithType: ConnectionDetails.Pooling
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Pooling
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Pooling
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 79
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets a Boolean value that indicates whether the connection will be pooled or explicitly opened every time that the connection is requested.\n"
  example: []
  syntax:
    content: public bool ? Pooling { get; set; }
    content.vb: Public Property Pooling As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Pooling*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MaxPoolSize
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MaxPoolSize
  id: MaxPoolSize
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: MaxPoolSize
  nameWithType: ConnectionDetails.MaxPoolSize
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MaxPoolSize
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: MaxPoolSize
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 84
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets the maximum number of connections allowed in the connection pool for this specific connection string.\n"
  example: []
  syntax:
    content: public int ? MaxPoolSize { get; set; }
    content.vb: Public Property MaxPoolSize As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MaxPoolSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MinPoolSize
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MinPoolSize
  id: MinPoolSize
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: MinPoolSize
  nameWithType: ConnectionDetails.MinPoolSize
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MinPoolSize
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: MinPoolSize
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 89
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets the minimum number of connections allowed in the connection pool for this specific connection string.\n"
  example: []
  syntax:
    content: public int ? MinPoolSize { get; set; }
    content.vb: Public Property MinPoolSize As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MinPoolSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.LoadBalanceTimeout
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.LoadBalanceTimeout
  id: LoadBalanceTimeout
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: LoadBalanceTimeout
  nameWithType: ConnectionDetails.LoadBalanceTimeout
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.LoadBalanceTimeout
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: LoadBalanceTimeout
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 94
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets the minimum time, in seconds, for the connection to live in the connection pool before being destroyed.\n"
  example: []
  syntax:
    content: public int ? LoadBalanceTimeout { get; set; }
    content.vb: Public Property LoadBalanceTimeout As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.LoadBalanceTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Replication
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Replication
  id: Replication
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: Replication
  nameWithType: ConnectionDetails.Replication
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Replication
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Replication
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 99
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets a Boolean value that indicates whether replication is supported using the connection.\n"
  example: []
  syntax:
    content: public bool ? Replication { get; set; }
    content.vb: Public Property Replication As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Replication*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AttachDbFilename
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AttachDbFilename
  id: AttachDbFilename
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: AttachDbFilename
  nameWithType: ConnectionDetails.AttachDbFilename
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AttachDbFilename
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: AttachDbFilename
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 104
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets a string that contains the name of the primary data file. This includes the full path name of an attachable database.\n"
  example: []
  syntax:
    content: public string AttachDbFilename { get; set; }
    content.vb: Public Property AttachDbFilename As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AttachDbFilename*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.FailoverPartner
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.FailoverPartner
  id: FailoverPartner
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: FailoverPartner
  nameWithType: ConnectionDetails.FailoverPartner
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.FailoverPartner
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: FailoverPartner
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 109
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets the name or address of the partner server to connect to if the primary server is down.\n"
  example: []
  syntax:
    content: public string FailoverPartner { get; set; }
    content.vb: Public Property FailoverPartner As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.FailoverPartner*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultiSubnetFailover
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultiSubnetFailover
  id: MultiSubnetFailover
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: MultiSubnetFailover
  nameWithType: ConnectionDetails.MultiSubnetFailover
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultiSubnetFailover
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: MultiSubnetFailover
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 114
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nIf your application is connecting to an AlwaysOn availability group (AG) on different subnets, setting MultiSubnetFailover=true provides faster detection of and connection to the (currently) active server.\n"
  example: []
  syntax:
    content: public bool ? MultiSubnetFailover { get; set; }
    content.vb: Public Property MultiSubnetFailover As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultiSubnetFailover*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultipleActiveResultSets
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultipleActiveResultSets
  id: MultipleActiveResultSets
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: MultipleActiveResultSets
  nameWithType: ConnectionDetails.MultipleActiveResultSets
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultipleActiveResultSets
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: MultipleActiveResultSets
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 119
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nWhen true, an application can maintain multiple active result sets (MARS).\n"
  example: []
  syntax:
    content: public bool ? MultipleActiveResultSets { get; set; }
    content.vb: Public Property MultipleActiveResultSets As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultipleActiveResultSets*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PacketSize
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PacketSize
  id: PacketSize
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: PacketSize
  nameWithType: ConnectionDetails.PacketSize
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PacketSize
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: PacketSize
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 124
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets the size in bytes of the network packets used to communicate with an instance of SQL Server.\n"
  example: []
  syntax:
    content: public int ? PacketSize { get; set; }
    content.vb: Public Property PacketSize As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PacketSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TypeSystemVersion
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TypeSystemVersion
  id: TypeSystemVersion
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  langs:
  - csharp
  - vb
  name: TypeSystemVersion
  nameWithType: ConnectionDetails.TypeSystemVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TypeSystemVersion
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: TypeSystemVersion
    path: ../src/Microsoft.SqlTools.ServiceLayer/Connection/Contracts/ConnectionDetails.cs
    startLine: 129
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  summary: "\nGets or sets a string value that indicates the type system the application expects.\n"
  example: []
  syntax:
    content: public string TypeSystemVersion { get; set; }
    content.vb: Public Property TypeSystemVersion As String
    parameters: []
    return:
      type: System.String
  overload: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TypeSystemVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  commentId: N:Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  nameWithType: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
  commentId: T:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  isExternal: false
  name: ConnectionSummary
  nameWithType: ConnectionSummary
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.ServerName
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.ServerName
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
  isExternal: false
  name: ServerName
  nameWithType: ConnectionSummary.ServerName
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.ServerName
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.DatabaseName
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.DatabaseName
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
  isExternal: false
  name: DatabaseName
  nameWithType: ConnectionSummary.DatabaseName
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.DatabaseName
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.UserName
  commentId: P:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.UserName
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
  isExternal: false
  name: UserName
  nameWithType: ConnectionSummary.UserName
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.UserName
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone
  commentId: M:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails)
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions
  definition: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails)
  name: Clone()
  nameWithType: ConnectionDetailsExtensions.Clone()
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone
    name: Clone
    nameWithType: ConnectionDetailsExtensions.Clone
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone
    name: Clone
    nameWithType: ConnectionDetailsExtensions.Clone
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary.Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone
  commentId: M:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary)
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions
  definition: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary)
  name: Clone()
  nameWithType: ConnectionSummaryExtensions.Clone()
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone
    name: Clone
    nameWithType: ConnectionSummaryExtensions.Clone
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone
    name: Clone
    nameWithType: ConnectionSummaryExtensions.Clone
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails)
  isExternal: false
  name: Clone(ConnectionDetails)
  nameWithType: ConnectionDetailsExtensions.Clone(ConnectionDetails)
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails)
    name: Clone
    nameWithType: ConnectionDetailsExtensions.Clone
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
    name: ConnectionDetails
    nameWithType: ConnectionDetails
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails)
    name: Clone
    nameWithType: ConnectionDetailsExtensions.Clone
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
    name: ConnectionDetails
    nameWithType: ConnectionDetails
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions
  commentId: T:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  isExternal: false
  name: ConnectionDetailsExtensions
  nameWithType: ConnectionDetailsExtensions
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary)
  commentId: M:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary)
  isExternal: false
  name: Clone(ConnectionSummary)
  nameWithType: ConnectionSummaryExtensions.Clone(ConnectionSummary)
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary)
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary)
    name: Clone
    nameWithType: ConnectionSummaryExtensions.Clone
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
    name: ConnectionSummary
    nameWithType: ConnectionSummary
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone(Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary)
    name: Clone
    nameWithType: ConnectionSummaryExtensions.Clone
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
    name: ConnectionSummary
    nameWithType: ConnectionSummary
    fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummary
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions
  commentId: T:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions
  parent: Microsoft.SqlTools.ServiceLayer.Connection.Contracts
  isExternal: false
  name: ConnectionSummaryExtensions
  nameWithType: ConnectionSummaryExtensions
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Password*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Password
  isExternal: false
  name: Password
  nameWithType: ConnectionDetails.Password
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Password
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AuthenticationType*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AuthenticationType
  isExternal: false
  name: AuthenticationType
  nameWithType: ConnectionDetails.AuthenticationType
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AuthenticationType
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Encrypt*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Encrypt
  isExternal: false
  name: Encrypt
  nameWithType: ConnectionDetails.Encrypt
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Encrypt
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TrustServerCertificate*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TrustServerCertificate
  isExternal: false
  name: TrustServerCertificate
  nameWithType: ConnectionDetails.TrustServerCertificate
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TrustServerCertificate
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PersistSecurityInfo*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PersistSecurityInfo
  isExternal: false
  name: PersistSecurityInfo
  nameWithType: ConnectionDetails.PersistSecurityInfo
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PersistSecurityInfo
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectTimeout*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectTimeout
  isExternal: false
  name: ConnectTimeout
  nameWithType: ConnectionDetails.ConnectTimeout
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectTimeout
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryCount*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryCount
  isExternal: false
  name: ConnectRetryCount
  nameWithType: ConnectionDetails.ConnectRetryCount
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryCount
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryInterval*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryInterval
  isExternal: false
  name: ConnectRetryInterval
  nameWithType: ConnectionDetails.ConnectRetryInterval
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryInterval
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationName*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationName
  isExternal: false
  name: ApplicationName
  nameWithType: ConnectionDetails.ApplicationName
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationName
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.WorkstationId*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.WorkstationId
  isExternal: false
  name: WorkstationId
  nameWithType: ConnectionDetails.WorkstationId
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.WorkstationId
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationIntent*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationIntent
  isExternal: false
  name: ApplicationIntent
  nameWithType: ConnectionDetails.ApplicationIntent
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationIntent
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.CurrentLanguage*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.CurrentLanguage
  isExternal: false
  name: CurrentLanguage
  nameWithType: ConnectionDetails.CurrentLanguage
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.CurrentLanguage
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Pooling*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Pooling
  isExternal: false
  name: Pooling
  nameWithType: ConnectionDetails.Pooling
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Pooling
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MaxPoolSize*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MaxPoolSize
  isExternal: false
  name: MaxPoolSize
  nameWithType: ConnectionDetails.MaxPoolSize
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MaxPoolSize
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MinPoolSize*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MinPoolSize
  isExternal: false
  name: MinPoolSize
  nameWithType: ConnectionDetails.MinPoolSize
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MinPoolSize
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.LoadBalanceTimeout*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.LoadBalanceTimeout
  isExternal: false
  name: LoadBalanceTimeout
  nameWithType: ConnectionDetails.LoadBalanceTimeout
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.LoadBalanceTimeout
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Replication*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Replication
  isExternal: false
  name: Replication
  nameWithType: ConnectionDetails.Replication
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.Replication
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AttachDbFilename*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AttachDbFilename
  isExternal: false
  name: AttachDbFilename
  nameWithType: ConnectionDetails.AttachDbFilename
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.AttachDbFilename
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.FailoverPartner*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.FailoverPartner
  isExternal: false
  name: FailoverPartner
  nameWithType: ConnectionDetails.FailoverPartner
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.FailoverPartner
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultiSubnetFailover*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultiSubnetFailover
  isExternal: false
  name: MultiSubnetFailover
  nameWithType: ConnectionDetails.MultiSubnetFailover
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultiSubnetFailover
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultipleActiveResultSets*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultipleActiveResultSets
  isExternal: false
  name: MultipleActiveResultSets
  nameWithType: ConnectionDetails.MultipleActiveResultSets
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.MultipleActiveResultSets
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PacketSize*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PacketSize
  isExternal: false
  name: PacketSize
  nameWithType: ConnectionDetails.PacketSize
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.PacketSize
- uid: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TypeSystemVersion*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TypeSystemVersion
  isExternal: false
  name: TypeSystemVersion
  nameWithType: ConnectionDetails.TypeSystemVersion
  fullName: Microsoft.SqlTools.ServiceLayer.Connection.Contracts.ConnectionDetails.TypeSystemVersion
