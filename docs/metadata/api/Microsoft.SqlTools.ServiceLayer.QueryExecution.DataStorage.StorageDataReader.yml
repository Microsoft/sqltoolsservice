### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  commentId: T:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  id: StorageDataReader
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  children:
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.#ctor(System.Data.Common.DbDataReader)
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.Columns
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.DbDataReader
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetBytesWithMaxCapacity(System.Int32,System.Int32)
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetCharsWithMaxCapacity(System.Int32,System.Int32)
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValue(System.Int32)
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValues(System.Object[])
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetXmlWithMaxCapacity(System.Int32,System.Int32)
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.HasLongColumns
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.IsDBNull(System.Int32)
  - Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.ReadAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: StorageDataReader
  nameWithType: StorageDataReader
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  type: Class
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: StorageDataReader
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
    startLine: 23
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  summary: "\nWrapper around a DbData reader to perform some special operations more simply\n"
  example: []
  syntax:
    content: public class StorageDataReader
    content.vb: Public Class StorageDataReader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.#ctor(System.Data.Common.DbDataReader)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.#ctor(System.Data.Common.DbDataReader)
  id: '#ctor(System.Data.Common.DbDataReader)'
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  langs:
  - csharp
  - vb
  name: StorageDataReader(DbDataReader)
  nameWithType: StorageDataReader.StorageDataReader(DbDataReader)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.StorageDataReader(System.Data.Common.DbDataReader)
  type: Constructor
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: .ctor
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
    startLine: 47
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  summary: "\nConstructs a new wrapper around the provided reader\n"
  example: []
  syntax:
    content: public StorageDataReader(DbDataReader reader)
    content.vb: Public Sub New(reader As DbDataReader)
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: The reader to wrap around
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.Columns
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.Columns
  id: Columns
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  langs:
  - csharp
  - vb
  name: Columns
  nameWithType: StorageDataReader.Columns
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.Columns
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: Columns
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
    startLine: 67
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  summary: "\nAll the columns that this reader currently contains\n"
  example: []
  syntax:
    content: public DbColumnWrapper[] Columns { get; }
    content.vb: Public ReadOnly Property Columns As DbColumnWrapper()
    parameters: []
    return:
      type: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper[]
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.Columns*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.DbDataReader
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.DbDataReader
  id: DbDataReader
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  langs:
  - csharp
  - vb
  name: DbDataReader
  nameWithType: StorageDataReader.DbDataReader
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.DbDataReader
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: DbDataReader
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
    startLine: 72
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  summary: "\nThe <xref href=\"Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.DbDataReader\" data-throw-if-not-resolved=\"false\"></xref> that will be read from\n"
  example: []
  syntax:
    content: public DbDataReader DbDataReader { get; }
    content.vb: Public ReadOnly Property DbDataReader As DbDataReader
    parameters: []
    return:
      type: System.Data.Common.DbDataReader
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.DbDataReader*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.HasLongColumns
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.HasLongColumns
  id: HasLongColumns
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  langs:
  - csharp
  - vb
  name: HasLongColumns
  nameWithType: StorageDataReader.HasLongColumns
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.HasLongColumns
  type: Property
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: HasLongColumns
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
    startLine: 77
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  summary: "\nWhether or not any of the columns of this reader are 'long', such as nvarchar(max)\n"
  example: []
  syntax:
    content: public bool HasLongColumns { get; }
    content.vb: Public ReadOnly Property HasLongColumns As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.HasLongColumns*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.ReadAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  langs:
  - csharp
  - vb
  name: ReadAsync(CancellationToken)
  nameWithType: StorageDataReader.ReadAsync(CancellationToken)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.ReadAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: ReadAsync
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
    startLine: 88
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  summary: "\nPass-through to DbDataReader.ReadAsync()\n"
  example: []
  syntax:
    content: public Task<bool> ReadAsync(CancellationToken cancellationToken)
    content.vb: Public Function ReadAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to use for cancelling a query
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.ReadAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValue(System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  langs:
  - csharp
  - vb
  name: GetValue(Int32)
  nameWithType: StorageDataReader.GetValue(Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValue(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetValue
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
    startLine: 98
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  summary: "\nRetrieves a value\n"
  example: []
  syntax:
    content: public object GetValue(int i)
    content.vb: Public Function GetValue(i As Integer) As Object
    parameters:
    - id: i
      type: System.Int32
      description: Column ordinal
    return:
      type: System.Object
      description: The value of the given column
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValues(System.Object[])
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  langs:
  - csharp
  - vb
  name: GetValues(Object[])
  nameWithType: StorageDataReader.GetValues(Object[])
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValues(System.Object[])
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetValues
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
    startLine: 107
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  summary: "\nStores all values of the current row into the provided object array\n"
  example: []
  syntax:
    content: public void GetValues(object[] values)
    content.vb: Public Sub GetValues(values As Object())
    parameters:
    - id: values
      type: System.Object[]
      description: Where to store the values from this row
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValues*
  nameWithType.vb: StorageDataReader.GetValues(Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValues(System.Object())
  name.vb: GetValues(Object())
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.IsDBNull(System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  langs:
  - csharp
  - vb
  name: IsDBNull(Int32)
  nameWithType: StorageDataReader.IsDBNull(Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.IsDBNull(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: IsDBNull
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
    startLine: 124
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  summary: "\nWhether or not the cell of the given column at the current row is a DBNull\n"
  example: []
  syntax:
    content: public bool IsDBNull(int i)
    content.vb: Public Function IsDBNull(i As Integer) As Boolean
    parameters:
    - id: i
      type: System.Int32
      description: Column ordinal
    return:
      type: System.Boolean
      description: True if the cell is DBNull, false otherwise
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.IsDBNull*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetBytesWithMaxCapacity(System.Int32,System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetBytesWithMaxCapacity(System.Int32,System.Int32)
  id: GetBytesWithMaxCapacity(System.Int32,System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  langs:
  - csharp
  - vb
  name: GetBytesWithMaxCapacity(Int32, Int32)
  nameWithType: StorageDataReader.GetBytesWithMaxCapacity(Int32, Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetBytesWithMaxCapacity(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetBytesWithMaxCapacity
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
    startLine: 139
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  summary: "\nRetrieves bytes with a maximum number of bytes to return\n"
  example: []
  syntax:
    content: public byte[] GetBytesWithMaxCapacity(int iCol, int maxNumBytesToReturn)
    content.vb: Public Function GetBytesWithMaxCapacity(iCol As Integer, maxNumBytesToReturn As Integer) As Byte()
    parameters:
    - id: iCol
      type: System.Int32
      description: Column ordinal
    - id: maxNumBytesToReturn
      type: System.Int32
      description: Number of bytes to return at maximum
    return:
      type: System.Byte[]
      description: Byte array
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetBytesWithMaxCapacity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetCharsWithMaxCapacity(System.Int32,System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetCharsWithMaxCapacity(System.Int32,System.Int32)
  id: GetCharsWithMaxCapacity(System.Int32,System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  langs:
  - csharp
  - vb
  name: GetCharsWithMaxCapacity(Int32, Int32)
  nameWithType: StorageDataReader.GetCharsWithMaxCapacity(Int32, Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetCharsWithMaxCapacity(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetCharsWithMaxCapacity
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
    startLine: 181
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  summary: "\nRetrieves characters with a maximum number of charss to return\n"
  example: []
  syntax:
    content: public string GetCharsWithMaxCapacity(int iCol, int maxCharsToReturn)
    content.vb: Public Function GetCharsWithMaxCapacity(iCol As Integer, maxCharsToReturn As Integer) As String
    parameters:
    - id: iCol
      type: System.Int32
      description: Column ordinal
    - id: maxCharsToReturn
      type: System.Int32
      description: Number of chars to return at maximum
    return:
      type: System.String
      description: String
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetCharsWithMaxCapacity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetXmlWithMaxCapacity(System.Int32,System.Int32)
  commentId: M:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetXmlWithMaxCapacity(System.Int32,System.Int32)
  id: GetXmlWithMaxCapacity(System.Int32,System.Int32)
  parent: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader
  langs:
  - csharp
  - vb
  name: GetXmlWithMaxCapacity(Int32, Int32)
  nameWithType: StorageDataReader.GetXmlWithMaxCapacity(Int32, Int32)
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetXmlWithMaxCapacity(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
      branch: master
      repo: https://kburtram:67c6623fc506400046096af249535f684d9ea40b@github.com/Microsoft/sqltoolsservice.git
    id: GetXmlWithMaxCapacity
    path: ../src/Microsoft.SqlTools.ServiceLayer/QueryExecution/DataStorage/StorageDataReader.cs
    startLine: 227
  assemblies:
  - Microsoft.SqlTools.ServiceLayer
  namespace: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  summary: "\nRetrieves xml with a maximum number of bytes to return\n"
  example: []
  syntax:
    content: public string GetXmlWithMaxCapacity(int iCol, int maxCharsToReturn)
    content.vb: Public Function GetXmlWithMaxCapacity(iCol As Integer, maxCharsToReturn As Integer) As String
    parameters:
    - id: iCol
      type: System.Int32
      description: Column ordinal
    - id: maxCharsToReturn
      type: System.Int32
      description: Number of chars to return at maximum
    return:
      type: System.String
      description: String
  overload: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetXmlWithMaxCapacity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  commentId: N:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  isExternal: false
  name: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  nameWithType: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.#ctor*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.#ctor
  isExternal: false
  name: StorageDataReader
  nameWithType: StorageDataReader.StorageDataReader
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.StorageDataReader
- uid: System.Data.Common.DbDataReader
  commentId: T:System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: true
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.Columns*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.Columns
  isExternal: false
  name: Columns
  nameWithType: StorageDataReader.Columns
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.Columns
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper[]
  name: DbColumnWrapper[]
  nameWithType: DbColumnWrapper[]
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper[]
  nameWithType.vb: DbColumnWrapper()
  fullname.vb: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper()
  name.vb: DbColumnWrapper()
  spec.csharp:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper
    name: DbColumnWrapper
    nameWithType: DbColumnWrapper
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper
    name: DbColumnWrapper
    nameWithType: DbColumnWrapper
    fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.DbDataReader
  commentId: P:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.DbDataReader
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.DbDataReader*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.DbDataReader
  isExternal: false
  name: DbDataReader
  nameWithType: StorageDataReader.DbDataReader
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.DbDataReader
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.HasLongColumns*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.HasLongColumns
  isExternal: false
  name: HasLongColumns
  nameWithType: StorageDataReader.HasLongColumns
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.HasLongColumns
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.ReadAsync*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.ReadAsync
  isExternal: false
  name: ReadAsync
  nameWithType: StorageDataReader.ReadAsync
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.ReadAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValue*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValue
  isExternal: false
  name: GetValue
  nameWithType: StorageDataReader.GetValue
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValue
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValues*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValues
  isExternal: false
  name: GetValues
  nameWithType: StorageDataReader.GetValues
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValues
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.IsDBNull*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.IsDBNull
  isExternal: false
  name: IsDBNull
  nameWithType: StorageDataReader.IsDBNull
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.IsDBNull
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetBytesWithMaxCapacity*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetBytesWithMaxCapacity
  isExternal: false
  name: GetBytesWithMaxCapacity
  nameWithType: StorageDataReader.GetBytesWithMaxCapacity
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetBytesWithMaxCapacity
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetCharsWithMaxCapacity*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetCharsWithMaxCapacity
  isExternal: false
  name: GetCharsWithMaxCapacity
  nameWithType: StorageDataReader.GetCharsWithMaxCapacity
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetCharsWithMaxCapacity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetXmlWithMaxCapacity*
  commentId: Overload:Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetXmlWithMaxCapacity
  isExternal: false
  name: GetXmlWithMaxCapacity
  nameWithType: StorageDataReader.GetXmlWithMaxCapacity
  fullName: Microsoft.SqlTools.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetXmlWithMaxCapacity
