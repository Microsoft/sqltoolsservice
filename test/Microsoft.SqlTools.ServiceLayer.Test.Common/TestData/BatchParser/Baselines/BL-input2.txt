Lexer tokenized input:
======================
[C:/* Lexer tests */][NL:
][Setvar::setvar][WS: ][T:a][WS: ][T:"df df""
"][NL:
][T:ABC][NL:
][Include::r][NL:
][Include::r][WS: ][T:input2.txt][NL:
][WS:	][Include::r][NL:
][Setvar::setvar][WS:	][NL:
][Setvar::setvar][NL:
][T::setvariable asd][NL:
][T:GOTO][NL:
][T::on errors][NL:
][OnError::on error][WS: ][T:exit][NL:
][OnError::on error][WS: ][T:ignore][NL:
][T:DEF][NL:
][NL:
][Go:go][NL:
][Go:go][NL:
][T:abc][C:--def][NL:
][WS:	][T:select '$$' '$$(s)asd)' werwer$$(Y)ss][NL:
][Setvar::Setvar][WS:   ][T:x][WS:   ][T:y][NL:
][Setvar::Setvar][WS:   ][T:Y][WS:   ][T:"VALUE OF Y"][NL:
][WS:  ][T:from    x][NL:
][WS:   ][Go:GO][WS: ][T:2][NL:
][WS:  ][Setvar::SETVAR][WS: ][T:Z][WS: ][T:"WE"][NL:
][T::include x][NL:
][T:This is a comment: ][C:/*
:SETVAR w e
"
*/][NL:
][T:Select 1][NL:
][Go:go][WS: ][T:3][NL:
][OnError::on error][WS: ][T:exit][NL:
][Go:go][NL:
][WS: ][T:select 2Y==>$(Y)][NL:
][WS: ][T:A==>$(a)<==][NL:
][Setvar::setvar][WS: ][T:x][WS: ][T:"y"][NL:
][Setvar::setvar][WS: ][T:z][WS: ][T:"z"][NL:
][T:select $(x_y)][NL:
][WS: ][T:from DUAL][NL:
][NL:
][WS: ][C:-- on error commands][NL:
][WS: ][OnError::on error][WS: ][T:exit][NL:
][WS: ][OnError::on error][WS: ][T:ignore][NL:
][WS: ][OnError::on error][WS: ][T:$(variable)][NL:
][WS: ][OnError::on error][WS: ][T:invalid][WS: ][T:value][NL:
][NL:
][WS: ][C:-- Line comment][NL:
][WS: ][C:/* Multi line
    block comment
-- with nested line comment */][NL:
][NL:
][C:/*** block comment 2 ***/][NL:
][T:select '/*', '*/'][NL:
][NL:
][C:-- Unsupported commands][NL:
][Reset::reset][NL:
][Ed::ed][NL:
][Execute::!!][NL:
][Quit::quit][NL:
][Exit::exit][NL:
][Serverlist::serverlist][NL:
][List::list][NL:
][ErrorCommand::error][WS: ][T:errorfile.txt][NL:
][Out::out][WS: ][T:stdout][NL:
][Perftrace::perftrace][WS: ][T:perftrace.txt][NL:
][Connect::connect][WS: ][T:server\instance][NL:
][Help::help][NL:
][Xml::xml][WS: ][T:on][NL:
][ListVar::listvar][NL:
][Eof:]
Tokens:
=======
[Token Comment at TS-input2.txt(1:1 [0] - 1:18 [17]): '/* Lexer tests */']
[Token NewLine at TS-input2.txt(1:18 [17] - 2:1 [18]): '\n']
[Token Setvar at TS-input2.txt(2:1 [18] - 2:8 [25]): ':setvar']
[Token Whitespace at TS-input2.txt(2:8 [25] - 2:9 [26]): ' ']
[Token Text at TS-input2.txt(2:9 [26] - 2:10 [27]): 'a']
[Token Whitespace at TS-input2.txt(2:10 [27] - 2:11 [28]): ' ']
[Token Text at TS-input2.txt(2:11 [28] - 3:2 [38]): '"df df""\n"']
[Token NewLine at TS-input2.txt(3:2 [38] - 4:1 [39]): '\n']
[Token Text at TS-input2.txt(4:1 [39] - 4:4 [42]): 'ABC']
[Token NewLine at TS-input2.txt(4:4 [42] - 5:1 [43]): '\n']
[Token Include at TS-input2.txt(5:1 [43] - 5:3 [45]): ':r']
[Token NewLine at TS-input2.txt(5:3 [45] - 6:1 [46]): '\n']
[Token Include at TS-input2.txt(6:1 [46] - 6:3 [48]): ':r']
[Token Whitespace at TS-input2.txt(6:3 [48] - 6:4 [49]): ' ']
[Token Text at TS-input2.txt(6:4 [49] - 6:14 [59]): 'input2.txt']
[Token NewLine at TS-input2.txt(6:14 [59] - 7:1 [60]): '\n']
[Token Whitespace at TS-input2.txt(7:1 [60] - 7:2 [61]): '\t']
[Token Include at TS-input2.txt(7:2 [61] - 7:4 [63]): ':r']
[Token NewLine at TS-input2.txt(7:4 [63] - 8:1 [64]): '\n']
[Token Setvar at TS-input2.txt(8:1 [64] - 8:8 [71]): ':setvar']
[Token Whitespace at TS-input2.txt(8:8 [71] - 8:9 [72]): '\t']
[Token NewLine at TS-input2.txt(8:9 [72] - 9:1 [73]): '\n']
[Token Setvar at TS-input2.txt(9:1 [73] - 9:8 [80]): ':setvar']
[Token NewLine at TS-input2.txt(9:8 [80] - 10:1 [81]): '\n']
[Token Text at TS-input2.txt(10:1 [81] - 10:17 [97]): ':setvariable asd']
[Token NewLine at TS-input2.txt(10:17 [97] - 11:1 [98]): '\n']
[Token Text at TS-input2.txt(11:1 [98] - 11:5 [102]): 'GOTO']
[Token NewLine at TS-input2.txt(11:5 [102] - 12:1 [103]): '\n']
[Token Text at TS-input2.txt(12:1 [103] - 12:11 [113]): ':on errors']
[Token NewLine at TS-input2.txt(12:11 [113] - 13:1 [114]): '\n']
[Token OnError at TS-input2.txt(13:1 [114] - 13:10 [123]): ':on error']
[Token Whitespace at TS-input2.txt(13:10 [123] - 13:11 [124]): ' ']
[Token Text at TS-input2.txt(13:11 [124] - 13:15 [128]): 'exit']
[Token NewLine at TS-input2.txt(13:15 [128] - 14:1 [129]): '\n']
[Token OnError at TS-input2.txt(14:1 [129] - 14:10 [138]): ':on error']
[Token Whitespace at TS-input2.txt(14:10 [138] - 14:11 [139]): ' ']
[Token Text at TS-input2.txt(14:11 [139] - 14:17 [145]): 'ignore']
[Token NewLine at TS-input2.txt(14:17 [145] - 15:1 [146]): '\n']
[Token Text at TS-input2.txt(15:1 [146] - 15:4 [149]): 'DEF']
[Token NewLine at TS-input2.txt(15:4 [149] - 16:1 [150]): '\n']
[Token NewLine at TS-input2.txt(16:1 [150] - 17:1 [151]): '\n']
[Token Go at TS-input2.txt(17:1 [151] - 17:3 [153]): 'go']
[Token NewLine at TS-input2.txt(17:3 [153] - 18:1 [154]): '\n']
[Token Go at TS-input2.txt(18:1 [154] - 18:3 [156]): 'go']
[Token NewLine at TS-input2.txt(18:3 [156] - 19:1 [157]): '\n']
[Token Text at TS-input2.txt(19:1 [157] - 19:4 [160]): 'abc']
[Token Comment at TS-input2.txt(19:4 [160] - 19:9 [165]): '--def']
[Token NewLine at TS-input2.txt(19:9 [165] - 20:1 [166]): '\n']
[Token Whitespace at TS-input2.txt(20:1 [166] - 20:2 [167]): '\t']
[Token Text at TS-input2.txt(20:2 [167] - 20:39 [204]): 'select '$$' '$$(s)asd)' werwer$$(Y)ss']
[Token NewLine at TS-input2.txt(20:39 [204] - 21:1 [205]): '\n']
[Token Setvar at TS-input2.txt(21:1 [205] - 21:8 [212]): ':Setvar']
[Token Whitespace at TS-input2.txt(21:8 [212] - 21:11 [215]): '   ']
[Token Text at TS-input2.txt(21:11 [215] - 21:12 [216]): 'x']
[Token Whitespace at TS-input2.txt(21:12 [216] - 21:15 [219]): '   ']
[Token Text at TS-input2.txt(21:15 [219] - 21:16 [220]): 'y']
[Token NewLine at TS-input2.txt(21:16 [220] - 22:1 [221]): '\n']
[Token Setvar at TS-input2.txt(22:1 [221] - 22:8 [228]): ':Setvar']
[Token Whitespace at TS-input2.txt(22:8 [228] - 22:11 [231]): '   ']
[Token Text at TS-input2.txt(22:11 [231] - 22:12 [232]): 'Y']
[Token Whitespace at TS-input2.txt(22:12 [232] - 22:15 [235]): '   ']
[Token Text at TS-input2.txt(22:15 [235] - 22:27 [247]): '"VALUE OF Y"']
[Token NewLine at TS-input2.txt(22:27 [247] - 23:1 [248]): '\n']
[Token Whitespace at TS-input2.txt(23:1 [248] - 23:3 [250]): '  ']
[Token Text at TS-input2.txt(23:3 [250] - 23:12 [259]): 'from    x']
[Token NewLine at TS-input2.txt(23:12 [259] - 24:1 [260]): '\n']
[Token Whitespace at TS-input2.txt(24:1 [260] - 24:4 [263]): '   ']
[Token Go at TS-input2.txt(24:4 [263] - 24:6 [265]): 'GO']
[Token Whitespace at TS-input2.txt(24:6 [265] - 24:7 [266]): ' ']
[Token Text at TS-input2.txt(24:7 [266] - 24:8 [267]): '2']
[Token NewLine at TS-input2.txt(24:8 [267] - 25:1 [268]): '\n']
[Token Whitespace at TS-input2.txt(25:1 [268] - 25:3 [270]): '  ']
[Token Setvar at TS-input2.txt(25:3 [270] - 25:10 [277]): ':SETVAR']
[Token Whitespace at TS-input2.txt(25:10 [277] - 25:11 [278]): ' ']
[Token Text at TS-input2.txt(25:11 [278] - 25:12 [279]): 'Z']
[Token Whitespace at TS-input2.txt(25:12 [279] - 25:13 [280]): ' ']
[Token Text at TS-input2.txt(25:13 [280] - 25:17 [284]): '"WE"']
[Token NewLine at TS-input2.txt(25:17 [284] - 26:1 [285]): '\n']
[Token Text at TS-input2.txt(26:1 [285] - 26:11 [295]): ':include x']
[Token NewLine at TS-input2.txt(26:11 [295] - 27:1 [296]): '\n']
[Token Text at TS-input2.txt(27:1 [296] - 27:20 [315]): 'This is a comment: ']
[Token Comment at TS-input2.txt(27:20 [315] - 30:3 [334]): '/*\n:SETVAR w e\n"\n*/']
[Token NewLine at TS-input2.txt(30:3 [334] - 31:1 [335]): '\n']
[Token Text at TS-input2.txt(31:1 [335] - 31:9 [343]): 'Select 1']
[Token NewLine at TS-input2.txt(31:9 [343] - 32:1 [344]): '\n']
[Token Go at TS-input2.txt(32:1 [344] - 32:3 [346]): 'go']
[Token Whitespace at TS-input2.txt(32:3 [346] - 32:4 [347]): ' ']
[Token Text at TS-input2.txt(32:4 [347] - 32:5 [348]): '3']
[Token NewLine at TS-input2.txt(32:5 [348] - 33:1 [349]): '\n']
[Token OnError at TS-input2.txt(33:1 [349] - 33:10 [358]): ':on error']
[Token Whitespace at TS-input2.txt(33:10 [358] - 33:11 [359]): ' ']
[Token Text at TS-input2.txt(33:11 [359] - 33:15 [363]): 'exit']
[Token NewLine at TS-input2.txt(33:15 [363] - 34:1 [364]): '\n']
[Token Go at TS-input2.txt(34:1 [364] - 34:3 [366]): 'go']
[Token NewLine at TS-input2.txt(34:3 [366] - 35:1 [367]): '\n']
[Token Whitespace at TS-input2.txt(35:1 [367] - 35:2 [368]): ' ']
[Token Text at TS-input2.txt(35:2 [368] - 35:18 [384]): 'select 2Y==>$(Y)']
[Token NewLine at TS-input2.txt(35:18 [384] - 36:1 [385]): '\n']
[Token Whitespace at TS-input2.txt(36:1 [385] - 36:2 [386]): ' ']
[Token Text at TS-input2.txt(36:2 [386] - 36:13 [397]): 'A==>$(a)<==']
[Token NewLine at TS-input2.txt(36:13 [397] - 37:1 [398]): '\n']
[Token Setvar at TS-input2.txt(37:1 [398] - 37:8 [405]): ':setvar']
[Token Whitespace at TS-input2.txt(37:8 [405] - 37:9 [406]): ' ']
[Token Text at TS-input2.txt(37:9 [406] - 37:10 [407]): 'x']
[Token Whitespace at TS-input2.txt(37:10 [407] - 37:11 [408]): ' ']
[Token Text at TS-input2.txt(37:11 [408] - 37:14 [411]): '"y"']
[Token NewLine at TS-input2.txt(37:14 [411] - 38:1 [412]): '\n']
[Token Setvar at TS-input2.txt(38:1 [412] - 38:8 [419]): ':setvar']
[Token Whitespace at TS-input2.txt(38:8 [419] - 38:9 [420]): ' ']
[Token Text at TS-input2.txt(38:9 [420] - 38:10 [421]): 'z']
[Token Whitespace at TS-input2.txt(38:10 [421] - 38:11 [422]): ' ']
[Token Text at TS-input2.txt(38:11 [422] - 38:14 [425]): '"z"']
[Token NewLine at TS-input2.txt(38:14 [425] - 39:1 [426]): '\n']
[Token Text at TS-input2.txt(39:1 [426] - 39:14 [439]): 'select $(x_y)']
[Token NewLine at TS-input2.txt(39:14 [439] - 40:1 [440]): '\n']
[Token Whitespace at TS-input2.txt(40:1 [440] - 40:2 [441]): ' ']
[Token Text at TS-input2.txt(40:2 [441] - 40:11 [450]): 'from DUAL']
[Token NewLine at TS-input2.txt(40:11 [450] - 41:1 [451]): '\n']
[Token NewLine at TS-input2.txt(41:1 [451] - 42:1 [452]): '\n']
[Token Whitespace at TS-input2.txt(42:1 [452] - 42:2 [453]): ' ']
[Token Comment at TS-input2.txt(42:2 [453] - 42:22 [473]): '-- on error commands']
[Token NewLine at TS-input2.txt(42:22 [473] - 43:1 [474]): '\n']
[Token Whitespace at TS-input2.txt(43:1 [474] - 43:2 [475]): ' ']
[Token OnError at TS-input2.txt(43:2 [475] - 43:11 [484]): ':on error']
[Token Whitespace at TS-input2.txt(43:11 [484] - 43:12 [485]): ' ']
[Token Text at TS-input2.txt(43:12 [485] - 43:16 [489]): 'exit']
[Token NewLine at TS-input2.txt(43:16 [489] - 44:1 [490]): '\n']
[Token Whitespace at TS-input2.txt(44:1 [490] - 44:2 [491]): ' ']
[Token OnError at TS-input2.txt(44:2 [491] - 44:11 [500]): ':on error']
[Token Whitespace at TS-input2.txt(44:11 [500] - 44:12 [501]): ' ']
[Token Text at TS-input2.txt(44:12 [501] - 44:18 [507]): 'ignore']
[Token NewLine at TS-input2.txt(44:18 [507] - 45:1 [508]): '\n']
[Token Whitespace at TS-input2.txt(45:1 [508] - 45:2 [509]): ' ']
[Token OnError at TS-input2.txt(45:2 [509] - 45:11 [518]): ':on error']
[Token Whitespace at TS-input2.txt(45:11 [518] - 45:12 [519]): ' ']
[Token Text at TS-input2.txt(45:12 [519] - 45:23 [530]): '$(variable)']
[Token NewLine at TS-input2.txt(45:23 [530] - 46:1 [531]): '\n']
[Token Whitespace at TS-input2.txt(46:1 [531] - 46:2 [532]): ' ']
[Token OnError at TS-input2.txt(46:2 [532] - 46:11 [541]): ':on error']
[Token Whitespace at TS-input2.txt(46:11 [541] - 46:12 [542]): ' ']
[Token Text at TS-input2.txt(46:12 [542] - 46:19 [549]): 'invalid']
[Token Whitespace at TS-input2.txt(46:19 [549] - 46:20 [550]): ' ']
[Token Text at TS-input2.txt(46:20 [550] - 46:25 [555]): 'value']
[Token NewLine at TS-input2.txt(46:25 [555] - 47:1 [556]): '\n']
[Token NewLine at TS-input2.txt(47:1 [556] - 48:1 [557]): '\n']
[Token Whitespace at TS-input2.txt(48:1 [557] - 48:2 [558]): ' ']
[Token Comment at TS-input2.txt(48:2 [558] - 48:17 [573]): '-- Line comment']
[Token NewLine at TS-input2.txt(48:17 [573] - 49:1 [574]): '\n']
[Token Whitespace at TS-input2.txt(49:1 [574] - 49:2 [575]): ' ']
[Token Comment at TS-input2.txt(49:2 [575] - 51:31 [637]): '/* Multi line\n    block comment\n-- with nested line comment */']
[Token NewLine at TS-input2.txt(51:31 [637] - 52:1 [638]): '\n']
[Token NewLine at TS-input2.txt(52:1 [638] - 53:1 [639]): '\n']
[Token Comment at TS-input2.txt(53:1 [639] - 53:26 [664]): '/*** block comment 2 ***/']
[Token NewLine at TS-input2.txt(53:26 [664] - 54:1 [665]): '\n']
[Token Text at TS-input2.txt(54:1 [665] - 54:18 [682]): 'select '/*', '*/'']
[Token NewLine at TS-input2.txt(54:18 [682] - 55:1 [683]): '\n']
[Token NewLine at TS-input2.txt(55:1 [683] - 56:1 [684]): '\n']
[Token Comment at TS-input2.txt(56:1 [684] - 56:24 [707]): '-- Unsupported commands']
[Token NewLine at TS-input2.txt(56:24 [707] - 57:1 [708]): '\n']
[Token Reset at TS-input2.txt(57:1 [708] - 57:7 [714]): ':reset']
[Token NewLine at TS-input2.txt(57:7 [714] - 58:1 [715]): '\n']
[Token Ed at TS-input2.txt(58:1 [715] - 58:4 [718]): ':ed']
[Token NewLine at TS-input2.txt(58:4 [718] - 59:1 [719]): '\n']
[Token Execute at TS-input2.txt(59:1 [719] - 59:4 [722]): ':!!']
[Token NewLine at TS-input2.txt(59:4 [722] - 60:1 [723]): '\n']
[Token Quit at TS-input2.txt(60:1 [723] - 60:6 [728]): ':quit']
[Token NewLine at TS-input2.txt(60:6 [728] - 61:1 [729]): '\n']
[Token Exit at TS-input2.txt(61:1 [729] - 61:6 [734]): ':exit']
[Token NewLine at TS-input2.txt(61:6 [734] - 62:1 [735]): '\n']
[Token Serverlist at TS-input2.txt(62:1 [735] - 62:12 [746]): ':serverlist']
[Token NewLine at TS-input2.txt(62:12 [746] - 63:1 [747]): '\n']
[Token List at TS-input2.txt(63:1 [747] - 63:6 [752]): ':list']
[Token NewLine at TS-input2.txt(63:6 [752] - 64:1 [753]): '\n']
[Token ErrorCommand at TS-input2.txt(64:1 [753] - 64:7 [759]): ':error']
[Token Whitespace at TS-input2.txt(64:7 [759] - 64:8 [760]): ' ']
[Token Text at TS-input2.txt(64:8 [760] - 64:21 [773]): 'errorfile.txt']
[Token NewLine at TS-input2.txt(64:21 [773] - 65:1 [774]): '\n']
[Token Out at TS-input2.txt(65:1 [774] - 65:5 [778]): ':out']
[Token Whitespace at TS-input2.txt(65:5 [778] - 65:6 [779]): ' ']
[Token Text at TS-input2.txt(65:6 [779] - 65:12 [785]): 'stdout']
[Token NewLine at TS-input2.txt(65:12 [785] - 66:1 [786]): '\n']
[Token Perftrace at TS-input2.txt(66:1 [786] - 66:11 [796]): ':perftrace']
[Token Whitespace at TS-input2.txt(66:11 [796] - 66:12 [797]): ' ']
[Token Text at TS-input2.txt(66:12 [797] - 66:25 [810]): 'perftrace.txt']
[Token NewLine at TS-input2.txt(66:25 [810] - 67:1 [811]): '\n']
[Token Connect at TS-input2.txt(67:1 [811] - 67:9 [819]): ':connect']
[Token Whitespace at TS-input2.txt(67:9 [819] - 67:10 [820]): ' ']
[Token Text at TS-input2.txt(67:10 [820] - 67:25 [835]): 'server\instance']
[Token NewLine at TS-input2.txt(67:25 [835] - 68:1 [836]): '\n']
[Token Help at TS-input2.txt(68:1 [836] - 68:6 [841]): ':help']
[Token NewLine at TS-input2.txt(68:6 [841] - 69:1 [842]): '\n']
[Token Xml at TS-input2.txt(69:1 [842] - 69:5 [846]): ':xml']
[Token Whitespace at TS-input2.txt(69:5 [846] - 69:6 [847]): ' ']
[Token Text at TS-input2.txt(69:6 [847] - 69:8 [849]): 'on']
[Token NewLine at TS-input2.txt(69:8 [849] - 70:1 [850]): '\n']
[Token ListVar at TS-input2.txt(70:1 [850] - 70:9 [858]): ':listvar']
[Token NewLine at TS-input2.txt(70:9 [858] - 71:1 [859]): '\n']
[Token Eof at TS-input2.txt(71:1 [859] - 71:1 [859]): '']

Setting variable a to [df df"
]
[PARSER ERROR: code TokenExpected at 5:3 [45] - 6:1 [46] in TS-input2.txt, token text: 
, message: Incorrect syntax was encountered while parsing '
'.]
